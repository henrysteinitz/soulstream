{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/stereo.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Dropzone from 'dropzone';\nimport Left from '../components/left.js';\nimport Right from '../components/right.js';\nexport default class Stereo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isPlaying: false,\n      song: null\n    });\n\n    _defineProperty(this, \"play\", song => {\n      if (song.id === this.state.playingId) {\n        this.setState({\n          isPlaying: true\n        }, () => this.audioRef.play());\n      } else {\n        this.setState({\n          isPlaying: true,\n          song\n        }, () => this.audioRef.play());\n      }\n    });\n\n    _defineProperty(this, \"pause\", () => {\n      this.setState({\n        isPlaying: false\n      }, () => this.audioRef.pause());\n    });\n\n    _defineProperty(this, 1, void 0);\n\n    _defineProperty(this, \"toggle\", () => {\n      this.state.playing ? this.pause() : this.play();\n    });\n  }\n\n  render() {\n    const {\n      song,\n      isPlaying\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left fake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Left, {\n          ref: \"left\",\n          toggle: this.toggle,\n          play: this.play,\n          pause: this.pause,\n          nowPlaying: song,\n          isPlaying: isPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Right, {\n          ref: \"right\",\n          toggle: this.toggle,\n          play: this.play,\n          pause: this.pause,\n          playingId: song && song.id,\n          isPlaying: isPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"audio\",\n          src: song && song.audioSrc,\n          ref: input => {\n            this.audioRef = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/stereo.js"],"names":["Component","ReactDOM","Dropzone","Left","Right","Stereo","isPlaying","song","id","state","playingId","setState","audioRef","play","pause","playing","render","toggle","audioSrc","input"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAErC;AACPM,MAAAA,SAAS,EAAE,KADJ;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAFqC;;AAAA,kCAOrCA,IAAD,IAAU;AAChB,UAAIA,IAAI,CAACC,EAAL,KAAY,KAAKC,KAAL,CAAWC,SAA3B,EAAsC;AACrC,aAAKC,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAE;AAAb,SAAd,EAAmC,MAAM,KAAKM,QAAL,CAAcC,IAAd,EAAzC;AACA,OAFD,MAEO;AACN,aAAKF,QAAL,CAAc;AACbL,UAAAA,SAAS,EAAE,IADE;AAEbC,UAAAA;AAFa,SAAd,EAES,MAAM,KAAKK,QAAL,CAAcC,IAAd,EAFf;AAGA;AACD,KAf4C;;AAAA,mCAiBrC,MAAM;AACb,WAAKF,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAoC,MAAM,KAAKM,QAAL,CAAcE,KAAd,EAA1C;AACA,KAnB4C;;AAAA,0BAoB9C,CApB8C;;AAAA,oCAqBpC,MAAM;AACd,WAAKL,KAAL,CAAWM,OAAX,GAAqB,KAAKD,KAAL,EAArB,GAAoC,KAAKD,IAAL,EAApC;AACA,KAvB4C;AAAA;;AAyB7CG,EAAAA,MAAM,GAAG;AACR,UAAM;AAAET,MAAAA,IAAF;AAAQD,MAAAA;AAAR,QAAsB,KAAKG,KAAjC;AACA,wBACC,QAAC,QAAD;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADD,eAEI,QAAC,IAAD;AAAM,UAAA,GAAG,EAAC,MAAV;AACC,UAAA,MAAM,EAAE,KAAKQ,MADd;AAEC,UAAA,IAAI,EAAE,KAAKJ,IAFZ;AAGC,UAAA,KAAK,EAAE,KAAKC,KAHb;AAIC,UAAA,UAAU,EAAEP,IAJb;AAKC,UAAA,SAAS,EAAED;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,OAAX;AACC,UAAA,MAAM,EAAE,KAAKW,MADd;AAEC,UAAA,IAAI,EAAE,KAAKJ,IAFZ;AAGC,UAAA,KAAK,EAAE,KAAKC,KAHb;AAIC,UAAA,SAAS,EAAEP,IAAI,IAAIA,IAAI,CAACC,EAJzB;AAKC,UAAA,SAAS,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcC;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,GAAG,EAAEC,IAAI,IAAIA,IAAI,CAACW,QAApC;AAA8C,UAAA,GAAG,EAAGC,KAAD,IAAW;AAAC,iBAAKP,QAAL,GAAgBO,KAAhB;AAAsB;AAArF;AAAA;AAAA;AAAA;AAAA,gBAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AA/C4C","sourcesContent":["import { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Dropzone from 'dropzone'\n\nimport Left from '../components/left.js'\nimport Right from '../components/right.js'\n\nexport default class Stereo extends Component {\n\n\tstate = {\n\t\tisPlaying: false,\n\t\tsong: null\n\t}\n\n\tplay = (song) => {\n\t\tif (song.id === this.state.playingId) {\n\t\t\tthis.setState({ isPlaying: true }, () => this.audioRef.play())\n\t\t} else {\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tsong }, () => this.audioRef.play())\n\t\t}\n\t}\n\n\tpause = () => {\n\t\tthis.setState({ isPlaying: false }, () => this.audioRef.pause())\n\t}\n1\n\ttoggle = () => {\n\t\tthis.state.playing ? this.pause() : this.play() \n\t}\n\n\trender() {\n\t\tconst { song, isPlaying } = this.state\n\t\treturn (\n\t\t\t<Dropzone>\n\t\t\t\t<div className=\"page-content\">\n\t\t\t\t\t<div className=\"left fake\" />\n\t\t    \t\t<Left ref=\"left\" \n\t\t    \t\t\ttoggle={this.toggle} \n\t\t    \t\t\tplay={this.play} \n\t\t    \t\t\tpause={this.pause} \n\t\t    \t\t\tnowPlaying={song}\n\t\t    \t\t\tisPlaying={isPlaying} />\n\t\t    \t\t<Right ref=\"right\" \n\t\t    \t\t\ttoggle={this.toggle} \n\t\t    \t\t\tplay={this.play} \n\t\t    \t\t\tpause={this.pause} \n\t\t    \t\t\tplayingId={song && song.id} \n\t\t    \t\t\tisPlaying={isPlaying} />\n\t\t\t\t\t<audio id=\"audio\" src={song && song.audioSrc} ref={(input) => {this.audioRef = input}} />\n\t\t\t\t</div>\n\t\t\t</Dropzone>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}