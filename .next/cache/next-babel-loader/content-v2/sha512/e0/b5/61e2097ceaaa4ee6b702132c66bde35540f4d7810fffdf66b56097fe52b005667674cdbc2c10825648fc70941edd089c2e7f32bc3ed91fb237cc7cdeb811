{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { PrismaClient } from '@prisma/client';\nimport Main from './main.js';\nexport async function getStaticProps() {\n  let prisma = new PrismaClient();\n  const stream = await prisma.track.findMany({\n    select: {\n      id: true,\n      title: true,\n      audioUrl: true,\n      artUrl: true,\n      url: true,\n      artists: true\n    }\n  });\n  return {\n    props: {\n      stream\n    }\n  };\n}\n\nconst Index = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Main, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/pages/index.js"],"names":["React","PrismaClient","Main","getStaticProps","prisma","stream","track","findMany","select","id","title","audioUrl","artUrl","url","artists","props","Index","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,eAAeC,cAAf,GAA+B;AACrC,MAAIC,MAAM,GAAG,IAAIH,YAAJ,EAAb;AACA,QAAMI,MAAM,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAaC,QAAb,CAAsB;AAC1CC,IAAAA,MAAM,EAAE;AACPC,MAAAA,EAAE,EAAE,IADG;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,MAAM,EAAE,IAJJ;AAKJC,MAAAA,GAAG,EAAE,IALD;AAMJC,MAAAA,OAAO,EAAE;AANL;AADkC,GAAtB,CAArB;AAUA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEV,MAAAA;AAAF;AAAT,GAAP;AACA;;AAED,MAAMW,KAAK,GAAID,KAAD,IAAW;AACxBE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,sBAAO,QAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAHD;;AAKA,eAAeC,KAAf","sourcesContent":["import React from \"react\"\nimport { PrismaClient } from '@prisma/client';\nimport Main from './main.js'\n\nexport async function getStaticProps(){\n\tlet prisma = new PrismaClient();\n\tconst stream = await prisma.track.findMany({\n\t\tselect: {\n\t\t\tid: true,\n\t    \ttitle: true,\n\t    \taudioUrl: true,\n\t    \tartUrl: true,\n\t    \turl: true,\n\t    \tartists: true\n\t\t}\n\t  })\n\treturn { props: { stream } }\n}\n\nconst Index = (props) => {\n\tconsole.log(props)\n\treturn <Main {...props} />\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}