{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/stereo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Left from '../components/left.js';\nimport Right from '../components/right.js';\n\nvar Stereo = /*#__PURE__*/function (_Component) {\n  _inherits(Stereo, _Component);\n\n  var _super = _createSuper(Stereo);\n\n  function Stereo() {\n    var _this;\n\n    _classCallCheck(this, Stereo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isPlaying: false,\n      song: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"play\", function (song) {\n      if (song.id === _this.state.playingId) {\n        _this.setState({\n          playing: true\n        }, function () {\n          return _this.audioRef.play();\n        });\n      } else {\n        _this.setState({\n          playing: true,\n          song: song\n        }, function () {\n          return _this.audioRef.play();\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pause\", function () {\n      _this.setState({\n        isPlaying: false\n      }, function () {\n        return _this.audioRef.pause();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), 1, void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.state.playing ? _this.pause() : _this.play();\n    });\n\n    return _this;\n  }\n\n  _createClass(Stereo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          song = _this$state.song,\n          isPlaying = _this$state.isPlaying;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left fake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Left, {\n          ref: \"left\",\n          toggle: this.toggle,\n          play: this.play,\n          pause: this.pause,\n          nowPlaying: song,\n          isPlaying: isPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Right, {\n          ref: \"right\",\n          toggle: this.toggle,\n          play: this.play,\n          pause: this.pause,\n          playingId: song && song.id,\n          isPlaying: isPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"audio\",\n          src: song && song.audioSrc,\n          ref: function ref(input) {\n            _this2.audioRef = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Stereo;\n}(Component);\n\nexport { Stereo as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/stereo.js"],"names":["Component","ReactDOM","Left","Right","Stereo","isPlaying","song","id","state","playingId","setState","playing","audioRef","play","pause","toggle","audioSrc","input"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;IAEqBC,M;;;;;;;;;;;;;;;;4DAEZ;AACPC,MAAAA,SAAS,EAAE,KADJ;AAEPC,MAAAA,IAAI,EAAE;AAFC,K;;2DAKD,UAACA,IAAD,EAAU;AAChB,UAAIA,IAAI,CAACC,EAAL,KAAY,MAAKC,KAAL,CAAWC,SAA3B,EAAsC;AACrC,cAAKC,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd,EAAiC;AAAA,iBAAM,MAAKC,QAAL,CAAcC,IAAd,EAAN;AAAA,SAAjC;AACA,OAFD,MAEO;AACN,cAAKH,QAAL,CAAc;AACbC,UAAAA,OAAO,EAAE,IADI;AAEbL,UAAAA,IAAI,EAAJA;AAFa,SAAd,EAES;AAAA,iBAAM,MAAKM,QAAL,CAAcC,IAAd,EAAN;AAAA,SAFT;AAGA;AACD,K;;4DAEO,YAAM;AACb,YAAKH,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAoC;AAAA,eAAM,MAAKO,QAAL,CAAcE,KAAd,EAAN;AAAA,OAApC;AACA,K;;mDACF,C;;6DACU,YAAM;AACd,YAAKN,KAAL,CAAWG,OAAX,GAAqB,MAAKG,KAAL,EAArB,GAAoC,MAAKD,IAAL,EAApC;AACA,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACoB,KAAKL,KADzB;AAAA,UACAF,IADA,eACAA,IADA;AAAA,UACMD,SADN,eACMA,SADN;AAER,0BACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADD,eAEI,QAAC,IAAD;AAAM,UAAA,GAAG,EAAC,MAAV;AACC,UAAA,MAAM,EAAE,KAAKU,MADd;AAEC,UAAA,IAAI,EAAE,KAAKF,IAFZ;AAGC,UAAA,KAAK,EAAE,KAAKC,KAHb;AAIC,UAAA,UAAU,EAAER,IAJb;AAKC,UAAA,SAAS,EAAED;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,OAAX;AACC,UAAA,MAAM,EAAE,KAAKU,MADd;AAEC,UAAA,IAAI,EAAE,KAAKF,IAFZ;AAGC,UAAA,KAAK,EAAE,KAAKC,KAHb;AAIC,UAAA,SAAS,EAAER,IAAI,IAAIA,IAAI,CAACC,EAJzB;AAKC,UAAA,SAAS,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcC;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,GAAG,EAAEC,IAAI,IAAIA,IAAI,CAACU,QAApC;AAA8C,UAAA,GAAG,EAAE,aAACC,KAAD,EAAW;AAAC,YAAA,MAAI,CAACL,QAAL,GAAgBK,KAAhB;AAAsB;AAArF;AAAA;AAAA;AAAA;AAAA,gBAdD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAkBA;;;;EA7CkCjB,S;;SAAfI,M","sourcesContent":["import { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Left from '../components/left.js'\nimport Right from '../components/right.js'\n\nexport default class Stereo extends Component {\n\n\tstate = {\n\t\tisPlaying: false,\n\t\tsong: null\n\t}\n\n\tplay = (song) => {\n\t\tif (song.id === this.state.playingId) {\n\t\t\tthis.setState({ playing: true }, () => this.audioRef.play())\n\t\t} else {\n\t\t\tthis.setState({ \n\t\t\t\tplaying: true, \n\t\t\t\tsong }, () => this.audioRef.play())\n\t\t}\n\t}\n\n\tpause = () => {\n\t\tthis.setState({ isPlaying: false }, () => this.audioRef.pause())\n\t}\n1\n\ttoggle = () => {\n\t\tthis.state.playing ? this.pause() : this.play() \n\t}\n\n\trender() {\n\t\tconst { song, isPlaying } = this.state\n\t\treturn (\n\t\t\t<div className=\"page-content\">\n\t\t\t\t<div className=\"left fake\" />\n\t    \t\t<Left ref=\"left\" \n\t    \t\t\ttoggle={this.toggle} \n\t    \t\t\tplay={this.play} \n\t    \t\t\tpause={this.pause} \n\t    \t\t\tnowPlaying={song}\n\t    \t\t\tisPlaying={isPlaying} />\n\t    \t\t<Right ref=\"right\" \n\t    \t\t\ttoggle={this.toggle} \n\t    \t\t\tplay={this.play} \n\t    \t\t\tpause={this.pause} \n\t    \t\t\tplayingId={song && song.id} \n\t    \t\t\tisPlaying={isPlaying} />\n\t\t\t\t<audio id=\"audio\" src={song && song.audioSrc} ref={(input) => {this.audioRef = input}} />\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}