{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/time.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport Draggable from 'react-draggable';\nimport classnames from 'classnames';\nexport default class Time extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      scrubbingWidth: null\n    });\n\n    _defineProperty(this, \"handleStart\", e => {\n      this.setState({\n        scrubbingWidth: e.clientX - this.timeRef.getBoundingClientRect().left\n      });\n    });\n\n    _defineProperty(this, \"handleEnd\", () => {\n      this.setState({\n        scrubbingWidth: null\n      });\n    });\n  }\n\n  render() {\n    const {\n      screen,\n      currentTime,\n      totalTime\n    } = this.props;\n    const {\n      scrubbingWidth\n    } = this.state;\n    const secretWidth = 10000;\n    const widthValue = scrubbingWidth || currentTime / totalTime * 100;\n    const width = `calc(${secretWidth}px + ${widthValue}%)`;\n    const style = widthValue ? {\n      width\n    } : {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: input => {\n          this.timeRef = input;\n        },\n        className: classnames(\"time\", {\n          'screen-time': screen\n        }),\n        children: /*#__PURE__*/_jsxDEV(Draggable, {\n          axis: \"x\",\n          onStart: this.handleStart,\n          onEnd: this.handleEnd,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-scrubber\",\n            style: style\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/time.js"],"names":["Component","Draggable","classnames","Time","scrubbingWidth","e","setState","clientX","timeRef","getBoundingClientRect","left","render","screen","currentTime","totalTime","props","state","secretWidth","widthValue","width","style","input","handleStart","handleEnd"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;;AAAA,mCACnC;AACPI,MAAAA,cAAc,EAAE;AADT,KADmC;;AAAA,yCAK5BC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACbF,QAAAA,cAAc,EAAEC,CAAC,CAACE,OAAF,GAAY,KAAKC,OAAL,CAAaC,qBAAb,GAAqCC;AADpD,OAAd;AAGA,KAT0C;;AAAA,uCAW/B,MAAM;AACjB,WAAKJ,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACA,KAb0C;AAAA;;AAe3CO,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,WAAV;AAAuBC,MAAAA;AAAvB,QAAqC,KAAKC,KAAhD;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAqB,KAAKY,KAAhC;AACA,UAAMC,WAAW,GAAG,KAApB;AACA,UAAMC,UAAU,GAAGd,cAAc,IAAMS,WAAW,GAAGC,SAAf,GAA6B,GAAnE;AACA,UAAMK,KAAK,GAAI,QAAOF,WAAY,QAAQC,UAAY,IAAtD;AACA,UAAME,KAAK,GAAGF,UAAU,GAAG;AAAEC,MAAAA;AAAF,KAAH,GAAe,EAAvC;AAEA,wBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAK,QAAA,GAAG,EAAGE,KAAD,IAAW;AAAC,eAAKb,OAAL,GAAea,KAAf;AAAqB,SAA3C;AAA6C,QAAA,SAAS,EAAEnB,UAAU,CAAC,MAAD,EAAS;AAAE,yBAAeU;AAAjB,SAAT,CAAlE;AAAA,+BACC,QAAC,SAAD;AACC,UAAA,IAAI,EAAC,GADN;AAEC,UAAA,OAAO,EAAE,KAAKU,WAFf;AAGC,UAAA,KAAK,EAAE,KAAKC,SAHb;AAAA,iCAKC;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,KAAK,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAaA;;AApC0C","sourcesContent":["import { Component } from 'react'\nimport Draggable from 'react-draggable'\nimport classnames from 'classnames'\n\nexport default class Time extends Component {\n\tstate = {\n\t\tscrubbingWidth: null\n\t}\n\n\thandleStart = (e) => {\n\t\tthis.setState({\n\t\t\tscrubbingWidth: e.clientX - this.timeRef.getBoundingClientRect().left\n\t\t})\n\t}\n\n\thandleEnd = () => {\n\t\tthis.setState({ scrubbingWidth: null })\n\t}\n\n\trender() {\n\t\tconst { screen, currentTime, totalTime } = this.props\n\t\tconst { scrubbingWidth } = this.state\n\t\tconst secretWidth = 10000\n\t\tconst widthValue = scrubbingWidth || ((currentTime / totalTime ) * 100)\n\t\tconst width = `calc(${secretWidth}px + ${(widthValue)}%)`\n\t\tconst style = widthValue ? { width } : {}\n\n\t\treturn (\n\t\t\t<div className=\"time-container\">\n\t\t\t\t<div ref={(input) => {this.timeRef = input}} className={classnames(\"time\", { 'screen-time': screen })}>\n\t\t\t\t\t<Draggable\n\t\t\t\t\t\taxis=\"x\"\n\t\t\t\t\t\tonStart={this.handleStart}\n\t\t\t\t\t\tonEnd={this.handleEnd}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"time-scrubber\" style={style} />\n\t\t\t\t\t</Draggable>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}