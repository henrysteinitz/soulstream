{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/left.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport classnames from 'classnames';\nimport { AtlasConsumer } from '../lib/atlas/atlas.js';\nimport Logo from './logo.js';\nimport Lyrics, { LyricsEditor } from './lyrics.js';\nimport Navigation from './navigation.js';\nimport Queue from './queue.js';\nimport Screen from './screen.js';\nimport SignIn from './signin.js';\nimport { VerseMap } from '../state/lyrics.js';\nimport { testLyrics } from '../test/test.js';\nconst showingOptions = {\n  chat: 'CHAT',\n  lyrics: 'LYRICS',\n  lyricsEditor: 'LYRICS_EDITOR',\n  queue: 'QUEUE'\n};\nexport default class Left extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showing: 'CHAT'\n    });\n\n    _defineProperty(this, \"showChat\", () => this.setState({\n      showing: showingOptions.chat\n    }));\n\n    _defineProperty(this, \"showQueue\", () => this.setState({\n      showingQueue: true,\n      showingLyricsEditor: false,\n      showingLyrics: false\n    }));\n\n    _defineProperty(this, \"showLyrics\", () => this.setState({\n      showingQueue: false,\n      showingLyricsEditor: false,\n      showingLyrics: true\n    }));\n\n    _defineProperty(this, \"showLyricsEditor\", () => this.setState({\n      showingQueue: false,\n      showingLyricsEditor: true,\n      showingLyrics: false\n    }));\n  }\n\n  render() {\n    const {\n      nowPlaying,\n      play,\n      pause,\n      isPlaying,\n      signedIn,\n      startSession,\n      currentTrackTime,\n      totalTrackTime,\n      skipTo,\n      screenOn,\n      toggleScreen,\n      artist,\n      account,\n      setTyping,\n      addVerse\n    } = this.props;\n    const {\n      showingLyrics,\n      showingLyricsEditor,\n      showingQueue,\n      showingChat\n    } = this.state;\n    const nowPlayingLyrics = nowPlaying && nowPlaying.verses;\n    console.log(nowPlayingLyrics);\n    return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n      children: atlas => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('left', 'real', {\n          side: screenOn,\n          bar: !screenOn\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Screen, {\n          on: screenOn || atlas.isArtist(),\n          play: play,\n          pause: pause,\n          nowPlaying: nowPlaying,\n          artist: artist,\n          atlas: atlas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n          pocketMode: !screenOn,\n          toggleScreen: toggleScreen,\n          play: play,\n          pause: pause,\n          isPlaying: isPlaying,\n          nowPlaying: nowPlaying,\n          signedIn: signedIn,\n          startSession: startSession,\n          currentTrackTime: currentTrackTime,\n          totalTrackTime: totalTrackTime,\n          skipTo: skipTo,\n          account: account,\n          showQueue: this.showQueue,\n          showLyrics: this.showLyrics,\n          showChat: this.showChat,\n          s: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), showingLyricsEditor && /*#__PURE__*/_jsxDEV(LyricsEditor, {\n          currentTrackTime: currentTrackTime,\n          totalTrackTime: totalTrackTime,\n          nowPlaying: nowPlaying,\n          setTyping: setTyping,\n          showLyrics: this.showLyrics,\n          addVerse: addVerse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 8\n        }, this), showingLyrics && /*#__PURE__*/_jsxDEV(Lyrics, {\n          lyrics: nowPlayingLyrics,\n          time: currentTrackTime,\n          showLyricsEditor: this.showLyricsEditor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 8\n        }, this), showingQueue && /*#__PURE__*/_jsxDEV(Queue, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/left.js"],"names":["Component","classnames","AtlasConsumer","Logo","Lyrics","LyricsEditor","Navigation","Queue","Screen","SignIn","VerseMap","testLyrics","showingOptions","chat","lyrics","lyricsEditor","queue","Left","showing","setState","showingQueue","showingLyricsEditor","showingLyrics","render","nowPlaying","play","pause","isPlaying","signedIn","startSession","currentTrackTime","totalTrackTime","skipTo","screenOn","toggleScreen","artist","account","setTyping","addVerse","props","showingChat","state","nowPlayingLyrics","verses","console","log","atlas","side","bar","isArtist","showQueue","showLyrics","showChat","showLyricsEditor"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport classnames from 'classnames'\n\nimport { AtlasConsumer } from '../lib/atlas/atlas.js'\nimport Logo from './logo.js'\nimport Lyrics, { LyricsEditor } from './lyrics.js'\nimport Navigation from './navigation.js'\nimport Queue from './queue.js'\nimport Screen from './screen.js'\nimport SignIn from './signin.js'\n\nimport { VerseMap } from '../state/lyrics.js'\nimport { testLyrics } from '../test/test.js' \n\nconst showingOptions = {\n\tchat: 'CHAT',\n\tlyrics: 'LYRICS',\n\tlyricsEditor: 'LYRICS_EDITOR',\n\tqueue: 'QUEUE'\n}\n\t\nexport default class Left extends Component {\n\n\tstate = {\n\t\tshowing: 'CHAT'\n\t}\n\n\tshowChat = () => this.setState({\n\t\tshowing: showingOptions.chat\t\n\t})\n\tshowQueue = () => this.setState({ \n\t\tshowingQueue: true, \n\t\tshowingLyricsEditor: false, \n\t\tshowingLyrics: false \n\t})\n\tshowLyrics = () => this.setState({ \n\t\tshowingQueue: false, \n\t\tshowingLyricsEditor: false, \n\t\tshowingLyrics: true \n\t})\n\tshowLyricsEditor = () => this.setState({ \n\t\tshowingQueue: false, \n\t\tshowingLyricsEditor: true, \n\t\tshowingLyrics: false \n\t})\n\n\trender() {\n\t\tconst { \n\t\t\tnowPlaying, \n\t\t\tplay, \n\t\t\tpause, \n\t\t\tisPlaying, \n\t\t\tsignedIn, \n\t\t\tstartSession, \n\t\t\tcurrentTrackTime, \n\t\t\ttotalTrackTime, \n\t\t\tskipTo, \n\t\t\tscreenOn,\n\t\t\ttoggleScreen, \n\t\t\tartist,\n\t\t\taccount,\n\t\t\tsetTyping,\n\t\t\taddVerse } = this.props\n\t\tconst { showingLyrics, showingLyricsEditor, showingQueue, showingChat } = this.state\n\t\tconst nowPlayingLyrics = nowPlaying && nowPlaying.verses\n\t\tconsole.log(nowPlayingLyrics)\n\t\treturn  (\n\t\t<AtlasConsumer>\n\t\t\t{ \n\t\t\t\t(atlas) => (\n\t\t\t\t\t<div className={classnames('left', 'real', { side: screenOn, bar: !screenOn })}>\n\t\t\t\t\t\t<Screen on={screenOn || atlas.isArtist()} \n\t\t\t\t\t\t\tplay={play} \n\t\t\t\t\t\t\tpause={pause} \n\t\t\t\t\t\t\tnowPlaying={nowPlaying} \n\t\t\t\t\t\t\tartist={artist}\n\t\t\t\t\t\t\tatlas={atlas} />\n\t\t\t\t\t\t<Navigation pocketMode={!screenOn} \n\t\t\t\t\t\t\ttoggleScreen={toggleScreen} \n\t\t\t\t\t\t\tplay={play} \n\t\t\t\t\t\t\tpause={pause} \n\t\t\t\t\t\t\tisPlaying={isPlaying} \n\t\t\t\t\t\t\tnowPlaying={nowPlaying}\n\t\t\t\t\t\t\tsignedIn={signedIn}\n\t\t\t\t\t\t\tstartSession={startSession}\n\t\t\t\t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t\t\t\t\t\ttotalTrackTime={totalTrackTime} \n\t\t\t\t\t\t\tskipTo={skipTo}\n\t\t\t\t\t\t\taccount={account}\n\t\t\t\t\t\t\tshowQueue={this.showQueue}\n\t\t\t\t\t\t\tshowLyrics={this.showLyrics}\n\t\t\t\t\t\t\tshowChat={this.showChat}\n\t\t\t\t\t\t\ts />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowingLyricsEditor &&\n\t\t\t\t\t\t\t<LyricsEditor\n\t\t\t\t\t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t\t\t\t\t\t\ttotalTrackTime={totalTrackTime}\n\t\t\t\t\t\t\t\tnowPlaying={nowPlaying}\n\t\t\t\t\t\t\t\tsetTyping={setTyping}\n\t\t\t\t\t\t\t\tshowLyrics={this.showLyrics}\n\t\t\t\t\t\t\t\taddVerse={addVerse}\n\t\t\t\t\t\t \t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowingLyrics &&\n\t\t\t\t\t\t\t<Lyrics \n\t\t\t\t\t\t\t\tlyrics={nowPlayingLyrics} \n\t\t\t\t\t\t\t\ttime={currentTrackTime} \n\t\t\t\t\t\t\t\tshowLyricsEditor={this.showLyricsEditor} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowingQueue && \n\t\t\t\t\t\t\t<Queue />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>)\n\t\t\t}\n\t\t</AtlasConsumer>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}