{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/upload.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport classnames from 'classnames';\nimport Helipad from '../lib/helipad/helipad.js';\nimport Prisma from '@prisma/client';\nexport default class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: \"\",\n      url: \"\",\n      artFile: null,\n      artUrl: \"\"\n    });\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      const {\n        title,\n        artUrl\n      } = this.state;\n      const url = this.state.url || title.replace(\" \", \"-\");\n      /*\n      try {\n          const body = { title, content };\n          await fetch('/api/post', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body),\n          });\n          await Router.push('/drafts');\n        } catch (error) {\n          console.error(error);\n        }\n        */\n\n      exit();\n    });\n\n    _defineProperty(this, \"handleArtDrop\", file => {\n      const artUrl = URL.createObjectURL(file);\n      this.setState({\n        artFile: file,\n        artUrl\n      });\n    });\n\n    _defineProperty(this, \"handleTitle\", e => this.setState({\n      title: e.target.value\n    }));\n  }\n\n  render() {\n    const {\n      exit,\n      file\n    } = this.props;\n    const {\n      artUrl,\n      title\n    } = this.state;\n    const urlPlaceholder = title.replace(\" \", \"-\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Helipad, {\n        onDrop: this.handleArtDrop,\n        stopPropagation: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload_art-box\",\n          style: artUrl ? {\n            backgroudImage: `url(${artUrl})`\n          } : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: classnames('upload_track-title', 'upload_textbox'),\n        placeholder: \"Title\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        className: classnames('upload_track-url', 'upload_textbox'),\n        placeholder: urlPlaceholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/upload.js"],"names":["Component","classnames","Helipad","Prisma","Upload","title","url","artFile","artUrl","state","replace","exit","file","URL","createObjectURL","setState","e","target","value","render","props","urlPlaceholder","handleArtDrop","backgroudImage","handleChange"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCACrC;AACPK,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,GAAG,EAAE,EAFE;AAGPC,MAAAA,OAAO,EAAE,IAHF;AAIPC,MAAAA,MAAM,EAAE;AAJD,KADqC;;AAAA,0CAQ9B,MAAM;AACpB,YAAM;AAAEH,QAAAA,KAAF;AAASG,QAAAA;AAAT,UAAoB,KAAKC,KAA/B;AACA,YAAMH,GAAG,GAAG,KAAKG,KAAL,CAAWH,GAAX,IAAkBD,KAAK,CAACK,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAA9B;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACEC,MAAAA,IAAI;AACJ,KA1B4C;;AAAA,2CA4B5BC,IAAD,IAAU;AACzB,YAAMJ,MAAM,GAAGK,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CAAf;AACA,WAAKG,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAEK,IAAX;AAAiBJ,QAAAA;AAAjB,OAAd;AACA,KA/B4C;;AAAA,yCAiC9BQ,CAAD,IAAO,KAAKD,QAAL,CAAc;AAAEV,MAAAA,KAAK,EAAEW,CAAC,CAACC,MAAF,CAASC;AAAlB,KAAd,CAjCwB;AAAA;;AAmC7CC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAER,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiB,KAAKQ,KAA5B;AACA,UAAM;AAAEZ,MAAAA,MAAF;AAAUH,MAAAA;AAAV,QAAoB,KAAKI,KAA/B;AAEA,UAAMY,cAAc,GAAGhB,KAAK,CAACK,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAvB;AACA,wBACC;AAAA,8BACC,QAAC,OAAD;AAAS,QAAA,MAAM,EAAE,KAAKY,aAAtB;AAAqC,QAAA,eAAe,MAApD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,KAAK,EAAEd,MAAM,GAAG;AAACe,YAAAA,cAAc,EAAG,OAAMf,MAAO;AAA/B,WAAH,GAAyC;AAAtF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAEP,UAAU,CAAC,oBAAD,EAAuB,gBAAvB,CAAxC;AAAkF,QAAA,WAAW,EAAC,OAA9F;AAAsG,QAAA,QAAQ,EAAE,KAAKuB;AAArH;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,SAAS,EAAEvB,UAAU,CAAC,kBAAD,EAAqB,gBAArB,CAAvC;AAA+E,QAAA,WAAW,EAAEoB;AAA5F;AAAA;AAAA;AAAA;AAAA,cALD,eAMC;AAAQ,QAAA,OAAO,EAAEV;AAAjB;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AAlD4C","sourcesContent":["import { Component } from 'react'\n\nimport classnames from 'classnames'\nimport Helipad from '../lib/helipad/helipad.js'\nimport Prisma from '@prisma/client';\n\nexport default class Upload extends Component {\n\tstate = {\n\t\ttitle: \"\",\n\t\turl: \"\",\n\t\tartFile: null,\n\t\tartUrl: \"\"\n\t}\n\n\thandleSubmit = () => {\n\t\tconst { title, artUrl } = this.state\n\t\tconst url = this.state.url || title.replace(\" \", \"-\")\n\n\t\t/*\n\t\ttry {\n\t\t    const body = { title, content };\n\t\t    await fetch('/api/post', {\n\t\t      method: 'POST',\n\t\t      headers: { 'Content-Type': 'application/json' },\n\t\t      body: JSON.stringify(body),\n\t\t    });\n\t\t    await Router.push('/drafts');\n\t\t  } catch (error) {\n\t\t    console.error(error);\n\t\t  }\n\t\t  */\n\t\texit()\n\t}\n\n\thandleArtDrop = (file) => {\n\t\tconst artUrl = URL.createObjectURL(file);\n\t\tthis.setState({ artFile: file, artUrl });\n\t}\n\n\thandleTitle = (e) => this.setState({ title: e.target.value })\n\n\trender() {\n\t\tconst { exit, file } = this.props\n\t\tconst { artUrl, title } = this.state\n\n\t\tconst urlPlaceholder = title.replace(\" \", \"-\")\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Helipad onDrop={this.handleArtDrop} stopPropagation>\n\t\t\t\t\t\t<div className=\"upload_art-box\" style={artUrl ? {backgroudImage: `url(${artUrl})` } : null}/>\n\t\t\t\t</Helipad>\n\t\t\t\t<input type=\"text\" className={classnames('upload_track-title', 'upload_textbox')} placeholder=\"Title\" onChange={this.handleChange} />\n\t\t\t\t<input type=\"url\" className={classnames('upload_track-url', 'upload_textbox')} placeholder={urlPlaceholder} />\n\t\t\t\t<button onClick={exit} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}