{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/lyrics.js\";\nimport { Component } from 'react';\nimport { lyrics } from '../test/test.js'; // map line intervals\n\nclass LineInterval {\n  start() {\n    return this.endpoints[0];\n  }\n\n  end() {\n    return this.endpoints[1];\n  }\n\n  contains(time) {\n    return this.start <= time && this.end;\n  }\n\n}\n\nclass TimeInterval {\n  start() {\n    return this.endpoints[0];\n  }\n\n  end() {\n    return this.endpoints[1];\n  }\n\n  contains(time) {\n    return this.start <= time && this.end;\n  }\n\n} // Get ready for linetime\n\n\nclass LyricsIntervalMap {\n  constructor(lyricsList\n  /* 2d array */\n  ) {\n    this.lyrics = lyricsList;\n  }\n\n  insert(lineList, TimeInterval) {}\n\n  get(k) {\n    //bs search not really nes.\n    this.lyics.forEach(() => {});\n  }\n\n}\n\nexport default class Lyrics extends Component {\n  render() {\n    const {\n      lyrics,\n      time\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics-container\",\n      children: lyrics.map((stanza, s) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stanza\",\n        children: stanza.map((line, l) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className({\n            bold: lyricsMap.lineContainsTime((s, l), time)\n          }, \"stanza-line\"),\n          children: line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport class LyricsEditor extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics-editor-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/lyrics.js"],"names":["Component","lyrics","LineInterval","start","endpoints","end","contains","time","TimeInterval","LyricsIntervalMap","constructor","lyricsList","insert","lineList","get","k","lyics","forEach","Lyrics","render","props","map","stanza","s","line","l","className","bold","lyricsMap","lineContainsTime","LyricsEditor"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB,C,CAEA;;AACA,MAAMC,YAAN,CAAmB;AAClBC,EAAAA,KAAK,GAAG;AACP,WAAO,KAAKC,SAAL,CAAe,CAAf,CAAP;AACA;;AAEDC,EAAAA,GAAG,GAAG;AACL,WAAO,KAAKD,SAAL,CAAe,CAAf,CAAP;AACA;;AAEDE,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACd,WAAO,KAAKJ,KAAL,IAAeI,IAAf,IAAuB,KAAKF,GAAnC;AACA;;AAXiB;;AAgBnB,MAAMG,YAAN,CAAmB;AAClBL,EAAAA,KAAK,GAAG;AACP,WAAO,KAAKC,SAAL,CAAe,CAAf,CAAP;AACA;;AAEDC,EAAAA,GAAG,GAAG;AACL,WAAO,KAAKD,SAAL,CAAe,CAAf,CAAP;AACA;;AAEDE,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACd,WAAO,KAAKJ,KAAL,IAAeI,IAAf,IAAuB,KAAKF,GAAnC;AACA;;AAXiB,C,CAenB;;;AACA,MAAMI,iBAAN,CAAwB;AACvBC,EAAAA,WAAW,CAACC;AAAW;AAAZ,IAA4B;AACtC,SAAKV,MAAL,GAAcU,UAAd;AACA;;AAEDC,EAAAA,MAAM,CAACC,QAAD,EAAWL,YAAX,EAAyB,CAE9B;;AAEDM,EAAAA,GAAG,CAACC,CAAD,EAAI;AACN;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmB,MAAM,CAExB,CAFD;AAGA;;AAdsB;;AAsBxB,eAAe,MAAMC,MAAN,SAAqBlB,SAArB,CAA+B;AAC7CmB,EAAAA,MAAM,GAAG;AACR,UAAM;AAAElB,MAAAA,MAAF;AAAUM,MAAAA;AAAV,QAAmB,KAAKa,KAA9B;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACGnB,MAAM,CAACoB,GAAP,CAAW,CAACC,MAAD,EAASC,CAAT,kBACZ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAEED,MAAM,CAACD,GAAP,CAAW,CAACG,IAAD,EAAOC,CAAP,kBACV;AAAK,UAAA,SAAS,EAAEC,SAAS,CAAC;AAAEC,YAAAA,IAAI,EAAEC,SAAS,CAACC,gBAAV,EAA4BN,CAAC,EAACE,CAA9B,GAAkClB,IAAlC;AAAR,WAAD,EAAmD,aAAnD,CAAzB;AAAA,oBACEiB;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AAFF;AAAA;AAAA;AAAA;AAAA,cADC;AADH;AAAA;AAAA;AAAA;AAAA,YADD;AAeA;;AAlB4C;AAqB9C,OAAO,MAAMM,YAAN,SAA2B9B,SAA3B,CAAqC;AAC3CmB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADD;AAIA;;AAN0C","sourcesContent":["import { Component } from 'react'\nimport { lyrics } from '../test/test.js' \n\n// map line intervals\nclass LineInterval {\n\tstart() {\n\t\treturn this.endpoints[0]\n\t}\n\n\tend() {\n\t\treturn this.endpoints[1]\n\t}\n\n\tcontains(time) {\n\t\treturn this.start  <= time && this.end\n\t}\n\n\n}\n\nclass TimeInterval {\n\tstart() {\n\t\treturn this.endpoints[0]\n\t}\n\n\tend() {\n\t\treturn this.endpoints[1]\n\t}\n\n\tcontains(time) {\n\t\treturn this.start  <= time && this.end\n\t}\n\n}\n\n// Get ready for linetime\nclass LyricsIntervalMap {\n\tconstructor(lyricsList /* 2d array */) {\n\t\tthis.lyrics = lyricsList \n\t}\n\n\tinsert(lineList, TimeInterval) {\n\t\t\n\t}\n\n\tget(k) {\n\t\t//bs search not really nes.\n\t\tthis.lyics.forEach(() => {\n\n\t\t})\n\t}\n}\n\n\n\n\n\n\nexport default class Lyrics extends Component {\n\trender() {\n\t\tconst { lyrics, time } = this.props\t\t\n\t\treturn (\n\t\t\t<div className=\"lyrics-container\">\n\t\t\t\t{ lyrics.map((stanza, s) => (\n\t\t\t\t\t<div className=\"stanza\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstanza.map((line, l) => (\n\t\t\t\t\t\t\t\t<div className={className({ bold: lyricsMap.lineContainsTime((s,l), time)}, \"stanza-line\")}>\n\t\t\t\t\t\t\t\t\t{line}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport class LyricsEditor extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"lyrics-editor-container\">\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}