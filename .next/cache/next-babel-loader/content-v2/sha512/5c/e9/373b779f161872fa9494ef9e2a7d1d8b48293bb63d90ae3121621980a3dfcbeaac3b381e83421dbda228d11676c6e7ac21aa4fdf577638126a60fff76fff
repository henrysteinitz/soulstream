{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/pages/[artist]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { GetStaticProps } from \"next\";\nimport { useRouter } from 'next/router';\nimport { PrismaClient } from '@prisma/client';\nimport Atlas from '../../lib/atlas/atlas.js';\nimport Main from '../main.js';\n\nfunction Home(props) {\n  const router = useRouter();\n  Atlas.setPath(router.pathname);\n  console.log(router.asPath.slice(1));\n  Atlas.setState({\n    artist: router.asPath.slice(1)\n  });\n  return /*#__PURE__*/_jsxDEV(Main, _objectSpread(_objectSpread({}, props), {}, {\n    pathname: router.pathname\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: [],\n    fallback: true\n  };\n}\nexport async function getStaticProps(context) {\n  let prisma = new PrismaClient();\n  const stream = await prisma.track.findMany({\n    select: {\n      id: true,\n      title: true,\n      audioUrl: true,\n      artUrl: true,\n      url: true,\n      artists: {\n        include: {\n          artist: {\n            select: {\n              name: true\n            }\n          }\n        }\n      }\n    }\n  });\n  return {\n    props: {\n      stream\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/pages/[artist]/index.js"],"names":["React","GetStaticProps","useRouter","PrismaClient","Atlas","Main","Home","props","router","setPath","pathname","console","log","asPath","slice","setState","artist","getStaticPaths","paths","fallback","getStaticProps","context","prisma","stream","track","findMany","select","id","title","audioUrl","artUrl","url","artists","include","name"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AACnB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACAE,EAAAA,KAAK,CAACK,OAAN,CAAcD,MAAM,CAACE,QAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAZ;AACAV,EAAAA,KAAK,CAACW,QAAN,CAAe;AAAEC,IAAAA,MAAM,EAAER,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoB,CAApB;AAAV,GAAf;AAEA,sBAAO,QAAC,IAAD,kCAAUP,KAAV;AAAiB,IAAA,QAAQ,EAAEC,MAAM,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AAED,OAAO,eAAeO,cAAf,GAAgC;AACtC,SAAO;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAC5C,MAAIC,MAAM,GAAG,IAAInB,YAAJ,EAAb;AACA,QAAMoB,MAAM,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAaC,QAAb,CAAsB;AAC1CC,IAAAA,MAAM,EAAE;AACPC,MAAAA,EAAE,EAAE,IADG;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,MAAM,EAAE,IAJJ;AAKJC,MAAAA,GAAG,EAAE,IALD;AAMJC,MAAAA,OAAO,EAAE;AACRC,QAAAA,OAAO,EAAE;AACRjB,UAAAA,MAAM,EAAE;AACPU,YAAAA,MAAM,EAAE;AACPQ,cAAAA,IAAI,EAAE;AADC;AADD;AADA;AADD;AANL;AADkC,GAAtB,CAArB;AAmBA,SAAO;AAAE3B,IAAAA,KAAK,EAAE;AAAEgB,MAAAA;AAAF;AAAT,GAAP;AACA;AAED,eAAejB,IAAf","sourcesContent":["import React from \"react\"\nimport { GetStaticProps } from \"next\"\nimport { useRouter } from 'next/router'\nimport { PrismaClient } from '@prisma/client';\nimport Atlas from '../../lib/atlas/atlas.js'\nimport Main from '../main.js'\n\n\nfunction Home(props){\n\tconst router = useRouter()\n\tAtlas.setPath(router.pathname)\n\tconsole.log(router.asPath.slice(1))\n\tAtlas.setState({ artist: router.asPath.slice(1) })\n\n\treturn <Main {...props} pathname={router.pathname}/>\n}\n\nexport async function getStaticPaths() {\n\treturn {\n\t\tpaths: [],\n\t\tfallback: true\n\t}\n}\n\nexport async function getStaticProps(context){\n\tlet prisma = new PrismaClient();\n\tconst stream = await prisma.track.findMany({\n\t\tselect: {\n\t\t\tid: true,\n\t    \ttitle: true,\n\t    \taudioUrl: true,\n\t    \tartUrl: true,\n\t    \turl: true,\n\t    \tartists: {\n\t    \t\tinclude: {\n\t    \t\t\tartist: {\n\t    \t\t\t\tselect: {\n\t    \t\t\t\t\tname: true\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t    \t\t}\n\t    \t}\n\t\t}\n\t})\n\n\treturn { props: { stream } }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}