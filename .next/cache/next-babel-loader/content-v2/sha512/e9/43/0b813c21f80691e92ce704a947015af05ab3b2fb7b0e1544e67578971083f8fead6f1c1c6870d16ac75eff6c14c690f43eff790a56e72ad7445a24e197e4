{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/right.js\";\nimport { Component } from 'react';\nimport { useRouter } from 'next/router';\nimport { retrograde, signature } from '../test/test.js';\nimport Track from './track.js';\nimport Type from '../lib/type/type';\n\nRight = props => {\n  const {\n    playingId,\n    isPlaying,\n    play,\n    pause,\n    currentTrackTime,\n    totalTrackTime,\n    skipTo,\n    stream\n  } = props;\n  const router = useRouter();\n  const pathname = router.pathname;\n  console.log(pathname);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: // copies of stream until db has more test data\n      stream.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        song: track,\n        playingId: playingId,\n        isPlaying: isPlaying,\n        play: play,\n        pause: pause,\n        currentTime: currentTrackTime,\n        totalTime: totalTrackTime,\n        skipTo: skipTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/library\",\n      children: \"library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/type\",\n      children: false && /*#__PURE__*/_jsxDEV(Type, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/right.js"],"names":["Component","useRouter","retrograde","signature","Track","Type","Right","props","playingId","isPlaying","play","pause","currentTrackTime","totalTrackTime","skipTo","stream","router","pathname","console","log","map","track"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,iBAAtC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEAC,KAAK,GAAIC,KAAD,IAAW;AAClB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,gBAArC;AAAuDC,IAAAA,cAAvD;AAAuEC,IAAAA,MAAvE;AAA+EC,IAAAA;AAA/E,MAA0FR,KAAhG;AACA,QAAMS,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACC,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA,gBAGE;AACAF,MAAAA,MAAM,CAACK,GAAP,CAAYC,KAAD,iBACX,QAAC,KAAD;AACC,QAAA,IAAI,EAAEA,KADP;AAEC,QAAA,SAAS,EAAEb,SAFZ;AAGC,QAAA,SAAS,EAAEC,SAHZ;AAIC,QAAA,IAAI,EAAEC,IAJP;AAKC,QAAA,KAAK,EAAEC,KALR;AAMC,QAAA,WAAW,EAAEC,gBANd;AAOC,QAAA,SAAS,EAAEC,cAPZ;AAQC,QAAA,MAAM,EAAEC;AART;AAAA;AAAA;AAAA;AAAA,cADA;AAJF;AAAA;AAAA;AAAA;AAAA,YADD,eAiBC,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBD,eAoBC,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAAA,gBACG,sBAAiC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADpC;AAAA;AAAA;AAAA;AAAA,YApBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA,CA/BD","sourcesContent":["import { Component } from 'react'\nimport { useRouter } from 'next/router'\n\nimport { retrograde, signature } from '../test/test.js'\nimport Track from './track.js'\nimport Type from '../lib/type/type'\n\nRight = (props) => {\n\tconst { playingId, isPlaying, play, pause, currentTrackTime, totalTrackTime, skipTo, stream } = props\n\tconst router = useRouter()\n\tconst pathname = router.pathname\n\tconsole.log(pathname)\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t<Route exact path=\"/\">\n\n\t\t\t\t{ \n\t\t\t\t\t// copies of stream until db has more test data\n\t\t\t\t\tstream.map((track) => (\n\t\t\t\t\t<Track \n\t\t\t\t\t\tsong={track} \n\t\t\t\t\t\tplayingId={playingId} \n\t\t\t\t\t\tisPlaying={isPlaying} \n\t\t\t\t\t\tplay={play} \n\t\t\t\t\t\tpause={pause} \n\t\t\t\t\t\tcurrentTime={currentTrackTime} \n\t\t\t\t\t\ttotalTime={totalTrackTime}\n\t\t\t\t\t\tskipTo={skipTo} />\n\t\t\t\t))}\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/library\">\n\t\t\t\tlibrary\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/type\">\n\t\t\t\t{ typeof window !== 'undefined' && <Type /> }\n\t\t\t</Route>\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}