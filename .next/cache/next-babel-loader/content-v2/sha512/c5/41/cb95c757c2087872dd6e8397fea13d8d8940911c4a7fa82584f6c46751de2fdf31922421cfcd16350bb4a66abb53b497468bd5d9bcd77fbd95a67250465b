{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/lyrics.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport { lyrics } from '../test/test.js'; // map line intervals\n\nvar LineInterval = /*#__PURE__*/function () {\n  function LineInterval() {\n    _classCallCheck(this, LineInterval);\n  }\n\n  _createClass(LineInterval, [{\n    key: \"start\",\n    value: function start() {\n      return this.endpoints[0];\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      return this.endpoints[1];\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(time) {\n      return this.start <= time && this.end;\n    }\n  }]);\n\n  return LineInterval;\n}();\n\nvar TimeInterval = /*#__PURE__*/function () {\n  function TimeInterval() {\n    _classCallCheck(this, TimeInterval);\n  }\n\n  _createClass(TimeInterval, [{\n    key: \"start\",\n    value: function start() {\n      return this.endpoints[0];\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      return this.endpoints[1];\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(time) {\n      return this.start <= time && this.end;\n    }\n  }]);\n\n  return TimeInterval;\n}(); // Get ready for linetime\n\n\nvar LyricsIntervalMap = /*#__PURE__*/function () {\n  function LyricsIntervalMap(lyricsList\n  /* 2d array */\n  ) {\n    _classCallCheck(this, LyricsIntervalMap);\n\n    this.lyrics = lyricsList;\n  }\n\n  _createClass(LyricsIntervalMap, [{\n    key: \"insert\",\n    value: function insert(lineList, TimeInterval) {}\n  }, {\n    key: \"get\",\n    value: function get(k) {\n      //bs search not really nes.\n      this.lyics.forEach(function () {});\n    }\n  }]);\n\n  return LyricsIntervalMap;\n}();\n\nvar Lyrics = /*#__PURE__*/function (_Component) {\n  _inherits(Lyrics, _Component);\n\n  var _super = _createSuper(Lyrics);\n\n  function Lyrics() {\n    _classCallCheck(this, Lyrics);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Lyrics, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          lyrics = _this$props.lyrics,\n          time = _this$props.time;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lyrics-container\",\n        children: lyrics.map(function (stanza, s) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stanza\",\n            children: stanza.map(function (line, l) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: className({\n                  bold: lyricsMap.lineContainsTime((s, l), time)\n                }, \"stanza-line\"),\n                children: line\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 9\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 6\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Lyrics;\n}(Component);\n\nexport { Lyrics as default };\nexport var LyricsEditor = /*#__PURE__*/function (_Component2) {\n  _inherits(LyricsEditor, _Component2);\n\n  var _super2 = _createSuper(LyricsEditor);\n\n  function LyricsEditor() {\n    _classCallCheck(this, LyricsEditor);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(LyricsEditor, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lyrics-editor-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return LyricsEditor;\n}(Component);","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/lyrics.js"],"names":["Component","lyrics","LineInterval","endpoints","time","start","end","TimeInterval","LyricsIntervalMap","lyricsList","lineList","k","lyics","forEach","Lyrics","props","map","stanza","s","line","l","className","bold","lyricsMap","lineContainsTime","LyricsEditor"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB,C,CAEA;;IACMC,Y;;;;;;;4BACG;AACP,aAAO,KAAKC,SAAL,CAAe,CAAf,CAAP;AACA;;;0BAEK;AACL,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACA;;;6BAEQC,I,EAAM;AACd,aAAO,KAAKC,KAAL,IAAeD,IAAf,IAAuB,KAAKE,GAAnC;AACA;;;;;;IAKIC,Y;;;;;;;4BACG;AACP,aAAO,KAAKJ,SAAL,CAAe,CAAf,CAAP;AACA;;;0BAEK;AACL,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACA;;;6BAEQC,I,EAAM;AACd,aAAO,KAAKC,KAAL,IAAeD,IAAf,IAAuB,KAAKE,GAAnC;AACA;;;;KAIF;;;IACME,iB;AACL,6BAAYC;AAAW;AAAvB,IAAuC;AAAA;;AACtC,SAAKR,MAAL,GAAcQ,UAAd;AACA;;;;2BAEMC,Q,EAAUH,Y,EAAc,CAE9B;;;wBAEGI,C,EAAG;AACN;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmB,YAAM,CAExB,CAFD;AAGA;;;;;;IAQmBC,M;;;;;;;;;;;;;6BACX;AAAA;;AAAA,wBACiB,KAAKC,KADtB;AAAA,UACAd,MADA,eACAA,MADA;AAAA,UACQG,IADR,eACQA,IADR;AAER,0BACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGH,MAAM,CAACe,GAAP,CAAW,UAACC,MAAD,EAASC,CAAT;AAAA,8BACZ;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,sBAEED,MAAM,CAACD,GAAP,CAAW,UAACG,IAAD,EAAOC,CAAP;AAAA,kCACV;AAAK,gBAAA,SAAS,EAAEC,SAAS,CAAC;AAAEC,kBAAAA,IAAI,EAAEC,SAAS,CAACC,gBAAV,EAA4BN,CAAC,EAACE,CAA9B,GAAkChB,IAAlC;AAAR,iBAAD,EAAmD,aAAnD,CAAzB;AAAA,0BACEe;AADF;AAAA;AAAA;AAAA;AAAA,uBADU;AAAA,aAAX;AAFF;AAAA;AAAA;AAAA;AAAA,mBADY;AAAA,SAAX;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AAeA;;;;EAlBkCnB,S;;SAAfc,M;AAqBrB,WAAaW,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACU;AACR,0BACC;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADD;AAIA;AANF;;AAAA;AAAA,EAAkCzB,SAAlC","sourcesContent":["import { Component } from 'react'\nimport { lyrics } from '../test/test.js' \n\n// map line intervals\nclass LineInterval {\n\tstart() {\n\t\treturn this.endpoints[0]\n\t}\n\n\tend() {\n\t\treturn this.endpoints[1]\n\t}\n\n\tcontains(time) {\n\t\treturn this.start  <= time && this.end\n\t}\n\n\n}\n\nclass TimeInterval {\n\tstart() {\n\t\treturn this.endpoints[0]\n\t}\n\n\tend() {\n\t\treturn this.endpoints[1]\n\t}\n\n\tcontains(time) {\n\t\treturn this.start  <= time && this.end\n\t}\n\n}\n\n// Get ready for linetime\nclass LyricsIntervalMap {\n\tconstructor(lyricsList /* 2d array */) {\n\t\tthis.lyrics = lyricsList \n\t}\n\n\tinsert(lineList, TimeInterval) {\n\t\t\n\t}\n\n\tget(k) {\n\t\t//bs search not really nes.\n\t\tthis.lyics.forEach(() => {\n\n\t\t})\n\t}\n}\n\n\n\n\n\n\nexport default class Lyrics extends Component {\n\trender() {\n\t\tconst { lyrics, time } = this.props\t\t\n\t\treturn (\n\t\t\t<div className=\"lyrics-container\">\n\t\t\t\t{ lyrics.map((stanza, s) => (\n\t\t\t\t\t<div className=\"stanza\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstanza.map((line, l) => (\n\t\t\t\t\t\t\t\t<div className={className({ bold: lyricsMap.lineContainsTime((s,l), time)}, \"stanza-line\")}>\n\t\t\t\t\t\t\t\t\t{line}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport class LyricsEditor extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"lyrics-editor-container\">\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}