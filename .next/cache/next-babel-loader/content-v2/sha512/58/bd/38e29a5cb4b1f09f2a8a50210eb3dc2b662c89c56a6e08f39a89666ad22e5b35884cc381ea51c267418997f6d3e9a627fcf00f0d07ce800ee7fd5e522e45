{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/artistpage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AtlasProvider } from '../lib/atlas/atlas.js';\nimport Track from './track';\n\nclass ArtistPageWithAtlas extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      artist: null\n    });\n  }\n\n  componentDidMount() {\n    fetch('api/artist/get_artixdfast/', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        artistUrl: this.props.atlas.getLastUrlSegment()\n      })\n    }).then(res => {\n      res.json().then(body => {\n        console.log(body);\n        this.setState({\n          artistUrl: body\n        });\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      playingId,\n      isPlaying,\n      play,\n      pause,\n      currentTrackTime,\n      totalTrackTime,\n      skipTo,\n      stream,\n      account,\n      atlas\n    } = this.props;\n    const artist = this.state.artist || this.props.artist;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"big-artist-name right-title\",\n        children: artist && artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-stream\",\n        children: artist && artist.tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          song: track.track,\n          playingId: playingId,\n          isPlaying: isPlaying,\n          play: play,\n          pause: pause,\n          currentTime: currentTrackTime,\n          totalTime: totalTrackTime,\n          skipTo: skipTo,\n          account: account,\n          artist: artist\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default class ArtistPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(AtlasProvider, {\n      children: atlas => /*#__PURE__*/_jsxDEV(ArtistPageWithAtlas, _objectSpread({\n        atlas: atlas\n      }, this.props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/artistpage.js"],"names":["Component","Link","AtlasProvider","Track","ArtistPageWithAtlas","artist","componentDidMount","fetch","method","headers","body","JSON","stringify","artistUrl","props","atlas","getLastUrlSegment","then","res","json","console","log","setState","catch","err","render","playingId","isPlaying","play","pause","currentTrackTime","totalTrackTime","skipTo","stream","account","state","name","tracks","map","track","id","ArtistPage"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAAA;AAAA;;AAAA,mCAEnC;AACPK,MAAAA,MAAM,EAAE;AADD,KAFmC;AAAA;;AAM3CC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,4BAAD,EAA+B;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAF0B;AAKnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,iBAAjB;AADS,OAAf;AAL6B,KAA/B,CAAL,CAQGC,IARH,CAQSC,GAAD,IAAS;AAChBA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBP,IAAI,IAAI;AACvBU,QAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,aAAKY,QAAL,CAAc;AAAET,UAAAA,SAAS,EAAEH;AAAb,SAAd;AACA,OAHD;AAIA,KAbD,EAaGa,KAbH,CAaUC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAblB;AAcA;;AAEDC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,IAAxB;AAA8BC,MAAAA,KAA9B;AAAqCC,MAAAA,gBAArC;AAAuDC,MAAAA,cAAvD;AAAuEC,MAAAA,MAAvE;AAA+EC,MAAAA,MAA/E;AAAuFC,MAAAA,OAAvF;AAAgGnB,MAAAA;AAAhG,QAA0G,KAAKD,KAArH;AACA,UAAMT,MAAM,GAAG,KAAK8B,KAAL,CAAW9B,MAAX,IAAqB,KAAKS,KAAL,CAAWT,MAA/C;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,kBACEA,MAAM,IAAIA,MAAM,CAAC+B;AADnB;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAEE/B,MAAM,IAAIA,MAAM,CAACgC,MAAP,CAAcC,GAAd,CAAkBC,KAAK,iBAChC,QAAC,KAAD;AACC,UAAA,IAAI,EAAEA,KAAK,CAACA,KADb;AAEC,UAAA,SAAS,EAAEb,SAFZ;AAGC,UAAA,SAAS,EAAEC,SAHZ;AAIC,UAAA,IAAI,EAAEC,IAJP;AAKC,UAAA,KAAK,EAAEC,KALR;AAMC,UAAA,WAAW,EAAEC,gBANd;AAOC,UAAA,SAAS,EAAEC,cAPZ;AAQC,UAAA,MAAM,EAAEC,MART;AASC,UAAA,OAAO,EAAEE,OATV;AAUC,UAAA,MAAM,EAAE7B;AAVT,WAWMkC,KAAK,CAACC,EAXZ;AAAA;AAAA;AAAA;AAAA,gBADS;AAFZ;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AA2BA;;AArD0C;;AAwD5C,eAAe,MAAMC,UAAN,SAAyBzC,SAAzB,CAAmC;AACjDyB,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,aAAD;AAAA,gBACGV,KAAD,iBACA,QAAC,mBAAD;AAAqB,QAAA,KAAK,EAAEA;AAA5B,SAAuC,KAAKD,KAA5C;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADD;AAOA;;AATgD","sourcesContent":["import { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AtlasProvider } from '../lib/atlas/atlas.js'\nimport Track from './track'\n\n\nclass ArtistPageWithAtlas extends Component {\n\n\tstate = {\n\t\tartist: null\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('api/artist/get_artixdfast/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({ \n\t\t\t\tartistUrl: this.props.atlas.getLastUrlSegment()\n\t\t\t})\n\t\t}).then((res) => {\n\t\t\tres.json().then(body => {\n\t\t\t\tconsole.log(body)\n\t\t\t\tthis.setState({ artistUrl: body })\n\t\t\t})\n\t\t}).catch((err) => console.log(err))\n\t}\n\n\trender() {\n\t\tconst { playingId, isPlaying, play, pause, currentTrackTime, totalTrackTime, skipTo, stream, account, atlas } = this.props\n\t\tconst artist = this.state.artist || this.props.artist\n\t\treturn (\n\t\t\t<div className=\"artist-page\">\n\t\t\t\t<div className=\"big-artist-name right-title\">\n\t\t\t\t\t{artist && artist.name}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"artist-stream\">\n\t\t\t\t\t{\n\t\t\t\t\t\tartist && artist.tracks.map(track => (\n\t\t\t\t\t\t\t<Track \n\t\t\t\t\t\t\t\tsong={track.track} \n\t\t\t\t\t\t\t\tplayingId={playingId} \n\t\t\t\t\t\t\t\tisPlaying={isPlaying} \t\n\t\t\t\t\t\t\t\tplay={play} \n\t\t\t\t\t\t\t\tpause={pause} \n\t\t\t\t\t\t\t\tcurrentTime={currentTrackTime} \n\t\t\t\t\t\t\t\ttotalTime={totalTrackTime}\n\t\t\t\t\t\t\t\tskipTo={skipTo}\n\t\t\t\t\t\t\t\taccount={account} \n\t\t\t\t\t\t\t\tartist={artist}\n\t\t\t\t\t\t\t\tkey={track.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default class ArtistPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<AtlasProvider>\n\t\t\t\t{(atlas) => (\n\t\t\t\t\t<ArtistPageWithAtlas atlas={atlas} {...this.props} />\n\t\t\t\t)}\n\t\t\t</AtlasProvider>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}