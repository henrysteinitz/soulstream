{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/left.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport classnames from 'classnames';\nimport { AtlasConsumer } from '../lib/atlas/atlas.js';\nimport Logo from './logo.js';\nimport Lyrics, { LyricsEditor } from './lyrics.js';\nimport Navigation from './navigation.js';\nimport Screen from './screen.js';\nimport SignIn from './signin.js';\nimport { VerseMap } from '../state/lyrics.js';\nimport { testLyrics } from '../test/test.js';\n\nvar Left = /*#__PURE__*/function (_Component) {\n  _inherits(Left, _Component);\n\n  var _super = _createSuper(Left);\n\n  function Left() {\n    var _this;\n\n    _classCallCheck(this, Left);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showingLyrics: true,\n      showingLyricsEditor: false,\n      showingQueue: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Left, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          nowPlaying = _this$props.nowPlaying,\n          play = _this$props.play,\n          pause = _this$props.pause,\n          isPlaying = _this$props.isPlaying,\n          signedIn = _this$props.signedIn,\n          startSession = _this$props.startSession,\n          currentTrackTime = _this$props.currentTrackTime,\n          totalTrackTime = _this$props.totalTrackTime,\n          skipTo = _this$props.skipTo,\n          screenOn = _this$props.screenOn,\n          toggleScreen = _this$props.toggleScreen,\n          artist = _this$props.artist,\n          account = _this$props.account,\n          setTyping = _this$props.setTyping;\n      var _this$state = this.state,\n          showingLyrics = _this$state.showingLyrics,\n          showingLyricsEditor = _this$state.showingLyricsEditor;\n      var nowPlayingLyrics = nowPlaying && new VerseMap(nowPlaying.verses, true);\n      console.log(nowPlayingLyrics);\n      return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n        children: function children(atlas) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames('left', 'real', {\n              side: screenOn,\n              bar: !screenOn\n            }),\n            children: [/*#__PURE__*/_jsxDEV(Screen, {\n              on: screenOn || atlas.isArtist(),\n              play: play,\n              pause: pause,\n              nowPlaying: nowPlaying,\n              artist: artist,\n              atlas: atlas\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 7\n            }, _this2), /*#__PURE__*/_jsxDEV(Navigation, {\n              pocketMode: !screenOn,\n              toggleScreen: toggleScreen,\n              play: play,\n              pause: pause,\n              isPlaying: isPlaying,\n              nowPlaying: nowPlaying,\n              signedIn: signedIn,\n              startSession: startSession,\n              currentTrackTime: currentTrackTime,\n              totalTrackTime: totalTrackTime,\n              skipTo: skipTo,\n              account: account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 7\n            }, _this2), showingLyricsEditor && /*#__PURE__*/_jsxDEV(LyricsEditor, {\n              currentTrackTime: currentTrackTime,\n              totalTrackTime: totalTrackTime,\n              nowPlaying: nowPlaying,\n              setTyping: setTyping\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 8\n            }, _this2), showingLyrics && /*#__PURE__*/_jsxDEV(Lyrics, {\n              lyrics: nowPlayingLyrics,\n              time: currentTrackTime,\n              showLyricsEditor: function showLyricsEditor() {\n                return _this2.setState({\n                  showingLyricsEditor: true\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 8\n            }, _this2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 6\n          }, _this2);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }, this);\n    }\n  }]);\n\n  return Left;\n}(Component);\n\nexport { Left as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/left.js"],"names":["Component","classnames","AtlasConsumer","Logo","Lyrics","LyricsEditor","Navigation","Screen","SignIn","VerseMap","testLyrics","Left","showingLyrics","showingLyricsEditor","showingQueue","props","nowPlaying","play","pause","isPlaying","signedIn","startSession","currentTrackTime","totalTrackTime","skipTo","screenOn","toggleScreen","artist","account","setTyping","state","nowPlayingLyrics","verses","console","log","atlas","side","bar","isArtist","setState"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport classnames from 'classnames'\n\nimport { AtlasConsumer } from '../lib/atlas/atlas.js'\nimport Logo from './logo.js'\nimport Lyrics, { LyricsEditor } from './lyrics.js'\nimport Navigation from './navigation.js'\nimport Screen from './screen.js'\nimport SignIn from './signin.js'\n\nimport { VerseMap } from '../state/lyrics.js'\nimport { testLyrics } from '../test/test.js' \n\t\nexport default class Left extends Component {\n\n\tstate = {\n\t\tshowingLyrics: true,\n\t\tshowingLyricsEditor: false,\n\t\tshowingQueue: false\n\t}\n\n\trender() {\n\t\tconst { \n\t\t\tnowPlaying, \n\t\t\tplay, \n\t\t\tpause, \n\t\t\tisPlaying, \n\t\t\tsignedIn, \n\t\t\tstartSession, \n\t\t\tcurrentTrackTime, \n\t\t\ttotalTrackTime, \n\t\t\tskipTo, \n\t\t\tscreenOn,\n\t\t\ttoggleScreen, \n\t\t\tartist,\n\t\t\taccount,\n\t\t\tsetTyping } = this.props\n\t\tconst { showingLyrics, showingLyricsEditor } = this.state\n\t\tconst nowPlayingLyrics = nowPlaying && new VerseMap(nowPlaying.verses, true)\n\t\tconsole.log(nowPlayingLyrics)\n\t\treturn  (\n\t\t<AtlasConsumer>\n\t\t\t{ \n\t\t\t\t(atlas) => (\n\t\t\t\t\t<div className={classnames('left', 'real', { side: screenOn, bar: !screenOn })}>\n\t\t\t\t\t\t<Screen on={screenOn || atlas.isArtist()} \n\t\t\t\t\t\t\tplay={play} \n\t\t\t\t\t\t\tpause={pause} \n\t\t\t\t\t\t\tnowPlaying={nowPlaying} \n\t\t\t\t\t\t\tartist={artist}\n\t\t\t\t\t\t\tatlas={atlas} />\n\t\t\t\t\t\t<Navigation pocketMode={!screenOn} \n\t\t\t\t\t\t\ttoggleScreen={toggleScreen} \n\t\t\t\t\t\t\tplay={play} \n\t\t\t\t\t\t\tpause={pause} \n\t\t\t\t\t\t\tisPlaying={isPlaying} \n\t\t\t\t\t\t\tnowPlaying={nowPlaying}\n\t\t\t\t\t\t\tsignedIn={signedIn}\n\t\t\t\t\t\t\tstartSession={startSession}\n\t\t\t\t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t\t\t\t\t\ttotalTrackTime={totalTrackTime} \n\t\t\t\t\t\t\tskipTo={skipTo}\n\t\t\t\t\t\t\taccount={account} />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowingLyricsEditor &&\n\t\t\t\t\t\t\t<LyricsEditor\n\t\t\t\t\t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t\t\t\t\t\t\ttotalTrackTime={totalTrackTime}\n\t\t\t\t\t\t\t\tnowPlaying={nowPlaying}\n\t\t\t\t\t\t\t\tsetTyping={setTyping}\n\t\t\t\t\t\t \t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowingLyrics &&\n\t\t\t\t\t\t\t<Lyrics \n\t\t\t\t\t\t\t\tlyrics={nowPlayingLyrics} \n\t\t\t\t\t\t\t\ttime={currentTrackTime} \n\t\t\t\t\t\t\t\tshowLyricsEditor={() => this.setState({ showingLyricsEditor: true })} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>)\n\t\t\t}\n\t\t</AtlasConsumer>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}