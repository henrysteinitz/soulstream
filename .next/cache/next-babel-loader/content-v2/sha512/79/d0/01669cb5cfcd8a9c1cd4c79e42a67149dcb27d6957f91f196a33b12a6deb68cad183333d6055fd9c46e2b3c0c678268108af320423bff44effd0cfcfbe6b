{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js\",\n    _this2 = this;\n\nimport React, { useContext } from 'react';\nimport classnames from 'classnames'; // TODO: MAKE NOT HORRENDOUS\n\nvar padWithSlash = function padWithSlash(path) {\n  var newPath = path;\n\n  if (newPath[0] !== '/') {\n    newPath = '/' + newPath;\n  }\n\n  if (newPath.length > 1 && newPath[newPath.length - 1] === '/') {\n    newPath = newPath.slice(0, newPath.length - 1);\n  }\n\n  return newPath;\n};\n\nvar isWildcard = function isWildcard(x) {\n  if (x.length < 2) {\n    return false;\n  }\n\n  return x[0] === '[' && x[x.length - 1] === ']';\n};\n\nvar matchPaths = function matchPaths(p1, p2) {\n  var s1 = padWithSlash(p1);\n  var s2 = padWithSlash(p2);\n\n  if (s1 === '/') {\n    return s2 === '/';\n  }\n\n  var dirs1 = s1.split('/');\n  var dirs2 = s2.split('/');\n\n  if (dirs1.length !== dirs2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < dirs1.length; i++) {\n    if (isWildcard(dirs1[i])) {\n      continue;\n    }\n\n    if (isWildcard(dirs2[i])) {\n      continue;\n    }\n\n    if (dirs1[i] !== dirs2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar AtlasClass = function AtlasClass(_path) {\n  var _this = this;\n\n  _classCallCheck(this, AtlasClass);\n\n  _defineProperty(this, \"padWithSlash\", function (path) {\n    if (path[0] !== '/') {\n      path = '/' + path;\n    }\n\n    return path;\n  });\n\n  _defineProperty(this, \"setPath\", function (path) {\n    _this.path = padWithSlash(path);\n\n    _this.history.push(padWithSlash(path)); // typeof window != \"undefined\" && window.location.replace(this.padWithSlash(path))\n\n\n    _this.now += 1;\n\n    _this.reRender();\n  });\n\n  _defineProperty(this, \"setState\", function (state) {\n    Object.keys(state).forEach(function (x) {\n      _this.state[x] = state[x];\n    });\n  });\n\n  _defineProperty(this, \"back\", function () {\n    return _this.now -= 1;\n  });\n\n  _defineProperty(this, \"forward\", function () {\n    return _this.now += 1;\n  });\n\n  _defineProperty(this, \"reRender\", function () {});\n\n  _defineProperty(this, \"getLastUrlSegment\", function () {\n    var dirs = padWithSlash(_this.path).split('/');\n    return dirs[dirs.length - 1];\n  });\n\n  _defineProperty(this, \"isArtist\", function () {\n    var last = _this.getLastUrlSegment();\n\n    return _this.path[0] === '/' && last.length === _this.path.length - 1 && last.length > 0;\n  });\n\n  _defineProperty(this, \"addTrackToQueue\", function (track) {\n    return _this.nextUp.push(track);\n  });\n\n  this.history = [padWithSlash(_path || '/')];\n  this.now = 0;\n  this.state = {};\n  this.path = this.history[0];\n  this.trackQueue = [];\n  this.queueIndex = 0;\n};\n\nvar Atlas = new AtlasClass();\nexport var AtlasContext = /*#__PURE__*/React.createContext(Atlas);\n_c = AtlasContext;\nexport var AtlasProvider = AtlasContext.Provider;\nexport var AtlasConsumer = AtlasContext.Consumer;\nexport var Route = function Route(_ref) {\n  var path = _ref.path,\n      _children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n    children: function children(atlas) {\n      return matchPaths(atlas.path, path) && _children;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 2\n  }, _this2);\n};\n_c2 = Route;\n\nvar handleClick = function handleClick(atlas, path) {\n  atlas.setPath(path);\n};\n\nexport var Link = function Link(_ref2) {\n  var to = _ref2.to,\n      className = _ref2.className,\n      _children2 = _ref2.children,\n      activeClassName = _ref2.activeClassName;\n  return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n    children: function children(atlas) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: function onClick() {\n          return handleClick(atlas, to);\n        },\n        className: classnames('atlas-link', className, {\n          activeClassName: atlas.path === to\n        }),\n        children: _children2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 4\n      }, _this2);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 3\n  }, _this2);\n};\n_c3 = Link;\nexport var excludedPaths = ['/library', '/type'];\nexport default Atlas;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AtlasContext\");\n$RefreshReg$(_c2, \"Route\");\n$RefreshReg$(_c3, \"Link\");","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js"],"names":["React","useContext","classnames","padWithSlash","path","newPath","length","slice","isWildcard","x","matchPaths","p1","p2","s1","s2","dirs1","split","dirs2","i","AtlasClass","history","push","now","reRender","state","Object","keys","forEach","dirs","last","getLastUrlSegment","track","nextUp","trackQueue","queueIndex","Atlas","AtlasContext","createContext","AtlasProvider","Provider","AtlasConsumer","Consumer","Route","children","atlas","handleClick","setPath","Link","to","className","activeClassName","excludedPaths"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport classnames from 'classnames'\n\n// TODO: MAKE NOT HORRENDOUS\n\nconst padWithSlash = (path) => {\n\tlet newPath = path\n\tif (newPath[0] !== '/') {\n\t\tnewPath = '/' + newPath\n\t}\n\tif (newPath.length > 1 && newPath[newPath.length - 1] === '/') {\n\t\tnewPath = newPath.slice(0, newPath.length - 1)\n\t}\n\treturn newPath\n}\n\nconst isWildcard = (x) => {\n\tif (x.length < 2) {\n\t\treturn false\n\t}\n\treturn (x[0] === '[') && (x[x.length - 1] === ']')\n}\n\nconst matchPaths = (p1, p2) => {\n\tconst s1 = padWithSlash(p1)\n\tconst s2 = padWithSlash(p2)\n\tif (s1 === '/') {\n\t\treturn s2 === '/' \n\t}\n\tconst dirs1 = s1.split('/')\n\tconst dirs2 = s2.split('/')\n\tif (dirs1.length !== dirs2.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < dirs1.length; i++) {\n\t\tif (isWildcard(dirs1[i])) {\n\t\t\tcontinue\n\t\t}\n\t\tif (isWildcard(dirs2[i])) {\n\t\t\tcontinue\n\t\t}\n\t\tif (dirs1[i] !== dirs2[i]) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nclass AtlasClass {\n\tconstructor(path) {\n\t\tthis.history = [padWithSlash(path || '/')]\n\t\tthis.now = 0\n\t\tthis.state = {}\n\t\tthis.path = this.history[0]\n\t\tthis.trackQueue = []\n\t\tthis.queueIndex = 0\n\t}\n\n\tpadWithSlash = (path) => {\n\t\tif (path[0] !== '/') {\n\t\t\tpath = '/' + path\n\t\t}\n\t\treturn path\n\t}\n\n\tsetPath = (path) => {\n\t\tthis.path = padWithSlash(path)\n\t\tthis.history.push(padWithSlash(path))\n\t\t// typeof window != \"undefined\" && window.location.replace(this.padWithSlash(path))\n\t\tthis.now += 1\n\t\tthis.reRender()\n\t}\t\n\n\tsetState = (state) => {\n\t\tObject.keys(state).forEach(x => {\n\t\t\tthis.state[x] = state[x]\n\t\t})\n\t}\n\tback = () => this.now -= 1\n\tforward = () => this.now += 1\n\n\treRender = () => {} // Main overwrites with Main.forceUpdate()\n\n\tgetLastUrlSegment = () => {\n\t\tconst dirs = padWithSlash(this.path).split('/')\n\t\treturn dirs[dirs.length - 1]\n\t}\n\n\tisArtist = () => {\n\t\tconst last = this.getLastUrlSegment()\n\t\treturn (this.path[0] === '/') && (last.length === this.path.length - 1) && (last.length > 0)\n\t}\n\n\taddTrackToQueue = (track) => this.nextUp.push(track)\n}\n\n\n\nconst Atlas = new AtlasClass()\n\nexport const AtlasContext = React.createContext(Atlas)\nexport const AtlasProvider = AtlasContext.Provider\nexport const AtlasConsumer = AtlasContext.Consumer\n\nexport const Route = ({ path, children }) => (\n\n\t<AtlasConsumer>\n\t\t{\n\t\t\t(atlas) => {\n\t\t\t\treturn matchPaths(atlas.path, path) && children\n\t\t\t}\n\t\t}\n\t</AtlasConsumer>\n)\n\nconst handleClick = (atlas, path) => {\n\tatlas.setPath(path)\n}\n\nexport const Link = ({ to, className, children, activeClassName }) => {\n\treturn (\n\t\t<AtlasConsumer>\n\t\t{ \n\t\t\t(atlas) => (\n\t\t\t<a onClick={() => handleClick(atlas, to)} className={classnames('atlas-link', className,  { activeClassName: atlas.path === to })}>\n\t\t\t\t{ children }\n\t\t\t</a>)\n\t\t}\n\t\t</AtlasConsumer>\n\t)\n}\n\nexport const excludedPaths = ['/library', '/type']\n\nexport default Atlas\n\n"]},"metadata":{},"sourceType":"module"}