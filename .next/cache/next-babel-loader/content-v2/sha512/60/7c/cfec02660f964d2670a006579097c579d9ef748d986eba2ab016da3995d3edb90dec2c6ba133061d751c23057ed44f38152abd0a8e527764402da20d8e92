{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/stereo.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Left from '../components/left.js';\nimport Right from '../components/right.js';\nexport default class Stereo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      playing: false,\n      playingId: -1,\n      audioSrc: \"test_data/music/sig.m4a\"\n    });\n\n    _defineProperty(this, \"play\", song => {\n      if (song.id === this.state.playingId) {\n        this.setState({\n          playing: true\n        }, () => this.audioRef.play());\n      } else {\n        this.setState({\n          playing: true,\n          playingId: song.id,\n          audioSrc: song.audioSrc\n        }, () => this.audioRef.play());\n      }\n    });\n\n    _defineProperty(this, \"pause\", () => {\n      this.setState({\n        playing: false\n      }, () => this.audioRef.pause());\n    });\n\n    _defineProperty(this, 1, void 0);\n\n    _defineProperty(this, \"toggle\", () => {\n      this.state.playing ? this.pause() : this.play();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left fake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Left, {\n        ref: \"left\",\n        toggle: this.toggle,\n        play: this.play,\n        pause: this.pause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Right, {\n        ref: \"right\",\n        toggle: this.toggle,\n        play: this.play,\n        pause: this.pause,\n        playingId: this.state.playingId,\n        playing: this.state.playing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"audio\",\n        src: this.state.audioSrc,\n        ref: input => {\n          this.audioRef = input;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/stereo.js"],"names":["Component","ReactDOM","Left","Right","Stereo","playing","playingId","audioSrc","song","id","state","setState","audioRef","play","pause","render","toggle","input"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAErC;AACPK,MAAAA,OAAO,EAAE,KADF;AAEPC,MAAAA,SAAS,EAAE,CAAC,CAFL;AAGPC,MAAAA,QAAQ,EAAE;AAHH,KAFqC;;AAAA,kCAQrCC,IAAD,IAAU;AAChB,UAAIA,IAAI,CAACC,EAAL,KAAY,KAAKC,KAAL,CAAWJ,SAA3B,EAAsC;AACrC,aAAKK,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE;AAAX,SAAd,EAAiC,MAAM,KAAKO,QAAL,CAAcC,IAAd,EAAvC;AACA,OAFD,MAEO;AACN,aAAKF,QAAL,CAAc;AACbN,UAAAA,OAAO,EAAE,IADI;AAEbC,UAAAA,SAAS,EAAEE,IAAI,CAACC,EAFH;AAGbF,UAAAA,QAAQ,EAAEC,IAAI,CAACD;AAHF,SAAd,EAG4B,MAAM,KAAKK,QAAL,CAAcC,IAAd,EAHlC;AAIA;AACD,KAjB4C;;AAAA,mCAmBrC,MAAM;AACb,WAAKF,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAkC,MAAM,KAAKO,QAAL,CAAcE,KAAd,EAAxC;AACA,KArB4C;;AAAA,0BAsB9C,CAtB8C;;AAAA,oCAuBpC,MAAM;AACd,WAAKJ,KAAL,CAAWL,OAAX,GAAqB,KAAKS,KAAL,EAArB,GAAoC,KAAKD,IAAL,EAApC;AACA,KAzB4C;AAAA;;AA2B7CE,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADD,eAEI,QAAC,IAAD;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,MAAM,EAAE,KAAKC,MAA9B;AAAsC,QAAA,IAAI,EAAE,KAAKH,IAAjD;AAAuD,QAAA,KAAK,EAAE,KAAKC;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAC,OAAX;AACC,QAAA,MAAM,EAAE,KAAKE,MADd;AAEC,QAAA,IAAI,EAAE,KAAKH,IAFZ;AAGC,QAAA,KAAK,EAAE,KAAKC,KAHb;AAIC,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWJ,SAJvB;AAKC,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWL;AALrB;AAAA;AAAA;AAAA;AAAA,cAHJ,eASC;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,GAAG,EAAE,KAAKK,KAAL,CAAWH,QAAlC;AAA4C,QAAA,GAAG,EAAGU,KAAD,IAAW;AAAC,eAAKL,QAAL,GAAgBK,KAAhB;AAAsB;AAAnF;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAaA;;AAzC4C","sourcesContent":["import { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Left from '../components/left.js'\nimport Right from '../components/right.js'\n\nexport default class Stereo extends Component {\n\n\tstate = {\n\t\tplaying: false,\n\t\tplayingId: -1,\n\t\taudioSrc: \"test_data/music/sig.m4a\"\n\t}\n\n\tplay = (song) => {\n\t\tif (song.id === this.state.playingId) {\n\t\t\tthis.setState({ playing: true }, () => this.audioRef.play())\n\t\t} else {\n\t\t\tthis.setState({ \n\t\t\t\tplaying: true, \n\t\t\t\tplayingId: song.id, \n\t\t\t\taudioSrc: song.audioSrc }, () => this.audioRef.play())\n\t\t}\n\t}\n\n\tpause = () => {\n\t\tthis.setState({ playing: false }, () => this.audioRef.pause())\n\t}\n1\n\ttoggle = () => {\n\t\tthis.state.playing ? this.pause() : this.play() \n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"page-content\">\n\t\t\t\t<div className=\"left fake\" />\n\t    \t\t<Left ref=\"left\" toggle={this.toggle} play={this.play} pause={this.pause} />\n\t    \t\t<Right ref=\"right\" \n\t    \t\t\ttoggle={this.toggle} \n\t    \t\t\tplay={this.play} \n\t    \t\t\tpause={this.pause} \n\t    \t\t\tplayingId={this.state.playingId} \n\t    \t\t\tplaying={this.state.playing} />\n\t\t\t\t<audio id=\"audio\" src={this.state.audioSrc} ref={(input) => {this.audioRef = input}} />\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}