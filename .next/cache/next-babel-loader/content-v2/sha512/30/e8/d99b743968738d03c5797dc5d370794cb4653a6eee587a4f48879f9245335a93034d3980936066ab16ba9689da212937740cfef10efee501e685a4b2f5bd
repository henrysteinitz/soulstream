{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/signin.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport classnames from 'classnames';\nimport Prisma from '@prisma/client';\nimport { createHash } from 'crypto';\nexport default class SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      password: '',\n      passwordRetype: '',\n      signUp: false\n    });\n\n    _defineProperty(this, \"handleEmail\", e => this.setState({\n      email: e.target.value\n    }));\n\n    _defineProperty(this, \"handlePassword\", e => this.setState({\n      password: e.target.value\n    }));\n\n    _defineProperty(this, \"handlePasswordRetype\", e => this.setState({\n      passwordRetype: e.target.value\n    }));\n\n    _defineProperty(this, \"handleSignIn\", () => {\n      const {\n        email,\n        password\n      } = this.state;\n    });\n\n    _defineProperty(this, \"handleSignUp\", () => {\n      const {\n        startSession\n      } = this.props;\n      const {\n        email,\n        password,\n        passwordRetype\n      } = this.state;\n\n      if (password !== passwordRetype) {\n        // TODO: Validate so we never enter this condition\n        return;\n      } // Hash password\n\n\n      const hash = createHash('sha256');\n      hash.update(password);\n      const passwordHash = hash.digest('hex');\n      fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: {\n          email,\n          passwordHash\n        }\n      }).then(res => {\n        console.log(res);\n      });\n    });\n  }\n\n  render() {\n    const {\n      signUp\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: classnames('signin-input', 'signin-email'),\n        placeholder: \"Email\",\n        onChange: this.handleEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classnames('signin-input', 'signin-email'),\n        placeholder: \"Password\",\n        type: \"password\",\n        onChange: this.handlePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), signUp && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classnames('signin-input', 'signin-email'),\n        placeholder: \"Retype password\",\n        type: \"password\",\n        onChange: this.handlePasswordRetype\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), signUp || /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signin-button\",\n        onClick: this.handleSignIn,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this), signUp && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signin-button\",\n        onClick: this.handleSignUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this), signUp || /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-signup-toggle\",\n        onClick: () => this.setState({\n          signUp: true\n        }),\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }, this), signUp && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-signup-toggle\",\n        onClick: () => this.setState({\n          signUp: false\n        }),\n        children: \"Already have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/signin.js"],"names":["Component","classnames","Prisma","createHash","SignIn","email","password","passwordRetype","signUp","e","setState","target","value","state","startSession","props","hash","update","passwordHash","digest","fetch","method","headers","body","then","res","console","log","render","handleEmail","handlePassword","handlePasswordRetype","handleSignIn","handleSignUp"],"mappings":"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","sourcesContent":["import { Component } from 'react'\n\nimport classnames from 'classnames'\nimport Prisma from '@prisma/client'\nimport { createHash } from 'crypto'\n\nexport default class SignIn extends Component {\n\t\n\tstate = {\n\t\temail: '',\n\t\tpassword: '',\n\t\tpasswordRetype: '',\n\t\tsignUp: false\n\t}\n\n\thandleEmail = (e) => this.setState({ email: e.target.value })\n\n\thandlePassword = (e) => this.setState({ password: e.target.value })\n\n\thandlePasswordRetype = (e) => this.setState({ passwordRetype: e.target.value })\n\n\thandleSignIn = () => {\n\t\tconst { email, password } = this.state\n\t}\n\n\thandleSignUp = () => {\n\t\tconst { startSession } = this.props\n\t\tconst { email, password, passwordRetype } = this.state\n\t\tif (password !== passwordRetype) {\n\t\t\t// TODO: Validate so we never enter this condition\n\t\t\treturn;\n\t\t}\n\t\t// Hash password\n\t\tconst hash = createHash('sha256');\n\t\thash.update(password);\n\t\tconst passwordHash = hash.digest('hex')\n\n\t\tfetch('/api/auth/signup', \n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: {\n\t\t\t\temail, \n\t\t\t\tpasswordHash\n\t\t\t}\n\t\t}).then((res) => {\n\t\t\tconsole.log(res)\n\t\t})\n\n\t}\n\n\trender() {\n\t\tconst { signUp } = this.state\n\t\treturn (\n\t\t\t<div className=\"sign-in\">\n\t\t\t\t<input className={classnames('signin-input', 'signin-email')} placeholder=\"Email\" onChange={this.handleEmail} />\n\t\t\t\t<input className={classnames('signin-input', 'signin-email')} placeholder=\"Password\" type=\"password\" onChange={this.handlePassword}/>\n\t\t\t\t{ signUp && <input className={classnames('signin-input', 'signin-email')} placeholder=\"Retype password\" type=\"password\" onChange={this.handlePasswordRetype} /> }\n\t\t\t\t{ \n\t\t\t\t\tsignUp ||\n\t\t\t\t\t<button className=\"signin-button\" onClick={this.handleSignIn}>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</button>\n\t\t\t\t}\n\t\t\t\t{ \n\t\t\t\t\tsignUp &&\n\t\t\t\t\t<button className=\"signin-button\" onClick={this.handleSignUp}>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</button>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tsignUp ||\n\t\t\t\t\t<div className=\"signin-signup-toggle\" onClick={() => this.setState({ signUp: true })}>\n\t\t\t\t\t\tDon't have an account?\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tsignUp &&\n\t\t\t\t\t<div className=\"signin-signup-toggle\" onClick={() => this.setState({ signUp: false })}>\n\t\t\t\t\t\tAlready have an account?\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}