{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/navigation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport Atlas, { Link } from '../lib/atlas/atlas.js';\nimport classnames from 'classnames';\nimport Controls from './controls.js';\nimport Logo from './logo.js';\nimport Search from './search.js';\nimport SignIn from './signin.js';\nimport Track from './track.js';\n\nvar Navigation = /*#__PURE__*/function (_Component) {\n  _inherits(Navigation, _Component);\n\n  var _super = _createSuper(Navigation);\n\n  function Navigation() {\n    _classCallCheck(this, Navigation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Navigation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          pocketMode = _this$props.pocketMode,\n          toggleScreen = _this$props.toggleScreen,\n          play = _this$props.play,\n          pause = _this$props.pause,\n          isPlaying = _this$props.isPlaying,\n          nowPlaying = _this$props.nowPlaying,\n          signedIn = _this$props.signedIn,\n          startSession = _this$props.startSession,\n          currentTrackTime = _this$props.currentTrackTime,\n          totalTrackTime = _this$props.totalTrackTime,\n          skipTo = _this$props.skipTo;\n      console.log(pocketMode);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          big: true,\n          toggleScreen: toggleScreen,\n          color: 'white'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Track, {\n          song: nowPlaying,\n          playingId: nowPlaying.id,\n          isPlaying: isPlaying,\n          play: play,\n          pause: pause,\n          currentTime: currentTrackTime,\n          totalTime: totalTrackTime,\n          skipTo: skipTo,\n          id: nowPlaying.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this), \"))}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Navigation;\n}(Component);\n\nexport { Navigation as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/navigation.js"],"names":["Component","Atlas","Link","classnames","Controls","Logo","Search","SignIn","Track","Navigation","props","pocketMode","toggleScreen","play","pause","isPlaying","nowPlaying","signedIn","startSession","currentTrackTime","totalTrackTime","skipTo","console","log","id"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,uBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;IAGqBC,U;;;;;;;;;;;;;6BAEX;AAAA,wBAaJ,KAAKC,KAbD;AAAA,UAEPC,UAFO,eAEPA,UAFO;AAAA,UAGPC,YAHO,eAGPA,YAHO;AAAA,UAIPC,IAJO,eAIPA,IAJO;AAAA,UAKPC,KALO,eAKPA,KALO;AAAA,UAMPC,SANO,eAMPA,SANO;AAAA,UAOPC,UAPO,eAOPA,UAPO;AAAA,UAQPC,QARO,eAQPA,QARO;AAAA,UASPC,YATO,eASPA,YATO;AAAA,UAUPC,gBAVO,eAUPA,gBAVO;AAAA,UAWPC,cAXO,eAWPA,cAXO;AAAA,UAYPC,MAZO,eAYPA,MAZO;AAeRC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AAEA,0BACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACC,QAAC,IAAD;AAAM,UAAA,GAAG,MAAT;AAAU,UAAA,YAAY,EAAEC,YAAxB;AAAsC,UAAA,KAAK,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AACC,UAAA,IAAI,EAAEI,UADP;AAEC,UAAA,SAAS,EAAEA,UAAU,CAACQ,EAFvB;AAGC,UAAA,SAAS,EAAET,SAHZ;AAIC,UAAA,IAAI,EAAEF,IAJP;AAKC,UAAA,KAAK,EAAEC,KALR;AAMC,UAAA,WAAW,EAAEK,gBANd;AAOC,UAAA,SAAS,EAAEC,cAPZ;AAQC,UAAA,MAAM,EAAEC,MART;AASC,UAAA,EAAE,EAAEL,UAAU,CAACQ;AAThB;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAoCA;;;;EAvDsCxB,S;;SAAnBS,U","sourcesContent":["import { Component } from 'react'\nimport Atlas, { Link } from '../lib/atlas/atlas.js'\nimport classnames from 'classnames'\n\nimport Controls from './controls.js'\nimport Logo from './logo.js'\nimport Search from './search.js'\nimport SignIn from './signin.js'\nimport Track from './track.js'\n\n\nexport default class Navigation extends Component {\n\n\trender() {\n\t\tconst { \n\t\t\tpocketMode, \n\t\t\ttoggleScreen, \n\t\t\tplay, \n\t\t\tpause, \n\t\t\tisPlaying, \n\t\t\tnowPlaying, \n\t\t\tsignedIn, \n\t\t\tstartSession, \n\t\t\tcurrentTrackTime, \n\t\t\ttotalTrackTime ,\n\t\t\tskipTo\n\t\t} = this.props\n\n\t\tconsole.log(pocketMode)\n\n\t\treturn (\n\t\t\t<div className=\"navigation\">\n\t\t\t\t<Logo big toggleScreen={toggleScreen} color={'white'} />\n\t\t\t\t<Track \n\t\t\t\t\tsong={nowPlaying} \n\t\t\t\t\tplayingId={nowPlaying.id} \n\t\t\t\t\tisPlaying={isPlaying} \n\t\t\t\t\tplay={play} \n\t\t\t\t\tpause={pause} \n\t\t\t\t\tcurrentTime={currentTrackTime} \n\t\t\t\t\ttotalTime={totalTrackTime}\n\t\t\t\t\tskipTo={skipTo}\n\t\t\t\t\tid={nowPlaying.id} />\n\t\t\t\t))}\n\n\t\t\t\t{/*<Controls \n\t\t\t\t\tplay={play} \n\t\t\t\t\tpause={pause} \n\t\t\t\t\tisPlaying={isPlaying} \n\t\t\t\t\tnowPlaying={nowPlaying} \n\t\t\t\t\tpocketMode={pocketMode} \n\t\t\t\t\tsignedIn={signedIn} \n\t\t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\ttotalTracksdfghjkl;'\n\t\t    \t\tTime={totalTrackTime}\n\t\t    \t\tskipTo={skipTo}\n\t\t\t\t/>\n\t\t\t\t{signedIn && <Link className={classnames(\"selected\", { active: Atlas.path === '/' })} to=\"/\">\n\t\t\t\t<div className=\"nav-link\">Stream</div></Link>}\n\t\t\t\t{signedIn && <Link activeClassName=\"selected\" to=\"/library\"><div className=\"nav-link\">Library</div></Link>}\n\t\t\t\t{signedIn && <Link activeClassName=\"selected\" to=\"/history\"><div className=\"nav-link\">History</div></Link>}\n\t\t\t\t{signedIn && <Link activeClassName=\"selected\" to=\"/type\"><div className=\"nav-link\">Type</div></Link>}\n\t\t\t\t{signedIn || <SignIn startSession={startSession} />}*/}\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}