{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport prisma from '../lib/prisma.js';\nimport Main from './main.js';\nexport const getStaticProps = async () => {\n  const stream = await prisma.track.findMany({\n    select: {\n      id: true,\n      title: true,\n      audioUrl: true,\n      artUrl: true,\n      url: true,\n      artists: true\n    }\n  });\n  return {\n    props: {\n      stream\n    }\n  };\n};\nexport default (props => /*#__PURE__*/_jsxDEV(Main, _objectSpread({}, props), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 27\n}, this));","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/pages/index.js"],"names":["prisma","Main","getStaticProps","stream","track","findMany","select","id","title","audioUrl","artUrl","url","artists","props"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC,QAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAaC,QAAb,CAAsB;AAC1CC,IAAAA,MAAM,EAAE;AACPC,MAAAA,EAAE,EAAE,IADG;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,MAAM,EAAE,IAJJ;AAKJC,MAAAA,GAAG,EAAE,IALD;AAMJC,MAAAA,OAAO,EAAE;AANL;AADkC,GAAtB,CAArB;AAUE,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEV,MAAAA;AAAF;AAAT,GAAP;AACF,CAZM;AAcP,gBAAgBU,KAAD,iBAAW,QAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,QAA1B","sourcesContent":["import prisma from '../lib/prisma.js'\nimport Main from './main.js'\n\nexport const getStaticProps = async () => {\n\tconst stream = await prisma.track.findMany({\n\t\tselect: {\n\t\t\tid: true,\n\t    \ttitle: true,\n\t    \taudioUrl: true,\n\t    \tartUrl: true,\n\t    \turl: true,\n\t    \tartists: true\n\t\t}\n\t  })\n\t  return { props: { stream } }\n}\n\nexport default (props) => <Main {...props} />\n\n\n"]},"metadata":{},"sourceType":"module"}