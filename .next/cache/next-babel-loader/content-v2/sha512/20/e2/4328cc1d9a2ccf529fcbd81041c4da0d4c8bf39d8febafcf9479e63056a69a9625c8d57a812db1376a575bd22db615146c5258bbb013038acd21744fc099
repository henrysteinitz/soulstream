{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/lyrics.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport Draggable from 'react-draggable';\nimport classnames from 'classnames'; // map line intervals\n\nexport default class Lyrics extends Component {\n  render() {\n    const {\n      lyrics,\n      time\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics-container\",\n      children: lyrics.map((verse, s) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verse\",\n        children: verse.map((line, l) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames({\n            bold: verse.contains(time)\n          }, \"verse-line\"),\n          children: line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport class LyricsEditor extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      body: \"yo\",\n      startTime: 0,\n      endTime: this.props.totalTrackTime\n    });\n\n    _defineProperty(this, \"setStartTime\", () => {\n      this.setState({\n        startTime: 0.0\n      });\n    });\n\n    _defineProperty(this, \"setEndTime\", () => {\n      this.setState({\n        startTime: 0.0\n      });\n    });\n\n    _defineProperty(this, \"save\", () => {\n      const {\n        nowPlaying\n      } = this.props;\n      const {\n        verse,\n        startTime,\n        endTime\n      } = this.state;\n      fetch('/api/crowd/post_verse', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          trackId: nowPlaying.id,\n          body,\n          startTime,\n          endTime\n        })\n      }).then(res => {\n        res.json().then(body => {\n          // add to current VerseMap\n          return;\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      body\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics-editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(Draggable, {\n        axis: \"x\",\n        onStop: this.setStartTime,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n        axis: \"x\",\n        onStop: this.setEndTime,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"verse-editor\",\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.save,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/lyrics.js"],"names":["Component","Draggable","classnames","Lyrics","render","lyrics","time","props","map","verse","s","line","l","bold","contains","LyricsEditor","body","startTime","endTime","totalTrackTime","setState","nowPlaying","state","fetch","method","headers","JSON","stringify","trackId","id","then","res","json","setStartTime","setEndTime","save"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport Draggable from 'react-draggable'\nimport classnames from 'classnames'\n\n// map line intervals\nexport default class Lyrics extends Component {\n\trender() {\n\t\tconst { lyrics, time } = this.props\t\t\n\t\treturn (\n\t\t\t<div className=\"lyrics-container\">\n\t\t\t\t{ lyrics.map((verse, s) => (\n\t\t\t\t\t<div className=\"verse\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tverse.map((line, l) => (\n\t\t\t\t\t\t\t\t<div className={classnames({ bold: verse.contains(time)}, \"verse-line\")}>\n\t\t\t\t\t\t\t\t\t{line}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport class LyricsEditor extends Component {\n\tstate= {\n\t\tbody: \"yo\",\n\t\tstartTime: 0,\n\t\tendTime: this.props.totalTrackTime\n\t}\n\n\tsetStartTime = () => {\n\t\tthis.setState({ startTime: 0.0 })\n\t}\n\n\tsetEndTime = () => {\n\t\tthis.setState({ startTime: 0.0 })\n\t}\n\n\tsave = () => {\n\t\tconst { nowPlaying } = this.props\n\t\tconst { verse, startTime, endTime } = this.state\n\t\tfetch('/api/crowd/post_verse', \n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttrackId: nowPlaying.id,\n\t\t\t\tbody,\n\t\t\t\tstartTime,\n\t\t\t\tendTime\n\t\t\t})\n\t\t}).then((res) => {\n\t\t\tres.json().then(body => {\n\t\t\t\t// add to current VerseMap\n\t\t\t\treturn\n\t\t\t})\n\t\t})\n\t} \n\n\trender() {\n\t\tconst { body } = this.state\n\t\treturn (\n\t\t\t<div className=\"lyrics-editor-container\">\n\t\t\t\t<Draggable \n\t\t\t\t\taxis=\"x\"\n\t\t\t\t\tonStop={this.setStartTime}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"time-pointer\" />\n\t\t\t\t</Draggable>\n\t\t\t\t<Draggable \n\t\t\t\t\taxis=\"x\"\n\t\t\t\t\tonStop={this.setEndTime}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"time-pointer\"/>\n\t\t\t\t</Draggable>\n\n\t\t\t\t<textarea className=\"verse-editor\">\n\t\t\t\t\t{body}\n\t\t\t\t</textarea>\n\n\t\t\t\t<button onClick={this.save}>\n\t\t\t\t\tsave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}