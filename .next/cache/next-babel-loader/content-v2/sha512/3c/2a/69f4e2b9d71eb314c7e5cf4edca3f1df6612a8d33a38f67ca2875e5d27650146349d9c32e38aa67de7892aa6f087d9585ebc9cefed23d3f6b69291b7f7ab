{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nclass Atlas {\n  constructor(preHistory) {\n    _defineProperty(this, \"push\", pathname => {\n      this.history.push(pathname);\n      this.now += 1;\n    });\n\n    _defineProperty(this, \"back\", () => this.now -= 1);\n\n    _defineProperty(this, \"forward\", () => this.now += 1);\n\n    _defineProperty(this, \"pathname\", () => this.history[now]);\n\n    _defineProperty(this, \"context\", () => this.context);\n\n    _defineProperty(this, \"provider\", () => this.context.Provider);\n\n    _defineProperty(this, \"consumer\", () => this.context.Consumer);\n\n    this.history = preHistory;\n    this.now = preHistory.length - 1;\n    this.context = /*#__PURE__*/React.createContext(this);\n  }\n\n}\n\nexport default Atlas;","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js"],"names":["React","Atlas","constructor","preHistory","pathname","history","push","now","context","Provider","Consumer","length","createContext"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,CAAY;AACXC,EAAAA,WAAW,CAACC,UAAD,EAAa;AAAA,kCAOhBC,QAAD,IAAc;AACpB,WAAKC,OAAL,CAAaC,IAAb,CAAkBF,QAAlB;AACA,WAAKG,GAAL,IAAY,CAAZ;AACA,KAVuB;;AAAA,kCAYjB,MAAM,KAAKA,GAAL,IAAY,CAZD;;AAAA,qCAcd,MAAM,KAAKA,GAAL,IAAY,CAdJ;;AAAA,sCAgBb,MAAM,KAAKF,OAAL,CAAaE,GAAb,CAhBO;;AAAA,qCAkBd,MAAM,KAAKC,OAlBG;;AAAA,sCAoBb,MAAM,KAAKA,OAAL,CAAaC,QApBN;;AAAA,sCAsBb,MAAM,KAAKD,OAAL,CAAaE,QAtBN;;AACvB,SAAKL,OAAL,GAAeF,UAAf;AACA,SAAKI,GAAL,GAAWJ,UAAU,CAACQ,MAAX,GAAoB,CAA/B;AACA,SAAKH,OAAL,gBAAeR,KAAK,CAACY,aAAN,CAAoB,IAApB,CAAf;AACA;;AALU;;AA0BZ,eAAeX,KAAf","sourcesContent":["import React from 'react'\n\nclass Atlas {\n\tconstructor(preHistory) {\n\t\tthis.history = preHistory\n\t\tthis.now = preHistory.length - 1\n\t\tthis.context = React.createContext(this)\n\t}\n\n\n\tpush = (pathname) => {\n\t\tthis.history.push(pathname)\n\t\tthis.now += 1\n\t}\n\n\tback = () => this.now -= 1\n\n\tforward = () => this.now += 1\n\n\tpathname = () => this.history[now]\n\n\tcontext = () => this.context\n\n\tprovider = () => this.context.Provider\n\n\tconsumer = () => this.context.Consumer\n}\n\nexport default Atlas\n"]},"metadata":{},"sourceType":"module"}