{"ast":null,"code":"import prisma from '../../../lib/prisma.js';\nexport default (async (req, res) => {\n  const {\n    authorId,\n    trackId,\n    sessionToken,\n    message\n  } = req.body; // TODO: create isAuthenticated helper\n  // const account = await prisma.account.findUnique({\n  // \twhere: { id: authorId },\n  // \tselect: { \n  // \t\tsessionToken: true \n  // \t}\n  // })\n  // if (account.sessionToken != sessionToken) {\n  //   res.status(500)\n  // }  \n\n  const comment = await prisma.trackComment.create({\n    data: {\n      message,\n      duration: 5\n    },\n    connect: {\n      track: {\n        id: trackId\n      },\n      account: {\n        id: authorId\n      }\n    }\n  });\n  console.log(comment);\n  res.json(comment);\n});","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/pages/api/crowd/comment.js"],"names":["prisma","req","res","authorId","trackId","sessionToken","message","body","comment","trackComment","create","data","duration","connect","track","id","account","console","log","json"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA;AAAnC,MAA+CL,GAAG,CAACM,IAAzD,CADiC,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,OAAO,GAAG,MAAMR,MAAM,CAACS,YAAP,CAAoBC,MAApB,CAA2B;AAChDC,IAAAA,IAAI,EAAE;AACHL,MAAAA,OADG;AAEHM,MAAAA,QAAQ,EAAE;AAFP,KAD0C;AAK/CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE;AAACC,QAAAA,EAAE,EAAEX;AAAL,OADA;AAEPY,MAAAA,OAAO,EAAE;AAACD,QAAAA,EAAE,EAAEZ;AAAL;AAFF;AALsC,GAA3B,CAAtB;AAUAc,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACAN,EAAAA,GAAG,CAACiB,IAAJ,CAASX,OAAT;AACD,CAxBD","sourcesContent":["import prisma from '../../../lib/prisma.js';\n\nexport default async (req, res) => {\n  const { authorId, trackId, sessionToken, message } = req.body;\n  // TODO: create isAuthenticated helper\n  // const account = await prisma.account.findUnique({\n  // \twhere: { id: authorId },\n  // \tselect: { \n  // \t\tsessionToken: true \n  // \t}\n  // })\n  // if (account.sessionToken != sessionToken) {\n  //   res.status(500)\n  // }  \n  const comment = await prisma.trackComment.create({\n  \tdata: { \n      message,\n      duration: 5\n    },\n    connect: {\n      track: {id: trackId},\n      account: {id: authorId},\n    },\n  })\n  console.log(comment)\n  res.json(comment)\n}\n"]},"metadata":{},"sourceType":"module"}