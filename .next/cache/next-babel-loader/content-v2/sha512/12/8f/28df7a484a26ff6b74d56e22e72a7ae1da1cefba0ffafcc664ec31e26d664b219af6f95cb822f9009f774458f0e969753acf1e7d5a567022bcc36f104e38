{"ast":null,"code":"export default (async (req, res) => {\n  const {\n    authorId,\n    TrackId,\n    sessionToken,\n    message\n  } = req.body; // TODO: create isAuthenticated helper\n\n  const account = await prisma.account.findUnique({\n    where: {\n      id: authorId\n    },\n    select: {\n      sessionToken: true\n    }\n  });\n\n  if (account.sessionToken != sessionToken) {\n    res.status(500);\n  }\n\n  const comment = await prisma.comment.create({\n    data: {\n      authorIdd,\n      trackId,\n      authorId,\n      message\n    }\n  });\n  res.json(comment);\n});","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/pages/api/crowd/comment.js"],"names":["req","res","authorId","TrackId","sessionToken","message","body","account","prisma","findUnique","where","id","select","status","comment","create","data","authorIdd","trackId","json"],"mappings":"AAKA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA;AAAnC,MAA+CL,GAAG,CAACM,IAAzD,CADiC,CAEjC;;AACA,QAAMC,OAAO,GAAG,MAAMC,MAAM,CAACD,OAAP,CAAeE,UAAf,CAA0B;AAC/CC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAET;AAAN,KADwC;AAE/CU,IAAAA,MAAM,EAAE;AACPR,MAAAA,YAAY,EAAE;AADP;AAFuC,GAA1B,CAAtB;;AAMA,MAAIG,OAAO,CAACH,YAAR,IAAwBA,YAA5B,EAA0C;AACxCH,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX;AACD;;AAED,QAAMC,OAAO,GAAG,MAAMN,MAAM,CAACM,OAAP,CAAeC,MAAf,CAAsB;AAC3CC,IAAAA,IAAI,EAAE;AACHC,MAAAA,SADG;AAEHC,MAAAA,OAFG;AAGHhB,MAAAA,QAHG;AAIHG,MAAAA;AAJG;AADqC,GAAtB,CAAtB;AAQAJ,EAAAA,GAAG,CAACkB,IAAJ,CAASL,OAAT;AACD,CAtBD","sourcesContent":["\n\n\n\n\nexport default async (req, res) => {\n  const { authorId, TrackId, sessionToken, message } = req.body;\n  // TODO: create isAuthenticated helper\n  const account = await prisma.account.findUnique({\n  \twhere: { id: authorId },\n  \tselect: { \n  \t\tsessionToken: true \n  \t}\n  })\n  if (account.sessionToken != sessionToken) {\n    res.status(500)\n  }  \n  \n  const comment = await prisma.comment.create({\n  \tdata: { \n      authorIdd,\n      trackId, \n      authorId,\n      message \n    }\n  })\n  res.json(comment)\n}\n"]},"metadata":{},"sourceType":"module"}