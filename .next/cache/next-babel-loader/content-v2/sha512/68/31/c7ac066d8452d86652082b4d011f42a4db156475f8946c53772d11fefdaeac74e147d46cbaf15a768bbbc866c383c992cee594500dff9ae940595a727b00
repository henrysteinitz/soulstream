{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/stereo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport Helipad from '../lib/helipad/helipad.js';\nimport { Route } from '../lib/atlas/atlas.js';\nimport Left from './left.js';\nimport Mural from './mural.js';\nimport Right from './right.js';\nimport Upload from './upload.js';\nimport { VerseMap } from '../state/lyrics.js';\n\nconst mapTracksById = tracks => {\n  let result = {};\n  tracks.forEach(track => {\n    result[track.id] = _objectSpread({}, track);\n    console.log(\"Map tracks by id .verses\");\n    console.log(result[track.id].verses);\n    result[track.id].verses = result[track.id].verses ? new VerseMap(result[track.id].verses) : new VerseMap([]);\n  });\n  return result;\n};\n\nexport default class Stereo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isPlaying: false,\n      song: null,\n      currentTrackTime: 0,\n      totalTrackTime: null,\n      scrubbingTrack: false,\n      scrubbingPlayer: false,\n      screenOn: false,\n      typing: false,\n      tracks: this.props.stream,\n      tracksById: mapTracksById(this.props.stream),\n      queue: [],\n      // list of track ids\\\n      defaultQueue: [],\n      dragTrackId: null,\n      nightMode: true // TODO: move to a global store.\n\n    });\n\n    _defineProperty(this, \"timeAnimationInterval\", null);\n\n    _defineProperty(this, \"play\", (song, source = \"STREAM\", mediaRef = null) => {\n      const ref = mediaRef || (song.type === 'VIDEO' ? this.videoRef : this.audioRef);\n\n      if (this.state.song && song.id === this.state.song.id) {\n        this.setState({\n          isPlaying: true,\n          currentTrackTime: ref.currentTime,\n          totalTrackTime: ref.duration\n        }, () => {\n          ref.play();\n          this.animateTime();\n        });\n      } else {\n        clearInterval(this.timeAnimationInterval);\n\n        if (source === 'STREAM') {// set default queue.\n        }\n\n        this.setState({\n          isPlaying: true,\n          currentTrackTime: 0,\n          totalTrackTime: ref.duration,\n          song\n        }, () => {\n          ref.play();\n          this.animateTime();\n          setTimeout(() => this.turnScreenOn(), 70);\n        });\n      }\n    });\n\n    _defineProperty(this, \"playNextInQueue\", () => {\n      const {\n        queue,\n        tracksById\n      } = this.state;\n\n      if (queue.length > 0) {\n        this.play(tracksById[queue.shift()], 'QUEUE');\n        this.setState({\n          queue\n        });\n      }\n    });\n\n    _defineProperty(this, \"playQueueTrackByIndex\", i => () => {\n      let {\n        queue,\n        tracksById\n      } = this.state;\n      this.play(tracksById[queue[i]], 'QUEUE');\n      this.setState({\n        queue: queue.slice(i + 1)\n      });\n    });\n\n    _defineProperty(this, \"animateTime\", () => {\n      const {\n        song\n      } = this.state;\n      const ref = song.type === 'VIDEO' ? this.videoRef : this.audioRef;\n      this.timeAnimationInterval = setInterval(() => {\n        this.setState({\n          currentTrackTime: ref.currentTime,\n          totalTrackTime: ref.duration\n        });\n      }, 40);\n    });\n\n    _defineProperty(this, \"stopTimeAnimation\", () => {\n      clearInterval(this.timeAnimationInterval);\n    });\n\n    _defineProperty(this, \"pause\", () => {\n      const {\n        song\n      } = this.state;\n      const ref = song.type === 'VIDEO' ? this.videoRef : this.audioRef;\n      this.setState({\n        isPlaying: false\n      }, () => ref.pause());\n    });\n\n    _defineProperty(this, \"toggle\", () => {\n      this.state.isPlaying ? this.pause() : this.play(this.state.song);\n    });\n\n    _defineProperty(this, \"beginScrub\", () => {\n      this.stopTimeAnimation();\n      this.setState({\n        scrubbing: true\n      });\n    });\n\n    _defineProperty(this, \"endScub\", () => {\n      this.setState({\n        scrubbing: false\n      });\n    });\n\n    _defineProperty(this, \"skipTo\", (time, cb = () => {}) => {\n      const {\n        song\n      } = this.state;\n      const ref = song.type === 'VIDEO' ? this.videoRef : this.audioRef;\n      ref.currentTime = time;\n      this.setState({\n        currentTrackTime: time\n      }, cb);\n    });\n\n    _defineProperty(this, \"turnScreenOn\", () => this.setState({\n      screenOn: true\n    }));\n\n    _defineProperty(this, \"turnScreenOff\", () => this.setState({\n      screenOn: false\n    }));\n\n    _defineProperty(this, \"toggleScreen\", () => this.setState({\n      screenOn: !this.state.screenOn\n    }));\n\n    _defineProperty(this, \"handleSpacebar\", e => {\n      if (e.key === ' ' && !this.state.typing) {\n        e.preventDefault();\n        this.toggle();\n      }\n    });\n\n    _defineProperty(this, \"addVerse\", (verse, trackId) => {\n      const nextTracksById = _objectSpread({}, this.state.tracksById);\n\n      nextTracksById[trackid].verses.insert(verse);\n      this.setState({\n        tracksById: nextTracksById\n      }, () => this.syncTracks());\n    });\n\n    _defineProperty(this, \"syncSteamState\", () => {\n      const nextStream = this.state.tracks.map(x => this.state.tracksById[x.id]);\n      this.setState({\n        tracks: nextStream\n      });\n    });\n\n    _defineProperty(this, \"addToQueue\", id => {\n      this.setState({\n        queue: [...this.state.queue, id]\n      });\n    });\n\n    _defineProperty(this, \"startTrackDragging\", id => {\n      this.setState({\n        dragTrackId: id\n      });\n    });\n\n    _defineProperty(this, \"stopTrackDragging\", (id, e) => {\n      this.setState({\n        dragTrackId: null\n      });\n      const queueRect = this.left.queue.queueDropzone.getBoundingClientRect();\n\n      if (queueRect.left <= e.clientX && e.clientX <= queueRect.right && queueRect.top <= e.clientY && e.clientY <= queueRect.bottom) {\n        this.addToQueue(id);\n      }\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', e => this.handleSpacebar(e));\n    this.audioRef.onended = this.playNextInQueue;\n  }\n\n  render() {\n    const {\n      song,\n      isPlaying,\n      currentTrackTime,\n      totalTrackTime,\n      screenOn,\n      tracks,\n      dragTrackId,\n      nightMode\n    } = this.state;\n    const {\n      signedIn,\n      startSession,\n      stream,\n      account,\n      artist\n    } = this.props;\n    const realStream = tracks || stream;\n    console.log(dragTrackId);\n    return /*#__PURE__*/_jsxDEV(Helipad, {\n      className: \"page-outer-container\",\n      onKeyDown: this.handleSpacebar,\n      modal: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 85\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('page-content', {\n          center: !signedIn\n        }),\n        children: [screenOn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left fake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(Left, {\n          ref: \"left\",\n          toggle: this.toggle,\n          play: this.play,\n          pause: this.pause,\n          nowPlaying: song && this.state.tracksById[song.id],\n          isPlaying: isPlaying,\n          signedIn: signedIn,\n          startSession: startSession,\n          currentTrackTime: currentTrackTime,\n          totalTrackTime: totalTrackTime,\n          skipTo: this.skipTo,\n          toggleScreen: this.toggleScreen,\n          screenOn: screenOn,\n          account: account,\n          artist: artist,\n          setTyping: value => this.setState({\n            typing: value\n          }),\n          addVerse: this.addVerse,\n          dragTrackId: dragTrackId,\n          addToQueue: this.addToQueue,\n          queueTracks: this.state.queue.map(id => this.state.tracksById[id]),\n          stopTrackDragging: this.stopTrackDragging,\n          playQueueTrackByIndex: this.playQueueTrackByIndex,\n          nightMode: nightMode,\n          ref: input => {\n            this.left = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }, this), signedIn && /*#__PURE__*/_jsxDEV(Right, {\n          toggle: this.toggle,\n          play: this.play,\n          pause: this.pause,\n          playingId: song && song.id,\n          isPlaying: isPlaying,\n          signedIn: signedIn,\n          currentTrackTime: currentTrackTime,\n          totalTrackTime: totalTrackTime,\n          skipTo: this.skipTo,\n          stream: realStream,\n          account: account,\n          artist: artist,\n          startTrackDragging: this.startTrackDragging,\n          stopTrackDragging: this.stopTrackDragging\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"audio\",\n          src: song && song.audioUrl,\n          ref: input => {\n            this.audioRef = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"video\",\n          src: song && song.audioUrl,\n          ref: input => {\n            this.videoRef = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/stereo.js"],"names":["Component","ReactDOM","classnames","Helipad","Route","Left","Mural","Right","Upload","VerseMap","mapTracksById","tracks","result","forEach","track","id","console","log","verses","Stereo","isPlaying","song","currentTrackTime","totalTrackTime","scrubbingTrack","scrubbingPlayer","screenOn","typing","props","stream","tracksById","queue","defaultQueue","dragTrackId","nightMode","source","mediaRef","ref","type","videoRef","audioRef","state","setState","currentTime","duration","play","animateTime","clearInterval","timeAnimationInterval","setTimeout","turnScreenOn","length","shift","i","slice","setInterval","pause","stopTimeAnimation","scrubbing","time","cb","e","key","preventDefault","toggle","verse","trackId","nextTracksById","trackid","insert","syncTracks","nextStream","map","x","queueRect","left","queueDropzone","getBoundingClientRect","clientX","right","top","clientY","bottom","addToQueue","componentDidMount","window","addEventListener","handleSpacebar","onended","playNextInQueue","render","signedIn","startSession","account","artist","realStream","center","skipTo","toggleScreen","value","addVerse","stopTrackDragging","playQueueTrackByIndex","input","startTrackDragging","audioUrl"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;;AAGA,MAAMC,aAAa,GAAIC,MAAD,IAAY;AACjC,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAW;AACzBF,IAAAA,MAAM,CAACE,KAAK,CAACC,EAAP,CAAN,qBAAuBD,KAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,KAAK,CAACC,EAAP,CAAN,CAAiBG,MAA7B;AACAN,IAAAA,MAAM,CAACE,KAAK,CAACC,EAAP,CAAN,CAAiBG,MAAjB,GAA0BN,MAAM,CAACE,KAAK,CAACC,EAAP,CAAN,CAAiBG,MAAjB,GAA0B,IAAIT,QAAJ,CAAaG,MAAM,CAACE,KAAK,CAACC,EAAP,CAAN,CAAiBG,MAA9B,CAA1B,GAAkE,IAAIT,QAAJ,CAAa,EAAb,CAA5F;AACA,GALD;AAMA,SAAOG,MAAP;AACA,CATD;;AAWA,eAAe,MAAMO,MAAN,SAAqBnB,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAErC;AACPoB,MAAAA,SAAS,EAAE,KADJ;AAEPC,MAAAA,IAAI,EAAE,IAFC;AAGPC,MAAAA,gBAAgB,EAAE,CAHX;AAIPC,MAAAA,cAAc,EAAE,IAJT;AAKPC,MAAAA,cAAc,EAAE,KALT;AAMPC,MAAAA,eAAe,EAAE,KANV;AAOPC,MAAAA,QAAQ,EAAE,KAPH;AAQPC,MAAAA,MAAM,EAAE,KARD;AASPhB,MAAAA,MAAM,EAAE,KAAKiB,KAAL,CAAWC,MATZ;AAUPC,MAAAA,UAAU,EAAEpB,aAAa,CAAC,KAAKkB,KAAL,CAAWC,MAAZ,CAVlB;AAWPE,MAAAA,KAAK,EAAE,EAXA;AAWI;AACXC,MAAAA,YAAY,EAAE,EAZP;AAaPC,MAAAA,WAAW,EAAE,IAbN;AAcPC,MAAAA,SAAS,EAAE,IAdJ,CAeP;;AAfO,KAFqC;;AAAA,mDAoBrB,IApBqB;;AAAA,kCA2BtC,CAACb,IAAD,EAAOc,MAAM,GAAC,QAAd,EAAwBC,QAAQ,GAAC,IAAjC,KAA0C;AAChD,YAAMC,GAAG,GAAGD,QAAQ,KAAKf,IAAI,CAACiB,IAAL,KAAc,OAAd,GAAwB,KAAKC,QAA7B,GAAwC,KAAKC,QAAlD,CAApB;;AACA,UAAI,KAAKC,KAAL,CAAWpB,IAAX,IAAmBA,IAAI,CAACN,EAAL,KAAY,KAAK0B,KAAL,CAAWpB,IAAX,CAAgBN,EAAnD,EAAuD;AACtD,aAAK2B,QAAL,CAAc;AACbtB,UAAAA,SAAS,EAAE,IADE;AAEbE,UAAAA,gBAAgB,EAAEe,GAAG,CAACM,WAFT;AAGbpB,UAAAA,cAAc,EAAEc,GAAG,CAACO;AAHP,SAAd,EAIG,MAAM;AACRP,UAAAA,GAAG,CAACQ,IAAJ;AACA,eAAKC,WAAL;AACA,SAPD;AAQA,OATD,MASO;AACNC,QAAAA,aAAa,CAAC,KAAKC,qBAAN,CAAb;;AACA,YAAIb,MAAM,KAAK,QAAf,EAAyB,CACxB;AACA;;AACD,aAAKO,QAAL,CAAc;AACbtB,UAAAA,SAAS,EAAE,IADE;AAEbE,UAAAA,gBAAgB,EAAE,CAFL;AAGbC,UAAAA,cAAc,EAAEc,GAAG,CAACO,QAHP;AAIbvB,UAAAA;AAJa,SAAd,EAKG,MAAM;AACRgB,UAAAA,GAAG,CAACQ,IAAJ;AACA,eAAKC,WAAL;AACAG,UAAAA,UAAU,CAAC,MAAM,KAAKC,YAAL,EAAP,EAA4B,EAA5B,CAAV;AACA,SATD;AAUA;AAED,KAvD4C;;AAAA,6CAyD3B,MAAM;AACvB,YAAM;AAAEnB,QAAAA,KAAF;AAASD,QAAAA;AAAT,UAAwB,KAAKW,KAAnC;;AACA,UAAIV,KAAK,CAACoB,MAAN,GAAe,CAAnB,EAAsB;AACrB,aAAKN,IAAL,CAAUf,UAAU,CAACC,KAAK,CAACqB,KAAN,EAAD,CAApB,EAAqC,OAArC;AACA,aAAKV,QAAL,CAAc;AAAEX,UAAAA;AAAF,SAAd;AACA;AACD,KA/D4C;;AAAA,mDAiEpBsB,CAAD,IAAO,MAAM;AACpC,UAAI;AAAEtB,QAAAA,KAAF;AAASD,QAAAA;AAAT,UAAwB,KAAKW,KAAjC;AACA,WAAKI,IAAL,CAAUf,UAAU,CAACC,KAAK,CAACsB,CAAD,CAAN,CAApB,EAAgC,OAAhC;AACA,WAAKX,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEA,KAAK,CAACuB,KAAN,CAAYD,CAAC,GAAG,CAAhB;AAAT,OAAd;AACA,KArE4C;;AAAA,yCAuE/B,MAAM;AACnB,YAAM;AAAEhC,QAAAA;AAAF,UAAW,KAAKoB,KAAtB;AACA,YAAMJ,GAAG,GAAGhB,IAAI,CAACiB,IAAL,KAAc,OAAd,GAAwB,KAAKC,QAA7B,GAAwC,KAAKC,QAAzD;AACA,WAAKQ,qBAAL,GAA6BO,WAAW,CAAC,MAAM;AAC9C,aAAKb,QAAL,CAAc;AACbpB,UAAAA,gBAAgB,EAAEe,GAAG,CAACM,WADT;AAEbpB,UAAAA,cAAc,EAAEc,GAAG,CAACO;AAFP,SAAd;AAIA,OALuC,EAKrC,EALqC,CAAxC;AAMA,KAhF4C;;AAAA,+CAkFzB,MAAM;AACzBG,MAAAA,aAAa,CAAC,KAAKC,qBAAN,CAAb;AACA,KApF4C;;AAAA,mCAsFrC,MAAM;AACb,YAAM;AAAE3B,QAAAA;AAAF,UAAW,KAAKoB,KAAtB;AACA,YAAMJ,GAAG,GAAGhB,IAAI,CAACiB,IAAL,KAAc,OAAd,GAAwB,KAAKC,QAA7B,GAAwC,KAAKC,QAAzD;AACA,WAAKE,QAAL,CAAc;AAAEtB,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAoC,MAAMiB,GAAG,CAACmB,KAAJ,EAA1C;AACA,KA1F4C;;AAAA,oCA4FpC,MAAM;AACd,WAAKf,KAAL,CAAWrB,SAAX,GAAuB,KAAKoC,KAAL,EAAvB,GAAsC,KAAKX,IAAL,CAAU,KAAKJ,KAAL,CAAWpB,IAArB,CAAtC;AACA,KA9F4C;;AAAA,wCAgGhC,MAAM;AAClB,WAAKoC,iBAAL;AACA,WAAKf,QAAL,CAAc;AAAEgB,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,KAnG4C;;AAAA,qCAqGnC,MAAM;AACf,WAAKhB,QAAL,CAAc;AAAEgB,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,KAvG4C;;AAAA,oCAyGpC,CAACC,IAAD,EAAOC,EAAE,GAAG,MAAM,CAAE,CAApB,KAAyB;AACjC,YAAM;AAAEvC,QAAAA;AAAF,UAAW,KAAKoB,KAAtB;AACA,YAAMJ,GAAG,GAAGhB,IAAI,CAACiB,IAAL,KAAc,OAAd,GAAwB,KAAKC,QAA7B,GAAwC,KAAKC,QAAzD;AACAH,MAAAA,GAAG,CAACM,WAAJ,GAAkBgB,IAAlB;AACA,WAAKjB,QAAL,CAAc;AAAEpB,QAAAA,gBAAgB,EAAEqC;AAApB,OAAd,EAA0CC,EAA1C;AACA,KA9G4C;;AAAA,0CAgH9B,MAAM,KAAKlB,QAAL,CAAc;AAAEhB,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CAhHwB;;AAAA,2CAkH7B,MAAM,KAAKgB,QAAL,CAAc;AAAEhB,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CAlHuB;;AAAA,0CAoH9B,MAAM,KAAKgB,QAAL,CAAc;AAAEhB,MAAAA,QAAQ,EAAE,CAAC,KAAKe,KAAL,CAAWf;AAAxB,KAAd,CApHwB;;AAAA,4CAsH3BmC,CAAD,IAAO;AACvB,UAAIA,CAAC,CAACC,GAAF,KAAU,GAAV,IAAiB,CAAE,KAAKrB,KAAL,CAAWd,MAAlC,EAA0C;AACzCkC,QAAAA,CAAC,CAACE,cAAF;AACA,aAAKC,MAAL;AACA;AACD,KA3H4C;;AAAA,sCA6HlC,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC9B,YAAMC,cAAc,qBAAO,KAAK1B,KAAL,CAAWX,UAAlB,CAApB;;AACAqC,MAAAA,cAAc,CAACC,OAAD,CAAd,CAAwBlD,MAAxB,CAA+BmD,MAA/B,CAAsCJ,KAAtC;AACA,WAAKvB,QAAL,CAAc;AACbZ,QAAAA,UAAU,EAAEqC;AADC,OAAd,EAEG,MAAM,KAAKG,UAAL,EAFT;AAGA,KAnI4C;;AAAA,4CAqI5B,MAAM;AACtB,YAAMC,UAAU,GAAG,KAAK9B,KAAL,CAAW9B,MAAX,CAAkB6D,GAAlB,CAAsBC,CAAC,IACzC,KAAKhC,KAAL,CAAWX,UAAX,CAAsB2C,CAAC,CAAC1D,EAAxB,CADkB,CAAnB;AAGA,WAAK2B,QAAL,CAAc;AACb/B,QAAAA,MAAM,EAAE4D;AADK,OAAd;AAGA,KA5I4C;;AAAA,wCA8I/BxD,EAAD,IAAQ;AACpB,WAAK2B,QAAL,CAAc;AAACX,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKU,KAAL,CAAWV,KAAf,EAAsBhB,EAAtB;AAAR,OAAd;AACA,KAhJ4C;;AAAA,gDAkJvBA,EAAD,IAAQ;AAC5B,WAAK2B,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAElB;AAAf,OAAd;AACA,KApJ4C;;AAAA,+CAsJzB,CAACA,EAAD,EAAK8C,CAAL,KAAW;AAC9B,WAAKnB,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,YAAMyC,SAAS,GAAG,KAAKC,IAAL,CAAU5C,KAAV,CAAgB6C,aAAhB,CAA8BC,qBAA9B,EAAlB;;AACA,UAAIH,SAAS,CAACC,IAAV,IAAkBd,CAAC,CAACiB,OAApB,IACHjB,CAAC,CAACiB,OAAF,IAAYJ,SAAS,CAACK,KADnB,IAEHL,SAAS,CAACM,GAAV,IAAiBnB,CAAC,CAACoB,OAFhB,IAGHpB,CAAC,CAACoB,OAAF,IAAaP,SAAS,CAACQ,MAHxB,EAGgC;AAC9B,aAAKC,UAAL,CAAgBpE,EAAhB;AACD;AACD,KA/J4C;AAAA;;AAsB7CqE,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCzB,CAAD,IAAO,KAAK0B,cAAL,CAAoB1B,CAApB,CAA1C;AACA,SAAKrB,QAAL,CAAcgD,OAAd,GAAwB,KAAKC,eAA7B;AACA;;AAwIDC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAErE,MAAAA,IAAF;AAAQD,MAAAA,SAAR;AAAmBE,MAAAA,gBAAnB;AAAqCC,MAAAA,cAArC;AAAqDG,MAAAA,QAArD;AAA+Df,MAAAA,MAA/D;AAAuEsB,MAAAA,WAAvE;AAAoFC,MAAAA;AAApF,QAAkG,KAAKO,KAA7G;AACA,UAAM;AAAEkD,MAAAA,QAAF;AAAYC,MAAAA,YAAZ;AAA0B/D,MAAAA,MAA1B;AAAkCgE,MAAAA,OAAlC;AAA2CC,MAAAA;AAA3C,QAAsD,KAAKlE,KAAjE;AAEA,UAAMmE,UAAU,GAAGpF,MAAM,IAAIkB,MAA7B;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYgB,WAAZ;AAEA,wBACC,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,sBAAnB;AAA0C,MAAA,SAAS,EAAE,KAAKsD,cAA1D;AAA0E,MAAA,KAAK,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAjF;AAAA,6BAkBC;AAAK,QAAA,SAAS,EAAErF,UAAU,CAAC,cAAD,EAAiB;AAAE8F,UAAAA,MAAM,EAAE,CAACL;AAAX,SAAjB,CAA1B;AAAA,mBACGjE,QAAQ,iBAAI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADf,eAEI,QAAC,IAAD;AAAM,UAAA,GAAG,EAAC,MAAV;AACC,UAAA,MAAM,EAAE,KAAKsC,MADd;AAEC,UAAA,IAAI,EAAE,KAAKnB,IAFZ;AAGC,UAAA,KAAK,EAAE,KAAKW,KAHb;AAIC,UAAA,UAAU,EAAEnC,IAAI,IAAI,KAAKoB,KAAL,CAAWX,UAAX,CAAsBT,IAAI,CAACN,EAA3B,CAJrB;AAKC,UAAA,SAAS,EAAEK,SALZ;AAMC,UAAA,QAAQ,EAAEuE,QANX;AAOC,UAAA,YAAY,EAAEC,YAPf;AAQC,UAAA,gBAAgB,EAAEtE,gBARnB;AASC,UAAA,cAAc,EAAEC,cATjB;AAUC,UAAA,MAAM,EAAE,KAAK0E,MAVd;AAWC,UAAA,YAAY,EAAE,KAAKC,YAXpB;AAYC,UAAA,QAAQ,EAAExE,QAZX;AAaC,UAAA,OAAO,EAAEmE,OAbV;AAcC,UAAA,MAAM,EAAEC,MAdT;AAeC,UAAA,SAAS,EAAGK,KAAD,IAAW,KAAKzD,QAAL,CAAc;AAAEf,YAAAA,MAAM,EAAEwE;AAAV,WAAd,CAfvB;AAgBC,UAAA,QAAQ,EAAE,KAAKC,QAhBhB;AAiBC,UAAA,WAAW,EAAEnE,WAjBd;AAkBC,UAAA,UAAU,EAAE,KAAKkD,UAlBlB;AAmBC,UAAA,WAAW,EAAE,KAAK1C,KAAL,CAAWV,KAAX,CAAiByC,GAAjB,CAAsBzD,EAAD,IAAQ,KAAK0B,KAAL,CAAWX,UAAX,CAAsBf,EAAtB,CAA7B,CAnBd;AAoBC,UAAA,iBAAiB,EAAE,KAAKsF,iBApBzB;AAqBC,UAAA,qBAAqB,EAAE,KAAKC,qBArB7B;AAsBC,UAAA,SAAS,EAAEpE,SAtBZ;AAuBC,UAAA,GAAG,EAAGqE,KAAD,IAAW;AAAC,iBAAK5B,IAAL,GAAY4B,KAAZ;AAAkB;AAvBpC;AAAA;AAAA;AAAA;AAAA,gBAFJ,EA6BKZ,QAAQ,iBACR,QAAC,KAAD;AAAO,UAAA,MAAM,EAAE,KAAK3B,MAApB;AACC,UAAA,IAAI,EAAE,KAAKnB,IADZ;AAEC,UAAA,KAAK,EAAE,KAAKW,KAFb;AAGC,UAAA,SAAS,EAAEnC,IAAI,IAAIA,IAAI,CAACN,EAHzB;AAIC,UAAA,SAAS,EAAEK,SAJZ;AAKC,UAAA,QAAQ,EAAEuE,QALX;AAMC,UAAA,gBAAgB,EAAErE,gBANnB;AAOC,UAAA,cAAc,EAAEC,cAPjB;AAQC,UAAA,MAAM,EAAE,KAAK0E,MARd;AASC,UAAA,MAAM,EAAEF,UATT;AAUC,UAAA,OAAO,EAAEF,OAVV;AAWC,UAAA,MAAM,EAAEC,MAXT;AAYC,UAAA,kBAAkB,EAAE,KAAKU,kBAZ1B;AAaC,UAAA,iBAAiB,EAAE,KAAKH;AAbzB;AAAA;AAAA;AAAA;AAAA,gBA9BL,eA6CC;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,GAAG,EAAEhF,IAAI,IAAIA,IAAI,CAACoF,QAApC;AAA8C,UAAA,GAAG,EAAGF,KAAD,IAAW;AAAC,iBAAK/D,QAAL,GAAgB+D,KAAhB;AAAsB;AAArF;AAAA;AAAA;AAAA;AAAA,gBA7CD,eA8CC;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,GAAG,EAAElF,IAAI,IAAIA,IAAI,CAACoF,QAApC;AAA8C,UAAA,GAAG,EAAGF,KAAD,IAAW;AAAC,iBAAKhE,QAAL,GAAgBgE,KAAhB;AAAsB;AAArF;AAAA;AAAA;AAAA;AAAA,gBA9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBD;AAAA;AAAA;AAAA;AAAA,YADD;AAqEA;;AA7O4C","sourcesContent":["import { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport classnames from 'classnames'\nimport Helipad from '../lib/helipad/helipad.js'\nimport { Route } from '../lib/atlas/atlas.js' \n\nimport Left from './left.js'\nimport Mural from './mural.js'\nimport Right from './right.js'\nimport Upload from './upload.js'\n\nimport { VerseMap } from '../state/lyrics.js'\n\n\nconst mapTracksById = (tracks) => {\n\tlet result = {}\n\ttracks.forEach((track) => {\n\t\tresult[track.id] = {...track}\n\t\tconsole.log(\"Map tracks by id .verses\")\n\t\tconsole.log(result[track.id].verses)\n\t\tresult[track.id].verses = result[track.id].verses ? new VerseMap(result[track.id].verses) : new VerseMap([]) \n\t})\n\treturn result\n}\n\nexport default class Stereo extends Component {\n\n\tstate = {\n\t\tisPlaying: false,\n\t\tsong: null,\n\t\tcurrentTrackTime: 0,\n\t\ttotalTrackTime: null,\n\t\tscrubbingTrack: false,\n\t\tscrubbingPlayer: false,\n\t\tscreenOn: false,\n\t\ttyping: false,\n\t\ttracks: this.props.stream,\n\t\ttracksById: mapTracksById(this.props.stream),\n\t\tqueue: [], // list of track ids\\\n\t\tdefaultQueue: [],\n\t\tdragTrackId: null,\n\t\tnightMode: true\n\t\t// TODO: move to a global store.\n\t}\n\n\ttimeAnimationInterval = null\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', (e) => this.handleSpacebar(e));\n\t\tthis.audioRef.onended = this.playNextInQueue\n\t}\n\n\tplay = (song, source=\"STREAM\", mediaRef=null) => {\n\t\tconst ref = mediaRef || (song.type === 'VIDEO' ? this.videoRef : this.audioRef)\n\t\tif (this.state.song && song.id === this.state.song.id) {\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tcurrentTrackTime: ref.currentTime, \n\t\t\t\ttotalTrackTime: ref.duration \n\t\t\t}, () => {\n\t\t\t\tref.play()\n\t\t\t\tthis.animateTime()\n\t\t\t})\n\t\t} else {\n\t\t\tclearInterval(this.timeAnimationInterval)\n\t\t\tif (source === 'STREAM') {\n\t\t\t\t// set default queue.\n\t\t\t}\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tcurrentTrackTime: 0, \n\t\t\t\ttotalTrackTime: ref.duration,\n\t\t\t\tsong\n\t\t\t}, () => {\n\t\t\t\tref.play()\n\t\t\t\tthis.animateTime()\n\t\t\t\tsetTimeout(() => this.turnScreenOn(), 70)\n\t\t\t})\n\t\t}\n\n\t}\n\n\tplayNextInQueue = () => {\n\t\tconst { queue, tracksById } = this.state\n\t\tif (queue.length > 0) {\n\t\t\tthis.play(tracksById[queue.shift()], 'QUEUE')\n\t\t\tthis.setState({ queue })\n\t\t}\n\t}\n\n\tplayQueueTrackByIndex = (i) => () => {\n\t\tlet { queue, tracksById } = this.state\n\t\tthis.play(tracksById[queue[i]], 'QUEUE')\n\t\tthis.setState({ queue: queue.slice(i + 1) })\n\t}\n\n\tanimateTime = () => {\n\t\tconst { song } = this.state\n\t\tconst ref = song.type === 'VIDEO' ? this.videoRef : this.audioRef\n\t\tthis.timeAnimationInterval = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentTrackTime: ref.currentTime,\n\t\t\t\ttotalTrackTime: ref.duration\n\t\t\t})\n\t\t}, 40)\n\t}\n\n\tstopTimeAnimation = () => {\n\t\tclearInterval(this.timeAnimationInterval)\n\t}\n\n\tpause = () => {\n\t\tconst { song } = this.state\n\t\tconst ref = song.type === 'VIDEO' ? this.videoRef : this.audioRef\n\t\tthis.setState({ isPlaying: false }, () => ref.pause())\n\t}\n\n\ttoggle = () => {\n\t\tthis.state.isPlaying ? this.pause() : this.play(this.state.song) \n\t}\n\n\tbeginScrub = () => {\n\t\tthis.stopTimeAnimation()\n\t\tthis.setState({ scrubbing: true })\n\t}\n\n\tendScub = () => {\n\t\tthis.setState({ scrubbing: false })\n\t}\n\n\tskipTo = (time, cb = () => {}) => {\n\t\tconst { song } = this.state\n\t\tconst ref = song.type === 'VIDEO' ? this.videoRef : this.audioRef\n\t\tref.currentTime = time\n\t\tthis.setState({ currentTrackTime: time }, cb)\n\t}\n\n\tturnScreenOn = () => this.setState({ screenOn: true })\n\n\tturnScreenOff = () => this.setState({ screenOn: false })\n\n\ttoggleScreen = () => this.setState({ screenOn: !this.state.screenOn })\n\n\thandleSpacebar = (e) => {\n\t\tif (e.key === ' ' && ! this.state.typing) {\n\t\t\te.preventDefault()\n\t\t\tthis.toggle()\n\t\t}\n\t}\n\n\taddVerse = (verse, trackId) => {\n\t\tconst nextTracksById = {...this.state.tracksById}\n\t\tnextTracksById[trackid].verses.insert(verse)\n\t\tthis.setState({\n\t\t\ttracksById: nextTracksById\n\t\t}, () => this.syncTracks())\n\t}\n\n\tsyncSteamState = () => {\n\t\tconst nextStream = this.state.tracks.map(x => (\n\t\t\tthis.state.tracksById[x.id]\n\t\t))\n\t\tthis.setState({\n\t\t\ttracks: nextStream\n\t\t})\n\t}\n\n\taddToQueue = (id) => {\n\t\tthis.setState({queue: [...this.state.queue, id]})\n\t}\n\n\tstartTrackDragging = (id) => {\n\t\tthis.setState({ dragTrackId: id })\n\t}\n\n\tstopTrackDragging = (id, e) => {\n\t\tthis.setState({ dragTrackId: null })\n\t\tconst queueRect = this.left.queue.queueDropzone.getBoundingClientRect()\n\t\tif (queueRect.left <= e.clientX && \n\t\t\te.clientX<= queueRect.right && \n\t\t\tqueueRect.top <= e.clientY && \n\t\t\te.clientY <= queueRect.bottom) {\n\t\t\t\tthis.addToQueue(id)\t\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { song, isPlaying, currentTrackTime, totalTrackTime, screenOn, tracks, dragTrackId, nightMode } = this.state\n\t\tconst { signedIn, startSession, stream, account, artist } = this.props\n\n\t\tconst realStream = tracks || stream\n\t\tconsole.log(dragTrackId)\n\n\t\treturn (\n\t\t\t<Helipad className=\"page-outer-container\" onKeyDown={this.handleSpacebar} modal={<Upload />}>\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<video autoPlay muted loop className=\"background-video\">\n\t\t\t\t\t\t<source type=\"video/mp4\" src=\"test_data/video/corn.mov\" />\n\t\t\t\t\t</video>\n\t\t\t\t*/}\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<div className=\"background-video-shade\" />\n\t\t\t\t*/}\n{/*\t\t\t\t<Route path=\"/[artist]\">\n\t\t\t\t\t<Mural src=\"test_data/artistsbigbirb.jpg\" />\n\t\t\t\t</Route>*/}\n\t\t\t\t{/*<div className=\"mural-container\">\n\t\t\t\t\t{ screenOn && <div className=\"mural-fake\" /> }\t\n\t\t\t\t\t<Mural />\n\t\t\t\t</div>*/}\n\t\t\t\t<div className={classnames('page-content', { center: !signedIn })}>\t\n\t\t\t\t\t{ screenOn && <div className=\"left fake\" /> }\t\t\n\t\t    \t\t<Left ref=\"left\" \n\t\t    \t\t\ttoggle={this.toggle} \n\t\t    \t\t\tplay={this.play} \n\t\t    \t\t\tpause={this.pause} \n\t\t    \t\t\tnowPlaying={song && this.state.tracksById[song.id]}\n\t\t    \t\t\tisPlaying={isPlaying}\n\t\t    \t\t\tsignedIn={signedIn}\n\t\t    \t\t\tstartSession={startSession}\n\t\t    \t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\t\ttotalTrackTime={totalTrackTime}\n\t\t    \t\t\tskipTo={this.skipTo}\n\t\t    \t\t\ttoggleScreen={this.toggleScreen}\n\t\t    \t\t\tscreenOn={screenOn}\n\t\t    \t\t\taccount={account} \n\t\t    \t\t\tartist={artist}\n\t\t    \t\t\tsetTyping={(value) => this.setState({ typing: value })}\n\t\t    \t\t\taddVerse={this.addVerse}\n\t\t    \t\t\tdragTrackId={dragTrackId}\n\t\t    \t\t\taddToQueue={this.addToQueue}\n\t\t    \t\t\tqueueTracks={this.state.queue.map((id) => this.state.tracksById[id])}\n\t\t    \t\t\tstopTrackDragging={this.stopTrackDragging}\n\t\t    \t\t\tplayQueueTrackByIndex={this.playQueueTrackByIndex}\n\t\t    \t\t\tnightMode={nightMode}\n\t\t    \t\t\tref={(input) => {this.left = input}}\n\n\t\t    \t\t/>\n\t\t    \t\t{ \n\t\t    \t\t\tsignedIn && \n\t\t    \t\t\t<Right toggle={this.toggle} \n\t\t    \t\t\t\tplay={this.play} \n\t\t    \t\t\t\tpause={this.pause} \n\t\t    \t\t\t\tplayingId={song && song.id} \n\t\t    \t\t\t\tisPlaying={isPlaying}\n\t\t    \t\t\t\tsignedIn={signedIn}\n\t\t    \t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\t\t\ttotalTrackTime={totalTrackTime}\n\t\t    \t\t\t\tskipTo={this.skipTo}\n\t\t    \t\t\t\tstream={realStream}\n\t\t    \t\t\t\taccount={account}\n\t\t    \t\t\t\tartist={artist}\n\t\t    \t\t\t\tstartTrackDragging={this.startTrackDragging}\n\t\t    \t\t\t\tstopTrackDragging={this.stopTrackDragging} />\n\t\t    \t\t}\n\t\t\t\t\t<audio id=\"audio\" src={song && song.audioUrl} ref={(input) => {this.audioRef = input}} />\n\t\t\t\t\t<video id=\"video\" src={song && song.audioUrl} ref={(input) => {this.videoRef = input}} />\n\t\t\t\t</div>\n\t\t\t</Helipad>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}