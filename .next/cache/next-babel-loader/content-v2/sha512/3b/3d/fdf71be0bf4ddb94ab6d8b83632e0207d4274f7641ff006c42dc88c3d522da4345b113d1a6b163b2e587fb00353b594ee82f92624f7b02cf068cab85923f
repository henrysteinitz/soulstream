{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/pages/[artist]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { GetStaticProps } from \"next\";\nimport { useRouter } from 'next/router';\nimport { PrismaClient } from '@prisma/client';\nimport Atlas from '../../lib/atlas/atlas.js';\nimport Main from '../main.js';\n\nfunction Home(props) {\n  const router = useRouter();\n  Atlas.setPath(router.pathname);\n  Atlas.setState({\n    artist: router.asPath.slice(1)\n  });\n  let prisma = new PrismaClient();\n  const artist = prisma.artist.findUnique({\n    where: {\n      url: router.asPath.slice(1)\n    }\n  }).then(x => console.log(x));\n  return /*#__PURE__*/_jsxDEV(Main, _objectSpread(_objectSpread({}, props), {}, {\n    pathname: router.pathname\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: ['/[artist]'],\n    fallback: true\n  };\n}\nexport async function getStaticProps(context) {\n  let prisma = new PrismaClient();\n  const {\n    artist: artistUrl\n  } = context.params;\n  const artist = prisma.artist.findUnique({\n    where: {\n      url: artistUrl\n    }\n  }).then(x => {\n    console.log(x);\n  }).catch(x => {\n    console.log(x);\n  });\n  return {\n    props: {\n      artist\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/pages/[artist]/index.js"],"names":["React","GetStaticProps","useRouter","PrismaClient","Atlas","Main","Home","props","router","setPath","pathname","setState","artist","asPath","slice","prisma","findUnique","where","url","then","x","console","log","getStaticPaths","paths","fallback","getStaticProps","context","artistUrl","params","catch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AACnB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACAE,EAAAA,KAAK,CAACK,OAAN,CAAcD,MAAM,CAACE,QAArB;AACAN,EAAAA,KAAK,CAACO,QAAN,CAAe;AAAEC,IAAAA,MAAM,EAAEJ,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoB,CAApB;AAAV,GAAf;AACA,MAAIC,MAAM,GAAG,IAAIZ,YAAJ,EAAb;AACA,QAAMS,MAAM,GAAIG,MAAM,CAACH,MAAP,CAAcI,UAAd,CAAyB;AACxCC,IAAAA,KAAK,EAAE;AACNC,MAAAA,GAAG,EAAEV,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoB,CAApB;AADC;AADiC,GAAzB,EAIbK,IAJa,CAIRC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAJG,CAAhB;AAMA,sBAAO,QAAC,IAAD,kCAAUb,KAAV;AAAiB,IAAA,QAAQ,EAAEC,MAAM,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AAED,OAAO,eAAea,cAAf,GAAgC;AACtC,SAAO;AACNC,IAAAA,KAAK,EAAE,CAAC,WAAD,CADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAC5C,MAAIZ,MAAM,GAAG,IAAIZ,YAAJ,EAAb;AACA,QAAM;AAAES,IAAAA,MAAM,EAAEgB;AAAV,MAAwBD,OAAO,CAACE,MAAtC;AAEA,QAAMjB,MAAM,GAAGG,MAAM,CAACH,MAAP,CAAcI,UAAd,CAAyB;AACvCC,IAAAA,KAAK,EAAE;AACNC,MAAAA,GAAG,EAAEU;AADC;AADgC,GAAzB,EAIZT,IAJY,CAINC,CAAD,IAAO;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,GANc,EAMZU,KANY,CAMLV,CAAD,IAAO;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,GARc,CAAf;AAUA,SAAO;AAAEb,IAAAA,KAAK,EAAE;AAAEK,MAAAA;AAAF;AAAT,GAAP;AACA;AAED,eAAeN,IAAf","sourcesContent":["import React from \"react\"\nimport { GetStaticProps } from \"next\"\nimport { useRouter } from 'next/router'\nimport { PrismaClient } from '@prisma/client';\nimport Atlas from '../../lib/atlas/atlas.js'\nimport Main from '../main.js'\n\n\nfunction Home(props){\n\tconst router = useRouter()\n\tAtlas.setPath(router.pathname)\n\tAtlas.setState({ artist: router.asPath.slice(1) })\n\tlet prisma = new PrismaClient();\n\tconst artist =  prisma.artist.findUnique({\n\t\twhere: {\n\t\t\turl: router.asPath.slice(1)\n\t\t}\n\t}).then(x => console.log(x))\n\n\treturn <Main {...props} pathname={router.pathname}/>\n}\n\nexport async function getStaticPaths() {\n\treturn {\n\t\tpaths: ['/[artist]'],\n\t\tfallback: true\n\t}\n}\n\nexport async function getStaticProps(context){\n\tlet prisma = new PrismaClient();\n\tconst { artist: artistUrl } = context.params\n\n\tconst artist = prisma.artist.findUnique({\n\t\twhere: {\n\t\t\turl: artistUrl\n\t\t}\n\t}).then((x) => {\n\t\tconsole.log(x)\n\t}).catch((x) => {\n\t\tconsole.log(x)\n\t})\n\n\treturn { props: { artist } }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}