{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js\",\n    _this2 = this;\n\nimport React, { useContext } from 'react';\nimport classnames from 'classnames'; // TODO: MAKE NOT HORRENDOUS\n\nvar padWithSlash = function padWithSlash(path) {\n  var newPath = path;\n\n  if (newPath[0] !== '/') {\n    newPath = '/' + newPath;\n  }\n\n  if (newPath.length > 1 && newPath[newPath.length - 1] === '/') {\n    newPath = newPath.slice(0, newPath.length - 1);\n  }\n\n  return newPath;\n};\n\nvar isWildcard = function isWildcard(x) {\n  return x[0] === '[' && x[x.length - 1] === ']';\n};\n\nvar matchPaths = function matchPaths(p1, p2) {\n  var dirs1 = padWithSlash(p1).split('/');\n  var dirs2 = padWithSlash(p2).split('/');\n\n  if (dirs1.length !== dirs2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < dirs1.length; i++) {\n    if (dirs1[i] === dirs2[i]) {\n      continue;\n    } else if (isWildcard(p1) || isWildcard(p2)) {\n      continue;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar AtlasClass = function AtlasClass(_path) {\n  var _this = this;\n\n  _classCallCheck(this, AtlasClass);\n\n  _defineProperty(this, \"padWithSlash\", function (path) {\n    if (path[0] !== '/') {\n      path = '/' + path;\n    }\n\n    return path;\n  });\n\n  _defineProperty(this, \"setPath\", function (path) {\n    _this.path = padWithSlash(path);\n\n    _this.history.push(padWithSlash(path)); // typeof window != \"undefined\" && window.location.replace(this.padWithSlash(path))\n\n\n    _this.now += 1;\n\n    _this.reRender();\n  });\n\n  _defineProperty(this, \"setState\", function (state) {\n    Object.keys(state).forEach(function (x) {\n      _this.state[x] = state[x];\n    });\n  });\n\n  _defineProperty(this, \"back\", function () {\n    return _this.now -= 1;\n  });\n\n  _defineProperty(this, \"forward\", function () {\n    return _this.now += 1;\n  });\n\n  _defineProperty(this, \"equals\", function (ac2) {\n    return true;\n  });\n\n  _defineProperty(this, \"reRender\", function () {});\n\n  this.history = [padWithSlash(_path || '/')];\n  this.now = 0;\n  this.state = {};\n  this.path = this.history[0];\n};\n\nvar Atlas = new AtlasClass();\nexport var AtlasContext = /*#__PURE__*/React.createContext(Atlas);\n_c = AtlasContext;\nexport var AtlasProvider = AtlasContext.Provider;\nexport var AtlasConsumer = AtlasContext.Consumer;\nexport var Route = function Route(_ref) {\n  var path = _ref.path,\n      _children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n    children: function children(atlas) {\n      console.log(\"atlas: \" + atlas.path);\n      console.log(\"path: \" + path);\n      matchPaths(atlas.path, path) && _children;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 2\n  }, _this2);\n};\n_c2 = Route;\n\nvar handleClick = function handleClick(atlas, path) {\n  atlas.setPath(path);\n};\n\nexport var Link = function Link(_ref2) {\n  var to = _ref2.to,\n      className = _ref2.className,\n      _children2 = _ref2.children,\n      activeClassName = _ref2.activeClassName;\n  return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n    children: function children(atlas) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: function onClick() {\n          return handleClick(atlas, to);\n        },\n        className: classnames('atlas-link', className, {\n          activeClassName: atlas.path === to\n        }),\n        children: _children2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 4\n      }, _this2);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, _this2);\n};\n_c3 = Link;\nexport default Atlas;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AtlasContext\");\n$RefreshReg$(_c2, \"Route\");\n$RefreshReg$(_c3, \"Link\");","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js"],"names":["React","useContext","classnames","padWithSlash","path","newPath","length","slice","isWildcard","x","matchPaths","p1","p2","dirs1","split","dirs2","i","AtlasClass","history","push","now","reRender","state","Object","keys","forEach","ac2","Atlas","AtlasContext","createContext","AtlasProvider","Provider","AtlasConsumer","Consumer","Route","children","atlas","console","log","handleClick","setPath","Link","to","className","activeClassName"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport classnames from 'classnames'\n\n// TODO: MAKE NOT HORRENDOUS\n\nconst padWithSlash = (path) => {\n\tlet newPath = path\n\tif (newPath[0] !== '/') {\n\t\tnewPath = '/' + newPath\n\t}\n\tif (newPath.length > 1 && newPath[newPath.length - 1] === '/') {\n\t\tnewPath = newPath.slice(0, newPath.length - 1)\n\t}\n\treturn newPath\n}\n\nconst isWildcard = (x) => {\n\treturn x[0] === '[' && x[x.length - 1] === ']'\n}\n\nconst matchPaths = (p1, p2) => {\n\tconst dirs1 = padWithSlash(p1).split('/')\n\tconst dirs2 = padWithSlash(p2).split('/')\n\tif (dirs1.length !== dirs2.length) {\n\t\treturn false\n\t}\n\tfor (let i =0; i < dirs1.length; i++) {\n\t\tif (dirs1[i] === dirs2[i]) {\n\t\t\tcontinue\n\t\t} else if (isWildcard(p1) || isWildcard(p2)) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nclass AtlasClass {\n\tconstructor(path) {\n\t\tthis.history = [padWithSlash(path || '/')]\n\t\tthis.now = 0\n\t\tthis.state = {}\n\t\tthis.path = this.history[0]\n\t}\n\n\tpadWithSlash = (path) => {\n\t\tif (path[0] !== '/') {\n\t\t\tpath = '/' + path\n\t\t}\n\t\treturn path\n\t}\n\n\tsetPath = (path) => {\n\t\tthis.path = padWithSlash(path)\n\t\tthis.history.push(padWithSlash(path))\n\t\t// typeof window != \"undefined\" && window.location.replace(this.padWithSlash(path))\n\t\tthis.now += 1\n\t\tthis.reRender()\n\t}\t\n\n\tsetState = (state) => {\n\t\tObject.keys(state).forEach(x => {\n\t\t\tthis.state[x] = state[x]\n\t\t})\n\t}\n\tback = () => this.now -= 1\n\tforward = () => this.now += 1\n\n\tequals = (ac2) => {\n\t\treturn true\n\t}\n\n\treRender = () => {}\n}\n\n\n\nconst Atlas = new AtlasClass()\n\nexport const AtlasContext = React.createContext(Atlas)\nexport const AtlasProvider = AtlasContext.Provider\nexport const AtlasConsumer = AtlasContext.Consumer\n\nexport const Route = ({ path, children }) => (\n\t<AtlasConsumer>\n\t\t{\n\t\t\t(atlas) => {\n\t\t\t\tconsole.log(\"atlas: \" + atlas.path)\n\t\t\t\tconsole.log(\"path: \" + path)\n\t\t\t\tmatchPaths(atlas.path, path) && children\n\t\t\t}\n\t\t}\n\t</AtlasConsumer>\n)\n\nconst handleClick = (atlas, path) => {\n\tatlas.setPath(path)\n}\n\nexport const Link = ({ to, className, children, activeClassName }) => {\n\treturn (\n\t\t<AtlasConsumer>\n\t\t{ \n\t\t\t(atlas) => (\n\t\t\t<a onClick={() => handleClick(atlas, to)} className={classnames('atlas-link', className,  { activeClassName: atlas.path === to })}>\n\t\t\t\t{ children }\n\t\t\t</a>)\n\t\t}\n\t\t</AtlasConsumer>\n\t)\n}\n\n\n\nexport default Atlas\n\n"]},"metadata":{},"sourceType":"module"}