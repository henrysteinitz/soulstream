{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/crowd.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nexport const testComments = [{\n  message: 'Yoooooooo',\n  author: 'Ab',\n  id: 1,\n  remainingTime: 3\n}, {\n  message: 'yeah ab I want to fuck you good. Abadelic style.',\n  author: 'Henry',\n  id: 2,\n  remainingTime: 4\n}];\nexport default class Crowd extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // map comments ids to hidden = {true, false}\n      // TODO: nest...?\n      comment: ''\n    });\n\n    _defineProperty(this, \"computeRemainingTime\", comment => {\n      // TODO: figure it out, kiiid\n      return comment.remainingTime;\n    });\n\n    _defineProperty(this, \"handleComment\", e => {\n      this.setState({\n        comment: e.target.value\n      });\n    });\n  }\n\n  componentDidMount({\n    props\n  }) {\n    props.comments.forEach(comment => {\n      setTimeout(() => this.setState({\n        [comment.id]: true\n      }), this.computeRemainingTime(comment));\n    });\n  }\n\n  render() {\n    const {\n      comments\n    } = this.props;\n    const {\n      hiddenById,\n      comment\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crowd\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crowd-speak\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\",\n          value: comment,\n          onChange: this.handleComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crowd-chat\",\n        children: comments.filter(x => !hiddenById[x.id]).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: comment.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/crowd.js"],"names":["Component","testComments","message","author","id","remainingTime","Crowd","comment","e","setState","target","value","componentDidMount","props","comments","forEach","setTimeout","computeRemainingTime","render","hiddenById","state","handleComment","filter","x","map"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAGA,OAAO,MAAMC,YAAY,GAAG,CAC3B;AACCC,EAAAA,OAAO,EAAE,WADV;AAECC,EAAAA,MAAM,EAAE,IAFT;AAGCC,EAAAA,EAAE,EAAE,CAHL;AAICC,EAAAA,aAAa,EAAE;AAJhB,CAD2B,EAO3B;AACCH,EAAAA,OAAO,EAAE,kDADV;AAECC,EAAAA,MAAM,EAAE,OAFT;AAGCC,EAAAA,EAAE,EAAE,CAHL;AAICC,EAAAA,aAAa,EAAE;AAJhB,CAP2B,CAArB;AAeP,eAAe,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;;AAAA,mCAEpC;AACP;AACA;AACAO,MAAAA,OAAO,EAAE;AAHF,KAFoC;;AAAA,kDAcpBA,OAAD,IAAa;AACnC;AACA,aAAOA,OAAO,CAACF,aAAf;AACA,KAjB2C;;AAAA,2CAmB3BG,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAEC,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd;AACA,KArB2C;AAAA;;AAQ5CC,EAAAA,iBAAiB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAY;AAC5BA,IAAAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBR,OAAO,IAAI;AACjCS,MAAAA,UAAU,CAAC,MAAM,KAAKP,QAAL,CAAc;AAAC,SAACF,OAAO,CAACH,EAAT,GAAc;AAAf,OAAd,CAAP,EAA4C,KAAKa,oBAAL,CAA0BV,OAA1B,CAA5C,CAAV;AACA,KAFD;AAGA;;AAWDW,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEJ,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,UAAM;AAAEM,MAAAA,UAAF;AAAcZ,MAAAA;AAAd,QAA0B,KAAKa,KAArC;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACC;AAAO,UAAA,WAAW,EAAC,EAAnB;AAAsB,UAAA,KAAK,EAAEb,OAA7B;AAAsC,UAAA,QAAQ,EAAE,KAAKc;AAArD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACEP,QAAQ,CAACQ,MAAT,CAAgBC,CAAC,IAAI,CAACJ,UAAU,CAACI,CAAC,CAACnB,EAAH,CAAhC,EAAwCoB,GAAxC,CAA4CjB,OAAO,iBACnD;AAAA,kCACC;AAAA,sBACEA,OAAO,CAACL;AADV;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAA,sBACEK,OAAO,CAACJ;AADV;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAmBA;;AA7C2C","sourcesContent":["import { Component } from 'react'\n\n\nexport const testComments = [\n\t{\n\t\tmessage: 'Yoooooooo',\n\t\tauthor: 'Ab',\n\t\tid: 1,\n\t\tremainingTime: 3\n\t},\n\t{\n\t\tmessage: 'yeah ab I want to fuck you good. Abadelic style.',\n\t\tauthor: 'Henry',\n\t\tid: 2,\n\t\tremainingTime: 4 \n\t}\n]\n\nexport default class Crowd extends Component {\n\t\n\tstate = {\n\t\t// map comments ids to hidden = {true, false}\n\t\t// TODO: nest...?\n\t\tcomment: ''\n\t}\n\n\tcomponentDidMount({ props }) {\n\t\tprops.comments.forEach(comment => {\n\t\t\tsetTimeout(() => this.setState({[comment.id]: true}), this.computeRemainingTime(comment))\n\t\t})\n\t}\n\n\tcomputeRemainingTime = (comment) => {\n\t\t// TODO: figure it out, kiiid\n\t\treturn comment.remainingTime\n\t}\n\n\thandleComment = (e) => {\n\t\tthis.setState({ comment: e.target.value })\n\t}\n\n\trender() {\n\t\tconst { comments } = this.props\n\t\tconst { hiddenById, comment } = this.state\n\t\treturn (\n\t\t\t<div className=\"crowd\">\n\t\t\t\t<div className=\"crowd-speak\">\n\t\t\t\t\t<input placeholder=\"\" value={comment} onChange={this.handleComment} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"crowd-chat\">\n\t\t\t\t\t{comments.filter(x => !hiddenById[x.id]).map(comment => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{comment.message}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{comment.author}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}