{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/artistpage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AtlasConsumer } from '../lib/atlas/atlas.js';\nimport Track from './track';\n\nvar ArtistPageWithAtlas = /*#__PURE__*/function (_Component) {\n  _inherits(ArtistPageWithAtlas, _Component);\n\n  var _super = _createSuper(ArtistPageWithAtlas);\n\n  function ArtistPageWithAtlas() {\n    var _this;\n\n    _classCallCheck(this, ArtistPageWithAtlas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      artist: null,\n      newArtistName: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleName\", function (e) {\n      return _this.setState({\n        newArtistName: e.target.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ArtistPageWithAtlas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.atlas.getLastUrlSegment() !== 'new') {\n        fetch('/api/artist/get_artist', {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            artistUrl: this.props.atlas.getLastUrlSegment()\n          })\n        }).then(function (res) {\n          res.json().then(function (body) {\n            console.log(body);\n\n            _this2.setState({\n              artistUrl: body\n            });\n          });\n        })[\"catch\"](function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          playingId = _this$props.playingId,\n          isPlaying = _this$props.isPlaying,\n          play = _this$props.play,\n          pause = _this$props.pause,\n          currentTrackTime = _this$props.currentTrackTime,\n          totalTrackTime = _this$props.totalTrackTime,\n          skipTo = _this$props.skipTo,\n          stream = _this$props.stream,\n          account = _this$props.account,\n          atlas = _this$props.atlas;\n      var _this$state = this.state,\n          newArtist = _this$state.newArtist,\n          newArtistName = _this$state.newArtistName;\n      var artist = this.state.artist || this.props.artist;\n      var artistUrl = this.props.atlas.getLastUrlSegment();\n      var isNewArtist = artistUrl === 'new';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"big-artist-name right-title\",\n          children: [isNewArtist || artist && artist.name, isNewArtist && /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"artist-name-input right-title\",\n            value: newArtistName,\n            onChange: this.handleName,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-stream\",\n          children: artist && artist.tracks.map(function (track) {\n            return /*#__PURE__*/_jsxDEV(Track, {\n              song: track.track,\n              playingId: playingId,\n              isPlaying: isPlaying,\n              play: play,\n              pause: pause,\n              currentTime: currentTrackTime,\n              totalTime: totalTrackTime,\n              skipTo: skipTo,\n              account: account,\n              artist: artist\n            }, track.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, _this3);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return ArtistPageWithAtlas;\n}(Component);\n\nvar ArtistPage = /*#__PURE__*/function (_Component2) {\n  _inherits(ArtistPage, _Component2);\n\n  var _super2 = _createSuper(ArtistPage);\n\n  function ArtistPage() {\n    _classCallCheck(this, ArtistPage);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ArtistPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n        children: function children(atlas) {\n          return /*#__PURE__*/_jsxDEV(ArtistPageWithAtlas, _objectSpread({\n            atlas: atlas\n          }, _this4.props), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 6\n          }, _this4);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return ArtistPage;\n}(Component);\n\nexport { ArtistPage as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/artistpage.js"],"names":["Component","Link","AtlasConsumer","Track","ArtistPageWithAtlas","artist","newArtistName","e","setState","target","value","props","atlas","getLastUrlSegment","fetch","method","headers","body","JSON","stringify","artistUrl","then","res","json","console","log","err","playingId","isPlaying","play","pause","currentTrackTime","totalTrackTime","skipTo","stream","account","state","newArtist","isNewArtist","name","handleName","tracks","map","track","id","ArtistPage"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;IAGMC,mB;;;;;;;;;;;;;;;;4DAEG;AACPC,MAAAA,MAAM,EAAE,IADD;AAEPC,MAAAA,aAAa,EAAG;AAFT,K;;iEAwBK,UAACC,CAAD;AAAA,aAAO,MAAKC,QAAL,CAAc;AAAEF,QAAAA,aAAa,EAAEC,CAAC,CAACE,MAAF,CAASC;AAA1B,OAAd,CAAP;AAAA,K;;;;;;;wCAnBO;AAAA;;AACnB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,iBAAjB,OAAyC,KAA7C,EAAoD;AACnDC,QAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC/BC,UAAAA,MAAM,EAAE,MADuB;AAE/BC,UAAAA,OAAO,EAAE;AACR,4BAAgB;AADR,WAFsB;AAK/BC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,YAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,iBAAjB;AADS,WAAf;AALyB,SAA3B,CAAL,CAQGQ,IARH,CAQQ,UAACC,GAAD,EAAS;AAChBA,UAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgB,UAAAJ,IAAI,EAAI;AACvBO,YAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACA,YAAA,MAAI,CAACT,QAAL,CAAc;AAAEY,cAAAA,SAAS,EAAEH;AAAb,aAAd;AACA,WAHD;AAIA,SAbD,WAaS,UAACS,GAAD;AAAA,iBAASF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAT;AAAA,SAbT;AAcA;AACD;;;6BAIQ;AAAA;;AAAA,wBACwG,KAAKf,KAD7G;AAAA,UACAgB,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBC,IADtB,eACsBA,IADtB;AAAA,UAC4BC,KAD5B,eAC4BA,KAD5B;AAAA,UACmCC,gBADnC,eACmCA,gBADnC;AAAA,UACqDC,cADrD,eACqDA,cADrD;AAAA,UACqEC,MADrE,eACqEA,MADrE;AAAA,UAC6EC,MAD7E,eAC6EA,MAD7E;AAAA,UACqFC,OADrF,eACqFA,OADrF;AAAA,UAC8FvB,KAD9F,eAC8FA,KAD9F;AAAA,wBAE6B,KAAKwB,KAFlC;AAAA,UAEAC,SAFA,eAEAA,SAFA;AAAA,UAEW/B,aAFX,eAEWA,aAFX;AAGR,UAAMD,MAAM,GAAG,KAAK+B,KAAL,CAAW/B,MAAX,IAAqB,KAAKM,KAAL,CAAWN,MAA/C;AAEA,UAAMe,SAAS,GAAG,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,iBAAjB,EAAlB;AACA,UAAMyB,WAAW,GAAGlB,SAAS,KAAK,KAAlC;AACA,0BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,qBACEkB,WAAW,IAAKjC,MAAM,IAAIA,MAAM,CAACkC,IADnC,EAEED,WAAW,iBACZ;AACC,YAAA,SAAS,EAAC,+BADX;AAEC,YAAA,KAAK,EAAEhC,aAFR;AAGC,YAAA,QAAQ,EAAE,KAAKkC,UAHhB;AAIC,YAAA,SAAS;AAJV;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAWC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEEnC,MAAM,IAAIA,MAAM,CAACoC,MAAP,CAAcC,GAAd,CAAkB,UAAAC,KAAK;AAAA,gCAChC,QAAC,KAAD;AACC,cAAA,IAAI,EAAEA,KAAK,CAACA,KADb;AAEC,cAAA,SAAS,EAAEhB,SAFZ;AAGC,cAAA,SAAS,EAAEC,SAHZ;AAIC,cAAA,IAAI,EAAEC,IAJP;AAKC,cAAA,KAAK,EAAEC,KALR;AAMC,cAAA,WAAW,EAAEC,gBANd;AAOC,cAAA,SAAS,EAAEC,cAPZ;AAQC,cAAA,MAAM,EAAEC,MART;AASC,cAAA,OAAO,EAAEE,OATV;AAUC,cAAA,MAAM,EAAE9B;AAVT,eAWMsC,KAAK,CAACC,EAXZ;AAAA;AAAA;AAAA;AAAA,sBADgC;AAAA,WAAvB;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAiCA;;;;EApEgC5C,S;;IAuEb6C,U;;;;;;;;;;;;;6BACX;AAAA;;AACR,0BACC,QAAC,aAAD;AAAA,kBACE,kBAACjC,KAAD;AAAA,8BACA,QAAC,mBAAD;AAAqB,YAAA,KAAK,EAAEA;AAA5B,aAAuC,MAAI,CAACD,KAA5C;AAAA;AAAA;AAAA;AAAA,oBADA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AAOA;;;;EATsCX,S;;SAAnB6C,U","sourcesContent":["import { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AtlasConsumer } from '../lib/atlas/atlas.js'\nimport Track from './track'\n\n\nclass ArtistPageWithAtlas extends Component {\n\n\tstate = {\n\t\tartist: null,\n\t\tnewArtistName : \"\"\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.atlas.getLastUrlSegment() !== 'new') {\n\t\t\tfetch('/api/artist/get_artist', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ \n\t\t\t\t\tartistUrl: this.props.atlas.getLastUrlSegment()\n\t\t\t\t})\n\t\t\t}).then((res) => {\n\t\t\t\tres.json().then(body => {\n\t\t\t\t\tconsole.log(body)\n\t\t\t\t\tthis.setState({ artistUrl: body })\n\t\t\t\t})\n\t\t\t}).catch((err) => console.log(err))\n\t\t}\n\t}\n\n\thandleName = (e) => this.setState({ newArtistName: e.target.value })\n\n\trender() {\n\t\tconst { playingId, isPlaying, play, pause, currentTrackTime, totalTrackTime, skipTo, stream, account, atlas } = this.props\n\t\tconst { newArtist, newArtistName } = this.state\n\t\tconst artist = this.state.artist || this.props.artist\n\n\t\tconst artistUrl = this.props.atlas.getLastUrlSegment()\n\t\tconst isNewArtist = artistUrl === 'new'\n\t\treturn (\n\t\t\t<div className=\"artist-page\">\n\t\t\t\t<div className=\"big-artist-name right-title\">\n\t\t\t\t\t{isNewArtist || (artist && artist.name)}\n\t\t\t\t\t{isNewArtist && \n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName=\"artist-name-input right-title\" \n\t\t\t\t\t\tvalue={newArtistName} \n\t\t\t\t\t\tonChange={this.handleName} \n\t\t\t\t\t\tautoFocus />}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"artist-stream\">\n\t\t\t\t\t{\n\t\t\t\t\t\tartist && artist.tracks.map(track => (\n\t\t\t\t\t\t\t<Track \n\t\t\t\t\t\t\t\tsong={track.track} \n\t\t\t\t\t\t\t\tplayingId={playingId} \n\t\t\t\t\t\t\t\tisPlaying={isPlaying} \t\n\t\t\t\t\t\t\t\tplay={play} \n\t\t\t\t\t\t\t\tpause={pause} \n\t\t\t\t\t\t\t\tcurrentTime={currentTrackTime} \n\t\t\t\t\t\t\t\ttotalTime={totalTrackTime}\n\t\t\t\t\t\t\t\tskipTo={skipTo}\n\t\t\t\t\t\t\t\taccount={account} \n\t\t\t\t\t\t\t\tartist={artist}\n\t\t\t\t\t\t\t\tkey={track.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default class ArtistPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<AtlasConsumer>\n\t\t\t\t{(atlas) => (\n\t\t\t\t\t<ArtistPageWithAtlas atlas={atlas} {...this.props} />\n\t\t\t\t)}\n\t\t\t</AtlasConsumer>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}