{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/content.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport classnames from 'classnames';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FastForward } from './fastforward.js';\nimport { PlayPause } from './playpause.js';\nimport { Rewind } from './rewind.js';\nimport Time from './time.js';\nimport { SongTitle } from './title.js';\nexport default class Content extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      contentIsPaused: true\n    });\n\n    _defineProperty(this, \"play\", () => {\n      this.setState({\n        contentIsPaused: false\n      }, () => {\n        this.refs.audio.play();\n      });\n    });\n\n    _defineProperty(this, \"pause\", () => {\n      this.setState({\n        contentIsPaused: true\n      }, () => {\n        this.refs.audio.pause();\n      });\n    });\n  }\n\n  render() {\n    const {\n      size,\n      isCurrent,\n      art\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(\"content\", size),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: art\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fullscreen-controls-lower\",\n        children: /*#__PURE__*/_jsxDEV(SongTitle, {\n          title: \"Signature\",\n          artist: \"Photography\",\n          album: \"Freeform 8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), isCurrent && /*#__PURE__*/_jsxDEV(Time, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"screen-audio\",\n        src: \"test_data/music/sig.m4a\",\n        ref: \"audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n\n} // Content.propTypes = {\n//  \tsize: PropTypes.oneOf([\"full\", \"medium\"]),\n//  \tisCurrent: PropTypes.bool,\n//  \tart: PropTypes.string\n// }\n// TODO\n// - take and render album art and album videos\n//   - consider allowing small album preview to be videos\n// - resize / minimize\n// - render and connect controls\n// - -","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/content.js"],"names":["classnames","Component","PropTypes","FastForward","PlayPause","Rewind","Time","SongTitle","Content","contentIsPaused","setState","refs","audio","play","pause","render","size","isCurrent","art","props"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAIA,eAAe,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCAEtC;AACPQ,MAAAA,eAAe,EAAE;AADV,KAFsC;;AAAA,kCAMvC,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAED,QAAAA,eAAe,EAAE;AAAnB,OAAd,EAA0C,MAAM;AAC/C,aAAKE,IAAL,CAAUC,KAAV,CAAgBC,IAAhB;AACA,OAFD;AAGA,KAV6C;;AAAA,mCAYtC,MAAM;AACb,WAAKH,QAAL,CAAc;AAAED,QAAAA,eAAe,EAAE;AAAnB,OAAd,EAAyC,MAAM;AAC9C,aAAKE,IAAL,CAAUC,KAAV,CAAgBE,KAAhB;AACA,OAFD;AAGA,KAhB6C;AAAA;;AAkB9CC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB,QAA2B,KAAKC,KAAtC;AAEA,wBACC;AAAK,MAAA,SAAS,EAAEnB,UAAU,CAAC,SAAD,EAAYgB,IAAZ,CAA1B;AAAA,8BACC;AAAK,QAAA,GAAG,EAAEE;AAAV;AAAA;AAAA;AAAA;AAAA,cADD,eAUC;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,+BACC,QAAC,SAAD;AACC,UAAA,KAAK,EAAC,WADP;AAEC,UAAA,MAAM,EAAC,aAFR;AAGC,UAAA,KAAK,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAVD,EAgBGD,SAAS,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAhBhB,eAiBC;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,GAAG,EAAC,yBAA7B;AAAuD,QAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAqBA;;AA1C6C,C,CA6C/C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import classnames from 'classnames'\nimport { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { FastForward } from './fastforward.js'\nimport { PlayPause } from './playpause.js'\nimport { Rewind } from './rewind.js'\nimport Time from './time.js'\nimport { SongTitle } from './title.js'\n\n\n\nexport default class Content extends Component {\n\n\tstate = {\n\t\tcontentIsPaused: true\n\t}\n\n\tplay = () => {\n\t\tthis.setState({ contentIsPaused: false }, () => {\n\t\t\tthis.refs.audio.play();\n\t\t});\n\t}\n\n\tpause = () => {\n\t\tthis.setState({ contentIsPaused: true }, () => {\n\t\t\tthis.refs.audio.pause();\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { size, isCurrent, art } = this.props;\n\n\t\treturn (\n\t\t\t<div className={classnames(\"content\", size)} >\n\t\t\t\t<img src={art} />\n\t\t\t\t{/*<div className=\"fullscreen-controls-mid\">\n\t\t\t\t\t<Rewind />\n\t\t\t\t\t<PlayPause \n\t\t\t\t\t\tcontentIsPaused={this.state.contentIsPaused}\n\t\t\t\t\t\tplay={this.play}\n\t\t\t\t\t\tpause={this.pause}/>\n\t\t\t\t\t<FastForward />\n\t\t\t\t</div>*/}\n\t\t\t\t<div className=\"fullscreen-controls-lower\">\n\t\t\t\t\t<SongTitle \n\t\t\t\t\t\ttitle=\"Signature\" \n\t\t\t\t\t\tartist=\"Photography\"\n\t\t\t\t\t\talbum=\"Freeform 8\" />\n\t\t\t\t</div>\n\t\t\t\t{ isCurrent && <Time /> }\n\t\t\t\t<audio id=\"screen-audio\" src=\"test_data/music/sig.m4a\" ref=\"audio\" />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// Content.propTypes = {\n//  \tsize: PropTypes.oneOf([\"full\", \"medium\"]),\n//  \tisCurrent: PropTypes.bool,\n//  \tart: PropTypes.string\n// }\n\n// TODO\n// - take and render album art and album videos\n//   - consider allowing small album preview to be videos\n// - resize / minimize\n// - render and connect controls\n// - -"]},"metadata":{},"sourceType":"module"}