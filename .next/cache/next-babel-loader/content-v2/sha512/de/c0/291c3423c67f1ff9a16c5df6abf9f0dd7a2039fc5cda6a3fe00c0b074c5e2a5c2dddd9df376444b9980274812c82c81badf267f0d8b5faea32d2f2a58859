{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/pages/main.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Stereo from '../components/stereo.js';\nimport styles from '../styles/Home.module.css';\nimport classnames from 'classnames';\nimport Atlas, { AtlasProvider } from '../lib/atlas/atlas.js';\nconst initialState = {\n  sessionToken: null,\n  accountId: null\n};\nconst fakeSignedIn = {\n  sessionToken: 1,\n  accountId: 1\n};\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", fakeSignedIn);\n\n    _defineProperty(this, \"startSession\", (id, token) => {\n      // TODO Set / read session from cookie\n      this.setState({\n        id,\n        sessionToken: token\n      });\n    });\n\n    Atlas.reRender = () => this.forceUpdate();\n  }\n\n  render() {\n    const {\n      sessionToken,\n      accountId\n    } = this.state;\n    const signedIn = !!sessionToken;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('page-container', {\n        center: signedIn\n      }),\n      children: /*#__PURE__*/_jsxDEV(AtlasProvider, {\n        value: Atlas,\n        children: /*#__PURE__*/_jsxDEV(Stereo, _objectSpread(_objectSpread({}, this.props), {}, {\n          signedIn: !!this.state.seesionToken,\n          accountId: this.state.accountId,\n          sessionToken: this.state.seesionToken,\n          signedIn: signedIn,\n          startSession: this.startSession,\n          account: {\n            accountId,\n            sessionToken\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/pages/main.js"],"names":["React","Component","Stereo","styles","classnames","Atlas","AtlasProvider","initialState","sessionToken","accountId","fakeSignedIn","Main","constructor","props","id","token","setState","reRender","forceUpdate","render","state","signedIn","center","seesionToken","startSession"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,uBAArC;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,YAAY,EAAE,IADM;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAArB;AAIA,MAAMC,YAAY,GAAG;AACpBF,EAAAA,YAAY,EAAE,CADM;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAArB;AAIA,eAAe,MAAME,IAAN,SAAmBV,SAAnB,CAA6B;AAI3CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,mCAFXH,YAEW;;AAAA,0CAKJ,CAACI,EAAD,EAAKC,KAAL,KAAe;AAC7B;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,EAAF;AAAMN,QAAAA,YAAY,EAAEO;AAApB,OAAd;AACA,KARkB;;AAElBV,IAAAA,KAAK,CAACY,QAAN,GAAiB,MAAM,KAAKC,WAAL,EAAvB;AACA;;AAODC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEX,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAA6B,KAAKW,KAAxC;AACG,UAAMC,QAAQ,GAAG,CAAC,CAACb,YAAnB;AACH,wBACC;AAAK,MAAA,SAAS,EAAEJ,UAAU,CAAC,gBAAD,EAAmB;AAAEkB,QAAAA,MAAM,EAAED;AAAV,OAAnB,CAA1B;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEhB,KAAtB;AAAA,+BACC,QAAC,MAAD,kCACK,KAAKQ,KADV;AAEC,UAAA,QAAQ,EAAE,CAAC,CAAC,KAAKO,KAAL,CAAWG,YAFxB;AAGC,UAAA,SAAS,EAAE,KAAKH,KAAL,CAAWX,SAHvB;AAIC,UAAA,YAAY,EAAE,KAAKW,KAAL,CAAWG,YAJ1B;AAKC,UAAA,QAAQ,EAAEF,QALX;AAMC,UAAA,YAAY,EAAE,KAAKG,YANpB;AAOC,UAAA,OAAO,EAAE;AAACf,YAAAA,SAAD;AAAYD,YAAAA;AAAZ;AAPV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADD;AAgBA;;AAjC0C","sourcesContent":["import React, { Component } from 'react'\nimport Stereo from '../components/stereo.js'\nimport styles from '../styles/Home.module.css'\nimport classnames from 'classnames'\nimport Atlas, { AtlasProvider } from '../lib/atlas/atlas.js'\n\nconst initialState = {\n\tsessionToken: null,\n\taccountId: null\n}\nconst fakeSignedIn = {\n\tsessionToken: 1,\n\taccountId: 1\n}\nexport default class Main extends Component {\n\n\tstate = fakeSignedIn\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tAtlas.reRender = () => this.forceUpdate()\n\t}\n\n\tstartSession = (id, token) => {\n\t\t// TODO Set / read session from cookie\n\t\tthis.setState({ id, sessionToken: token })\n\t}\n\n\trender() {\n\t\tconst { sessionToken, accountId } =this.state\n    \tconst signedIn = !!sessionToken\n\t\treturn (\n\t\t\t<div className={classnames('page-container', { center: signedIn })}>\n    \t\t\t<AtlasProvider value={Atlas}>\n    \t\t\t\t<Stereo \n    \t\t\t\t\t{...this.props}\n    \t\t\t\t\tsignedIn={!!this.state.seesionToken}\n    \t\t\t\t\taccountId={this.state.accountId}\n    \t\t\t\t\tsessionToken={this.state.seesionToken}\n    \t\t\t\t\tsignedIn={signedIn}\n    \t\t\t\t\tstartSession={this.startSession} \n    \t\t\t\t\taccount={{accountId, sessionToken}}\n    \t\t\t\t\t\n    \t\t\t\t/>\n        \t\t</AtlasProvider>\n        \t</div>\n        )\n\t}\n}"]},"metadata":{},"sourceType":"module"}