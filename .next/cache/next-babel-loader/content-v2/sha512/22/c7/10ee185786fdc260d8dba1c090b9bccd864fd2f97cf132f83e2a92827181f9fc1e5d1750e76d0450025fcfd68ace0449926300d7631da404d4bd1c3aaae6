{"ast":null,"code":"export default class Voice {\n  constructor() {\n    this.synth = window.speechSynthesis;\n    this.context = new (window.AudioContext || window.webkitAudioContext)();\n    this.bufferSource = this.context.createBufferSource();\n    const channelSplitter = this.context.createChannelSplitter(4);\n    this.bufferSource.connect(channelSplitter);\n    const delay1 = this.context.createDelay(1.0);\n    const delay2 = this.context.createDelay(2.0);\n    const delay3 = this.context.createDelay(3.0);\n    const delay4 = this.context.createDelay(4.0);\n    channelSplitter.connect(delay1, 0, 0);\n    channelSplitter.connect(delay2, 1, 0);\n    channelSplitter.connect(delay3, 2, 0);\n    channelSplitter.connect(delay4, 3, 0);\n    const channelMerger = this.context.createChannelMerger(4);\n    delay1.connect(channelMerger, 0, 0);\n    delay2.connect(channelMerger, 0, 1);\n    delay3.connect(channelMerger, 0, 2);\n    delay4.connect(channelMerger, 0, 3);\n    channelMerger.connect(this.context.destination);\n  }\n\n  say(script) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      console.log('getUserMedia supported.');\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        const utterance = new SpeechSynthesisUtterance(script);\n\n        utterance.onend = () => {\n          mediaRecorder.stop();\n\n          mediaRecorder.ondataavailable = e => {\n            e.data.arrayBuffer().then(buffer => {\n              console.log(buffer);\n              this.context.decodeAudioData(buffer, audioBuffer => {\n                this.bufferSource.buffer = audioBuffer;\n                this.bufferSource.start();\n              });\n            });\n          };\n        };\n\n        mediaRecorder.start();\n        this.synth.speak(utterance);\n      });\n    }\n  }\n\n  loop() {\n    if (!window) {\n      return;\n    }\n\n    return;\n  }\n\n  save() {\n    if (!window) {\n      return;\n    }\n\n    return;\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/voice/voice.js"],"names":["Voice","constructor","synth","window","speechSynthesis","context","AudioContext","webkitAudioContext","bufferSource","createBufferSource","channelSplitter","createChannelSplitter","connect","delay1","createDelay","delay2","delay3","delay4","channelMerger","createChannelMerger","destination","say","script","navigator","mediaDevices","getUserMedia","console","log","audio","then","stream","mediaRecorder","MediaRecorder","utterance","SpeechSynthesisUtterance","onend","stop","ondataavailable","e","data","arrayBuffer","buffer","decodeAudioData","audioBuffer","start","speak","loop","save"],"mappings":"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","sourcesContent":["export default class Voice {\n\n\tconstructor() {\n\t\tthis.synth = window.speechSynthesis\n\t\tthis.context = new (window.AudioContext || window.webkitAudioContext)()\n\n\t\tthis.bufferSource = this.context.createBufferSource()\n\t\tconst channelSplitter = this.context.createChannelSplitter(4)\n\t\tthis.bufferSource.connect(channelSplitter)\n\t\tconst delay1 = this.context.createDelay(1.0)\n\t\tconst delay2 = this.context.createDelay(2.0)\n\t\tconst delay3 = this.context.createDelay(3.0)\n\t\tconst delay4 = this.context.createDelay(4.0)\n\t\tchannelSplitter.connect(delay1, 0, 0)\n\t\tchannelSplitter.connect(delay2, 1, 0)\n\t\tchannelSplitter.connect(delay3, 2, 0)\n\t\tchannelSplitter.connect(delay4, 3, 0)\n\t\tconst channelMerger = this.context.createChannelMerger(4)\n\t\tdelay1.connect(channelMerger, 0, 0)\n\t\tdelay2.connect(channelMerger, 0, 1)\n\t\tdelay3.connect(channelMerger, 0, 2)\n\t\tdelay4.connect(channelMerger, 0, 3)\n\t\tchannelMerger.connect(this.context.destination)\n\t}\n\n\tsay(script) {\n\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n   \t\t\tconsole.log('getUserMedia supported.');\n   \t\t\tnavigator.mediaDevices.getUserMedia ({ audio: true })\n      \t\t.then((stream) => {\n      \t\t\tconst mediaRecorder = new MediaRecorder(stream);\n      \t\t\tconst utterance = new SpeechSynthesisUtterance(script);\n      \t\t\tutterance.onend = () => {\n      \t\t\t\tmediaRecorder.stop()\n      \t\t\t\tmediaRecorder.ondataavailable = (e) => {\n\t      \t\t\t\te.data.arrayBuffer().then((buffer) => {\n\t      \t\t\t\t\tconsole.log(buffer)\n\t      \t\t\t\t\tthis.context.decodeAudioData(buffer, (audioBuffer) => {\n\t      \t\t\t\t\t\tthis.bufferSource.buffer = audioBuffer\n\t      \t\t\t\t\t\tthis.bufferSource.start()\n\t      \t\t\t\t\t})\n\t      \t\t\t\t})\n      \t\t\t\t}\n      \t\t\t}\n\n      \t\t\tmediaRecorder.start()\n      \t\t\tthis.synth.speak(utterance)\n      \t\t})\n\n      \t}\n\t}\n\n\tloop() {\n\t\tif (!window) {\n\t\t\treturn\n\t\t}\n\t\treturn\n\t}\n\n\tsave() {\n\t\tif (!window) {\n\t\t\treturn\n\t\t}\n\t\treturn\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}