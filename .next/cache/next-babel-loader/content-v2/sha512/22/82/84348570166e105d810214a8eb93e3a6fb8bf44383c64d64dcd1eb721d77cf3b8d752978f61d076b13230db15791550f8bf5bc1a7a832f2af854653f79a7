{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\n\nclass AtlasClass {\n  constructor(preHistory = []) {\n    _defineProperty(this, \"push\", path => {\n      if (path[0] !== '/') {\n        path = '/' + path;\n      }\n\n      this.history.push(path);\n      this.now += 1;\n    });\n\n    _defineProperty(this, \"back\", () => this.now -= 1);\n\n    _defineProperty(this, \"forward\", () => this.now += 1);\n\n    _defineProperty(this, \"path\", () => this.history[this.now]);\n\n    this.history = [];\n    this.now = preHistory.length - 1;\n  }\n\n}\n\nconst Atlas = new AtlasClass();\nexport const AtlasContext = /*#__PURE__*/React.createContext(Atlas);\nexport const AtlasProvider = AtlasContext.Provider;\nexport const AtlasConsumer = AtlasContext.Consumer;\nexport const Route = ({\n  path,\n  children\n}) => /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n  children: atlas => {\n    // TODO: Support inexact routes\t\n    if (atlas.path() !== path) {\n      return null;\n    }\n\n    return children;\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 2\n}, this);\n\nconst handleClick = (atlas, path) => {\n  atlas.push(path);\n};\n\nexport const Link = ({\n  to,\n  className,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n    children: atlas => /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => handleClick(atlas, to),\n      className: className,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\nexport default Atlas;","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js"],"names":["React","useContext","AtlasClass","constructor","preHistory","path","history","push","now","length","Atlas","AtlasContext","createContext","AtlasProvider","Provider","AtlasConsumer","Consumer","Route","children","atlas","handleClick","Link","to","className"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,UAAN,CAAiB;AAChBC,EAAAA,WAAW,CAACC,UAAU,GAAG,EAAd,EAAkB;AAAA,kCAKrBC,IAAD,IAAU;AAChB,UAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACpBA,QAAAA,IAAI,GAAG,MAAMA,IAAb;AACA;;AACD,WAAKC,OAAL,CAAaC,IAAb,CAAkBF,IAAlB;AACA,WAAKG,GAAL,IAAY,CAAZ;AACA,KAX4B;;AAAA,kCAatB,MAAM,KAAKA,GAAL,IAAY,CAbI;;AAAA,qCAenB,MAAM,KAAKA,GAAL,IAAY,CAfC;;AAAA,kCAiBtB,MAAM,KAAKF,OAAL,CAAa,KAAKE,GAAlB,CAjBgB;;AAC5B,SAAKF,OAAL,GAAe,EAAf;AACA,SAAKE,GAAL,GAAWJ,UAAU,CAACK,MAAX,GAAoB,CAA/B;AACA;;AAJe;;AAqBjB,MAAMC,KAAK,GAAG,IAAIR,UAAJ,EAAd;AACA,OAAO,MAAMS,YAAY,gBAAGX,KAAK,CAACY,aAAN,CAAoBF,KAApB,CAArB;AACP,OAAO,MAAMG,aAAa,GAAGF,YAAY,CAACG,QAAnC;AACP,OAAO,MAAMC,aAAa,GAAGJ,YAAY,CAACK,QAAnC;AAEP,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEZ,EAAAA,IAAF;AAAQa,EAAAA;AAAR,CAAD,kBACpB,QAAC,aAAD;AAAA,YAEGC,KAAD,IAAW;AACV;AACA,QAAIA,KAAK,CAACd,IAAN,OAAiBA,IAArB,EAA2B;AAC1B,aAAO,IAAP;AACA;;AAED,WAAOa,QAAP;AACA;AATH;AAAA;AAAA;AAAA;AAAA,QADM;;AAeP,MAAME,WAAW,GAAG,CAACD,KAAD,EAAQd,IAAR,KAAiB;AACpCc,EAAAA,KAAK,CAACZ,IAAN,CAAWF,IAAX;AACA,CAFD;;AAIA,OAAO,MAAMgB,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,SAAN;AAAiBL,EAAAA;AAAjB,CAAD,KAAiC;AACpD,sBACC,QAAC,aAAD;AAAA,cAEEC,KAAD,iBACA;AAAG,MAAA,OAAO,EAAE,MAAMC,WAAW,CAACD,KAAD,EAAQG,EAAR,CAA7B;AAA0C,MAAA,SAAS,EAAEC,SAArD;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CAXM;AAaP,eAAeR,KAAf","sourcesContent":["import React, { useContext } from 'react'\n\nclass AtlasClass {\n\tconstructor(preHistory = []) {\n\t\tthis.history = []\n\t\tthis.now = preHistory.length - 1\n\t}\n\n\tpush = (path) => {\n\t\tif (path[0] !== '/') {\n\t\t\tpath = '/' + path\n\t\t}\n\t\tthis.history.push(path)\n\t\tthis.now += 1\n\t}\t\n\n\tback = () => this.now -= 1\n\n\tforward = () => this.now += 1\n\n\tpath = () => this.history[this.now]\n}\n\nconst Atlas = new AtlasClass()\nexport const AtlasContext = React.createContext(Atlas)\nexport const AtlasProvider = AtlasContext.Provider\nexport const AtlasConsumer = AtlasContext.Consumer\n\nexport const Route = ({ path, children }) => (\n\t<AtlasConsumer>\n\t\t{\n\t\t\t(atlas) => {\n\t\t\t\t// TODO: Support inexact routes\t\n\t\t\t\tif (atlas.path() !== path) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\treturn children\n\t\t\t}\n\t\t}\n\t</AtlasConsumer>\n)\n\nconst handleClick = (atlas, path) => {\n\tatlas.push(path)\n}\n\nexport const Link = ({ to, className, children }) => {\n\treturn (\n\t\t<AtlasConsumer>\n\t\t{ \n\t\t\t(atlas) => (\n\t\t\t<a onClick={() => handleClick(atlas, to)} className={className}>\n\t\t\t\t{ children }\n\t\t\t</a>)\n\t\t}\n\t\t</AtlasConsumer>\n\t)\n}\n\nexport default Atlas\n\n"]},"metadata":{},"sourceType":"module"}