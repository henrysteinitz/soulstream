{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/lyrics.js\";\nimport { Component } from 'react';\nimport { lyrics } from '../test/test.js'; // map line intervals\n\nclass LineInterval {\n  start() {\n    return this.endpoints[0];\n  }\n\n  end() {\n    return this.endpoints[1];\n  }\n\n  contains(time) {\n    return this.start <= time && this.end;\n  }\n\n}\n\nclass Verse {\n  constructor(lines, timeInterval) {\n    this.lines = lines;\n    this.timeInterval = timeInterval;\n  }\n\n  start() {\n    return this.endpoints[0];\n  }\n\n  end() {\n    return this.endpoints[1];\n  }\n\n  contains(time) {\n    return this.start() <= time && this.end() >= time;\n  }\n\n  lines() {\n    return this.lines;\n  }\n\n} // Get ready for linetime\n\n\nclass VerseMap {\n  constructor() {\n    this.verses = [];\n  }\n\n  insert(verse) {\n    let lastVerse = true;\n    this.verses.forEach((v, i) => {\n      if (verse.start() < v.start()) {\n        v.insert(verse, i);\n        lastVerse = false;\n        return;\n      }\n    });\n\n    if (lastVerse) {\n      this.verses.push(verse);\n    }\n  }\n\n  get(time) {\n    //bs search not really nes.\n    this.verses.forEach(verse => {\n      if (verse.contains(time)) {\n        return verse.lines;\n      }\n    });\n  }\n\n  getIndex(time) {\n    //bs search not really nes.\n    this.verses.forEach((verse, i) => {\n      if (verse.contains(time)) {\n        return i;\n      }\n    });\n  }\n\n}\n\nexport default class Lyrics extends Component {\n  render() {\n    const {\n      lyrics,\n      time\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics-container\",\n      children: lyrics.map((verse, s) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verse\",\n        children: Verserse.map((line, l) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className({\n            bold: lyricsMap.lineContainsTime((s, l), time)\n          }, \"stanza-line\"),\n          children: line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport class LyricsEditor extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics-editor-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/lyrics.js"],"names":["Component","lyrics","LineInterval","start","endpoints","end","contains","time","Verse","constructor","lines","timeInterval","VerseMap","verses","insert","verse","lastVerse","forEach","v","i","push","get","getIndex","Lyrics","render","props","map","s","Verserse","line","l","className","bold","lyricsMap","lineContainsTime","LyricsEditor"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { lyrics } from '../test/test.js' \n\n// map line intervals\nclass LineInterval {\n\tstart() {\n\t\treturn this.endpoints[0]\n\t}\n\n\tend() {\n\t\treturn this.endpoints[1]\n\t}\n\n\tcontains(time) {\n\t\treturn this.start  <= time && this.end\n\t}\n\n\n}\n\nclass Verse {\n\n\tconstructor(lines, timeInterval) {\n\t\tthis.lines = lines\n\t\tthis.timeInterval = timeInterval\n\t}\n\n\tstart() {\n\t\treturn this.endpoints[0]\n\t}\n\n\tend() {\n\t\treturn this.endpoints[1]\n\t}\n\n\tcontains(time) {\n\t\treturn this.start() <= time && this.end() >= time\n\t}\n\n\tlines() {\n\t\treturn this.lines\n\t}\n}\n\n// Get ready for linetime\nclass VerseMap {\n\tconstructor() {\n\t\tthis.verses = [] \n\t}\n\n\tinsert(verse) {\n\t\tlet lastVerse = true\n\t\tthis.verses.forEach((v, i) => {\n\t\t\tif (verse.start() < v.start()) {\n\t\t\t\tv.insert(verse, i)\n\t\t\t\tlastVerse = false\n\t\t\t\treturn\n\t\t\t}\n\t\t}) \n\t\tif (lastVerse) {\n\t\t\tthis.verses.push(verse)\n\t\t}\n\t}\n\n\tget(time) {\n\t\t//bs search not really nes.\n\t\tthis.verses.forEach((verse) => {\n\t\t\tif (verse.contains(time)) {\n\t\t\t\treturn verse.lines\n\t\t\t}\n\t\t})\n\t}\n\n\tgetIndex(time) {\n\t\t//bs search not really nes.\n\t\tthis.verses.forEach((verse, i) => {\n\t\t\tif (verse.contains(time)) {\n\t\t\t\treturn i\n\t\t\t}\n\t\t})\n\t}\n}\n\n\n\n\n\n\nexport default class Lyrics extends Component {\n\trender() {\n\t\tconst { lyrics, time } = this.props\t\t\n\t\treturn (\n\t\t\t<div className=\"lyrics-container\">\n\t\t\t\t{ lyrics.map((verse, s) => (\n\t\t\t\t\t<div className=\"verse\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tVerserse.map((line, l) => (\n\t\t\t\t\t\t\t\t<div className={className({ bold: lyricsMap.lineContainsTime((s,l), time)}, \"stanza-line\")}>\n\t\t\t\t\t\t\t\t\t{line}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport class LyricsEditor extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"lyrics-editor-container\">\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}