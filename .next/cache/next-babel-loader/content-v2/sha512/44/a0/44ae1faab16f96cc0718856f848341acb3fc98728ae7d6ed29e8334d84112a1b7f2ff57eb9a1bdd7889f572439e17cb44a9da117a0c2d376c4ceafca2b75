{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js\",\n    _s = $RefreshSig$(),\n    _this2 = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\n\nvar AtlasClass = function AtlasClass() {\n  var _this = this;\n\n  var preHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  _classCallCheck(this, AtlasClass);\n\n  _defineProperty(this, \"push\", function (path) {\n    if (path[0] !== '/') {\n      path = '/' + path;\n    }\n\n    _this.history.push(path);\n\n    window.href = path;\n    _this.now += 1;\n  });\n\n  _defineProperty(this, \"back\", function () {\n    return _this.now -= 1;\n  });\n\n  _defineProperty(this, \"forward\", function () {\n    return _this.now += 1;\n  });\n\n  _defineProperty(this, \"path\", function () {\n    return _this.history[now];\n  });\n\n  this.history = preHistory;\n  this.now = preHistory.length - 1;\n};\n\nvar Atlas = new AtlasClass();\nexport var AtlasContext = /*#__PURE__*/React.createContext(Atlas);\n_c = AtlasContext;\nexport var AtlasProvider = AtlasContext.Provider;\nexport var AtlasConsumer = AtlasContext.Consumer;\nexport var Route = function Route(_ref) {\n  _s();\n\n  var path = _ref.path,\n      children = _ref.children;\n  var atlas = useContext(AtlasContext); // TODO: Support inexact routes\t\n\n  if (atlas.path() !== path) {\n    return null;\n  }\n\n  return children;\n};\n\n_s(Route, \"JYBwZVvJUFZfNv8e7PZkOoKmHvc=\");\n\n_c2 = Route;\n\nvar handleClick = function handleClick(atlas, path) {\n  atlas.push(path);\n};\n\nexport var Link = function Link(_ref2) {\n  _s2();\n\n  var to = _ref2.to,\n      children = _ref2.children;\n  var atlas = useContext(AtlasContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: function onClick() {\n      return handleClick(atlas, to);\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, _this2);\n};\n\n_s2(Link, \"JYBwZVvJUFZfNv8e7PZkOoKmHvc=\");\n\n_c3 = Link;\nexport default Atlas;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AtlasContext\");\n$RefreshReg$(_c2, \"Route\");\n$RefreshReg$(_c3, \"Link\");","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js"],"names":["React","useContext","AtlasClass","preHistory","path","history","push","window","href","now","length","Atlas","AtlasContext","createContext","AtlasProvider","Provider","AtlasConsumer","Consumer","Route","children","atlas","handleClick","Link","to"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;IAEMC,U,GACL,sBAA6B;AAAA;;AAAA,MAAjBC,UAAiB,uEAAJ,EAAI;;AAAA;;AAAA,gCAKtB,UAACC,IAAD,EAAU;AAChB,QAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACpBA,MAAAA,IAAI,GAAG,MAAMA,IAAb;AACA;;AACD,IAAA,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkBF,IAAlB;;AACAG,IAAAA,MAAM,CAACC,IAAP,GAAcJ,IAAd;AACA,IAAA,KAAI,CAACK,GAAL,IAAY,CAAZ;AACA,GAZ4B;;AAAA,gCActB;AAAA,WAAM,KAAI,CAACA,GAAL,IAAY,CAAlB;AAAA,GAdsB;;AAAA,mCAgBnB;AAAA,WAAM,KAAI,CAACA,GAAL,IAAY,CAAlB;AAAA,GAhBmB;;AAAA,gCAkBtB;AAAA,WAAM,KAAI,CAACJ,OAAL,CAAaI,GAAb,CAAN;AAAA,GAlBsB;;AAC5B,OAAKJ,OAAL,GAAeF,UAAf;AACA,OAAKM,GAAL,GAAWN,UAAU,CAACO,MAAX,GAAoB,CAA/B;AACA,C;;AAkBF,IAAMC,KAAK,GAAG,IAAIT,UAAJ,EAAd;AACA,OAAO,IAAMU,YAAY,gBAAGZ,KAAK,CAACa,aAAN,CAAoBF,KAApB,CAArB;KAAMC,Y;AACb,OAAO,IAAME,aAAa,GAAGF,YAAY,CAACG,QAAnC;AACP,OAAO,IAAMC,aAAa,GAAGJ,YAAY,CAACK,QAAnC;AAEP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAwB;AAAA;;AAAA,MAArBd,IAAqB,QAArBA,IAAqB;AAAA,MAAfe,QAAe,QAAfA,QAAe;AAC5C,MAAMC,KAAK,GAAGnB,UAAU,CAACW,YAAD,CAAxB,CAD4C,CAG5C;;AACA,MAAIQ,KAAK,CAAChB,IAAN,OAAiBA,IAArB,EAA2B;AAC1B,WAAO,IAAP;AACA;;AAED,SAAOe,QAAP;AACA,CATM;;GAAMD,K;;MAAAA,K;;AAWb,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACD,KAAD,EAAQhB,IAAR,EAAiB;AACpCgB,EAAAA,KAAK,CAACd,IAAN,CAAWF,IAAX;AACA,CAFD;;AAIA,OAAO,IAAMkB,IAAI,GAAG,SAAPA,IAAO,QAAsB;AAAA;;AAAA,MAAnBC,EAAmB,SAAnBA,EAAmB;AAAA,MAAfJ,QAAe,SAAfA,QAAe;AACzC,MAAMC,KAAK,GAAGnB,UAAU,CAACW,YAAD,CAAxB;AACA,sBACC;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMS,WAAW,CAACD,KAAD,EAAQG,EAAR,CAAjB;AAAA,KAAd;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YADD;AAKA,CAPM;;IAAMG,I;;MAAAA,I;AASb,eAAeX,KAAf","sourcesContent":["import React, { useContext } from 'react'\n\nclass AtlasClass {\n\tconstructor(preHistory = []) {\n\t\tthis.history = preHistory\n\t\tthis.now = preHistory.length - 1\n\t}\n\n\tpush = (path) => {\n\t\tif (path[0] !== '/') {\n\t\t\tpath = '/' + path\n\t\t}\n\t\tthis.history.push(path)\n\t\twindow.href = path\n\t\tthis.now += 1\n\t}\t\n\n\tback = () => this.now -= 1\n\n\tforward = () => this.now += 1\n\n\tpath = () => this.history[now]\n}\n\nconst Atlas = new AtlasClass()\nexport const AtlasContext = React.createContext(Atlas)\nexport const AtlasProvider = AtlasContext.Provider\nexport const AtlasConsumer = AtlasContext.Consumer\n\nexport const Route = ({ path, children }) => {\n\tconst atlas = useContext(AtlasContext)\n\t\n\t// TODO: Support inexact routes\t\n\tif (atlas.path() !== path) {\n\t\treturn null\n\t}\n\n\treturn children\n}\n\nconst handleClick = (atlas, path) => {\n\tatlas.push(path)\n}\n\nexport const Link = ({ to, children }) => {\n\tconst atlas = useContext(AtlasContext)\n\treturn (\n\t\t<div onClick={() => handleClick(atlas, to)}>\n\t\t\t{ children }\n\t\t</div>\n\t)\n}\n\nexport default Atlas\n\n"]},"metadata":{},"sourceType":"module"}