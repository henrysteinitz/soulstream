{"ast":null,"code":"import React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\nexport default (function (props) {\n  var setup = function setup(p5, canvasParentRef) {\n    return;\n  };\n\n  var draw = function draw(p5) {\n    var speaker = p5.Speech();\n    speaker.speak(props.text);\n  };\n}); // class Writer extends Component {\n// \tstate = {\n// \t\tscript: \"\"\n// \t}\n// \thandleTyping = (event) => {\n// \t\tthis.setState({ script: event.target.value })\n// \tplay = () => \n// \t}\n// \tsave = () => {\n// \t\t// say.export(this.state.script)\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<textarea onChange>\n// \t\t\t\t\t{ script }\n// \t\t\t\t</textarea>\n// \t\t\t\t<button onClick={this.play}>\n// \t\t\t\t\tplay subliminal\n// \t\t\t\t</button>\t\t\t\n// \t\t\t\t<button onClick={this.save}>\n// \t\t\t\t\tsave subliminal\n// \t\t\t\t</button>\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/soultype/writer.js"],"names":["React","Component","Sketch","props","setup","p5","canvasParentRef","draw","speaker","Speech","speak","text"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,gBAAe,UAACC,KAAD,EAAW;AACzB,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,EAAD,EAAKC,eAAL,EAAyB;AACtC;AACA,GAFD;;AAIA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACF,EAAD,EAAQ;AACpB,QAAMG,OAAO,GAAGH,EAAE,CAACI,MAAH,EAAhB;AACAD,IAAAA,OAAO,CAACE,KAAR,CAAcP,KAAK,CAACQ,IAApB;AACA,GAHD;AAIA,CATD,E,CAYA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\n\nexport default (props) => {\n\tconst setup = (p5, canvasParentRef) => {\n\t\treturn\n\t};\n\n\tconst draw = (p5) => {\n\t\tconst speaker = p5.Speech()\n\t\tspeaker.speak(props.text)\n\t};\n};\n\n\n// class Writer extends Component {\n// \tstate = {\n// \t\tscript: \"\"\n// \t}\n\n// \thandleTyping = (event) => {\n// \t\tthis.setState({ script: event.target.value })\n\t  \n// \tplay = () => \n// \t}\n\n// \tsave = () => {\n// \t\t// say.export(this.state.script)\n// \t}\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n\n// \t\t\t\t<textarea onChange>\n// \t\t\t\t\t{ script }\n// \t\t\t\t</textarea>\n// \t\t\t\t<button onClick={this.play}>\n// \t\t\t\t\tplay subliminal\n// \t\t\t\t</button>\t\t\t\n// \t\t\t\t<button onClick={this.save}>\n// \t\t\t\t\tsave subliminal\n// \t\t\t\t</button>\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }"]},"metadata":{},"sourceType":"module"}