{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js\",\n    _this2 = this;\n\nimport React, { useContext } from 'react';\nimport classnames from 'classnames'; // TODO: MAKE NOT HORRENDOUS\n\nvar AtlasClass = function AtlasClass(_path) {\n  var _this = this;\n\n  _classCallCheck(this, AtlasClass);\n\n  _defineProperty(this, \"padWithSlash\", function (path) {\n    if (path[0] !== '/') {\n      path = '/' + path;\n    }\n\n    return path;\n  });\n\n  _defineProperty(this, \"setPath\", function (path) {\n    _this.path = _this.padWithSlash(path);\n\n    _this.history.push(_this.padWithSlash(path)); // typeof window != \"undefined\" && window.location.replace(this.padWithSlash(path))\n\n\n    _this.now += 1;\n\n    _this.reRender();\n  });\n\n  _defineProperty(this, \"setState\", function (state) {\n    Object.keys(state).forEach(function (x) {\n      _this.state[x] = state[x];\n    });\n  });\n\n  _defineProperty(this, \"back\", function () {\n    return _this.now -= 1;\n  });\n\n  _defineProperty(this, \"forward\", function () {\n    return _this.now += 1;\n  });\n\n  _defineProperty(this, \"equals\", function (ac2) {\n    return true;\n  });\n\n  _defineProperty(this, \"reRender\", function () {});\n\n  this.history = [this.padWithSlash(_path || '')];\n  this.now = 0;\n  this.state = {};\n  this.path = this.history[0];\n};\n\nvar Atlas = new AtlasClass();\nexport var AtlasContext = /*#__PURE__*/React.createContext(Atlas);\n_c = AtlasContext;\nexport var AtlasProvider = AtlasContext.Provider;\nexport var AtlasConsumer = AtlasContext.Consumer;\nexport var Route = function Route(_ref) {\n  var path = _ref.path,\n      _children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n    children: function children(atlas) {\n      console.log(atlas == new AtlasClass());\n      console.log(atlas.path !== path);\n      console.log(\"path: \".concat(path));\n      console.log(\"apath: \".concat(atlas.path)); // TODO: Support inexact routes\t\n\n      if (atlas.path !== path) {\n        return null;\n        console.log('far');\n      }\n\n      return _children;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 2\n  }, _this2);\n};\n_c2 = Route;\n\nvar handleClick = function handleClick(atlas, path) {\n  atlas.setPath(path);\n  console.log(\"clack\");\n};\n\nexport var Link = function Link(_ref2) {\n  var to = _ref2.to,\n      className = _ref2.className,\n      _children2 = _ref2.children,\n      activeClassName = _ref2.activeClassName;\n  return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n    children: function children(atlas) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: function onClick() {\n          return handleClick(atlas, to);\n        },\n        className: classnames('atlas-link', className, {\n          activeClassName: atlas.path === to\n        }),\n        children: _children2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }, _this2);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, _this2);\n};\n_c3 = Link;\nexport default Atlas;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AtlasContext\");\n$RefreshReg$(_c2, \"Route\");\n$RefreshReg$(_c3, \"Link\");","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/atlas/atlas.js"],"names":["React","useContext","classnames","AtlasClass","path","padWithSlash","history","push","now","reRender","state","Object","keys","forEach","x","ac2","Atlas","AtlasContext","createContext","AtlasProvider","Provider","AtlasConsumer","Consumer","Route","children","atlas","console","log","handleClick","setPath","Link","to","className","activeClassName"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport classnames from 'classnames'\n\n// TODO: MAKE NOT HORRENDOUS\nclass AtlasClass {\n\tconstructor(path) {\n\t\tthis.history = [this.padWithSlash(path || '')]\n\t\tthis.now = 0\n\t\tthis.state = {}\n\t\tthis.path = this.history[0]\n\t}\n\n\tpadWithSlash = (path) => {\n\t\tif (path[0] !== '/') {\n\t\t\tpath = '/' + path\n\t\t}\n\t\treturn path\n\t}\n\n\tsetPath = (path) => {\n\t\tthis.path = this.padWithSlash(path)\n\t\tthis.history.push(this.padWithSlash(path))\n\t\t// typeof window != \"undefined\" && window.location.replace(this.padWithSlash(path))\n\t\tthis.now += 1\n\t\tthis.reRender()\n\t}\t\n\n\tsetState = (state) => {\n\t\tObject.keys(state).forEach(x => {\n\t\t\tthis.state[x] = state[x]\n\t\t})\n\t}\n\tback = () => this.now -= 1\n\tforward = () => this.now += 1\n\n\tequals = (ac2) => {\n\t\treturn true\n\t}\n\n\treRender = () => {}\n}\n\nconst Atlas = new AtlasClass()\n\nexport const AtlasContext = React.createContext(Atlas)\nexport const AtlasProvider = AtlasContext.Provider\nexport const AtlasConsumer = AtlasContext.Consumer\n\nexport const Route = ({ path, children }) => (\n\t<AtlasConsumer>\n\t\t{\n\t\t\t(atlas) => {\n\t\t\t\tconsole.log(atlas == new AtlasClass())\n\t\t\t\tconsole.log(atlas.path !== path)\n\t\t\t\tconsole.log(`path: ${path}`)\n\t\t\t\tconsole.log(`apath: ${atlas.path}`)\n\t\t\t\t// TODO: Support inexact routes\t\n\t\t\t\tif (atlas.path !== path) {\n\t\t\t\t\treturn null\n\t\t\t\t\tconsole.log('far')\n\t\t\t\t}\n\t\t\t\treturn children\n\t\t\t}\n\t\t}\n\t</AtlasConsumer>\n)\n\nconst handleClick = (atlas, path) => {\n\tatlas.setPath(path)\n\tconsole.log(\"clack\")\n}\n\nexport const Link = ({ to, className, children, activeClassName }) => {\n\treturn (\n\t\t<AtlasConsumer>\n\t\t{ \n\t\t\t(atlas) => (\n\t\t\t<a onClick={() => handleClick(atlas, to)} className={classnames('atlas-link', className,  { activeClassName: atlas.path === to })}>\n\t\t\t\t{ children }\n\t\t\t</a>)\n\t\t}\n\t\t</AtlasConsumer>\n\t)\n}\n\n\n\nexport default Atlas\n\n"]},"metadata":{},"sourceType":"module"}