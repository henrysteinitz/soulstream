{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/screen.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport classnames from 'classnames';\nimport { Component } from 'react'; // import PropTypes from 'prop-types'\n\nimport Content from './content.js';\nimport Time from './time.js';\nconst MODES = {\n  'default': \"DEFAULT\",\n  'pocket': \"POCKET\"\n};\nexport default class Screen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      contentIsPaused: true,\n      mode: \"DEFAULT\"\n    });\n  }\n\n  render() {\n    const {\n      state,\n      props\n    } = this;\n    const {\n      on\n    } = props;\n\n    if (!on) {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"screen off\",\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          size: \"fullscreen\",\n          art: \"test_data/album_art/mem.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(\"screen\", \"fullscreen\"),\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        size: \"fullscreen\",\n        art: \"test_data/album_art/mem.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"screen-audio\",\n        src: \"test_data/music/sig.m4a\",\n        ref: \"audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this);\n  }\n\n} // Screen.propTypes = {\n//  \tsize: PropTypes.oneOf([\"full\"]),\n//  \tisCurrent: PropTypes.bool,\n// };\n// TODO\n// - take and render album art and album videos\n//   - consider allowing small album preview to be videos\n// - resize / minimize\n// - render and connect controls\n// - -","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/screen.js"],"names":["classnames","Component","Content","Time","MODES","Screen","contentIsPaused","mode","render","state","props","on"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AAEA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,KAAK,GAAG;AACb,aAAW,SADE;AAEb,YAAU;AAFG,CAAd;AAIA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAErC;AACPK,MAAAA,eAAe,EAAE,IADV;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAFqC;AAAA;;AAO7CC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,IAAzB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAASD,KAAf;;AAEA,QAAI,CAACC,EAAL,EAAS;AACR;;AACA;AACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACC,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC,YAAd;AAA2B,UAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAKA;;AAED,wBACC;AAAK,MAAA,SAAS,EAAEX,UAAU,CAAC,QAAD,EAAW,YAAX,CAA1B;AAAA,8BACC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,YAAd;AAA2B,QAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,GAAG,EAAC,yBAA7B;AAAuD,QAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMA;;AA1B4C,C,CA6B9C;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import classnames from 'classnames'\nimport { Component } from 'react'\n// import PropTypes from 'prop-types'\n\nimport Content from './content.js'\nimport Time from './time.js'\n\nconst MODES = {\n\t'default': \"DEFAULT\",\n\t'pocket': \"POCKET\"\n}\nexport default class Screen extends Component {\n\n\tstate = {\n\t\tcontentIsPaused: true,\n\t\tmode: \"DEFAULT\",\n\t}\n\t\n\trender() {\n\t\tconst { state, props } = this;\n\t\tconst { on } = props;\n\n\t\tif (!on) {\n\t\t\treturn \n\t\t\t(\n\t\t\t\t<div className=\"screen off\" >\n\t\t\t\t\t<Content size=\"fullscreen\" art=\"test_data/album_art/mem.png\" /> \n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classnames(\"screen\", \"fullscreen\")} >\n\t\t\t\t<Content size=\"fullscreen\" art=\"test_data/album_art/mem.png\" /> \n\t\t\t\t<audio id=\"screen-audio\" src=\"test_data/music/sig.m4a\" ref=\"audio\" />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// Screen.propTypes = {\n//  \tsize: PropTypes.oneOf([\"full\"]),\n//  \tisCurrent: PropTypes.bool,\n// };\n\n\n\n\n// TODO\n// - take and render album art and album videos\n//   - consider allowing small album preview to be videos\n// - resize / minimize\n// - render and connect controls\n// - -"]},"metadata":{},"sourceType":"module"}