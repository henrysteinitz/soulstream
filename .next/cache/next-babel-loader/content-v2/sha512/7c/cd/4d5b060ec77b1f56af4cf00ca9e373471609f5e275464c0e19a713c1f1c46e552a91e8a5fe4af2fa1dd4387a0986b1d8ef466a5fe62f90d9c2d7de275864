{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/channel.js\";\nimport { Component } from 'react';\n\nclass ChannelScreen extends Component {\n  render() {\n    /* pictures may incliude images and video */\n    const {\n      pictures\n    } = this.props;\n    return (\n      /*#__PURE__*/\n\n      /* TODO: Support multiple pictures */\n      _jsxDEV(\"div\", {\n        className: \"channel-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pictures[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 4\n      }, this)\n    );\n  }\n\n}\n\nclass ChannelHeader extends Component {\n  render() {\n    const {\n      artist\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-container\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelScreen, {\n        pictures: [artist.pictureUrl]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-name\",\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-location\",\n          children: \"New York, NY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-current\",\n          children: \"Listening to \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default class Channel extends Component {\n  ComponentDidMount() {}\n\n  render() {\n    const {\n      stream,\n      artist\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {\n        artist: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), stream && stream.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        song: track,\n        playingId: playingId,\n        isPlaying: isPlaying,\n        play: play,\n        pause: pause,\n        currentTime: currentTrackTime,\n        totalTime: totalTrackTime,\n        skipTo: skipTo,\n        account: account,\n        artist: track.artists[0],\n        id: track.id,\n        startTrackDragging: startTrackDragging,\n        stopTrackDragging: stopTrackDragging\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/channel.js"],"names":["Component","ChannelScreen","render","pictures","props","ChannelHeader","artist","pictureUrl","name","Channel","ComponentDidMount","stream","map","track","playingId","isPlaying","play","pause","currentTrackTime","totalTrackTime","skipTo","account","artists","id","startTrackDragging","stopTrackDragging"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAGA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACrCE,EAAAA,MAAM,GAAG;AACR;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA;AAAA;;AACC;AACA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACC;AAAK,UAAA,GAAG,EAAED,QAAQ,CAAC,CAAD;AAAlB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFD;AAMA;;AAVoC;;AAatC,MAAME,aAAN,SAA4BL,SAA5B,CAAsC;AACrCE,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEI,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACC,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,CAACE,MAAM,CAACC,UAAR;AAAzB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACED,MAAM,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,eAOC;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPD,eAUC;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAVD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAmBA;;AAtBoC;;AAyBtC,eAAe,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAE9CU,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDR,EAAAA,MAAM,GAAG;AACR,UAAM;AAAES,MAAAA,MAAF;AAAUL,MAAAA;AAAV,QAAqB,KAAKF,KAAhC;AAEA,wBACC;AAAA,8BACC,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,cADD,EAEEK,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACtB,QAAC,KAAD;AACC,QAAA,IAAI,EAAEA,KADP;AAEC,QAAA,SAAS,EAAEC,SAFZ;AAGC,QAAA,SAAS,EAAEC,SAHZ;AAIC,QAAA,IAAI,EAAEC,IAJP;AAKC,QAAA,KAAK,EAAEC,KALR;AAMC,QAAA,WAAW,EAAEC,gBANd;AAOC,QAAA,SAAS,EAAEC,cAPZ;AAQC,QAAA,MAAM,EAAEC,MART;AASC,QAAA,OAAO,EAAEC,OATV;AAUC,QAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CAVT;AAWC,QAAA,EAAE,EAAET,KAAK,CAACU,EAXX;AAYC,QAAA,kBAAkB,EAAEC,kBAZrB;AAaC,QAAA,iBAAiB,EAAEC;AAbpB;AAAA;AAAA;AAAA;AAAA,cADW,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAqBA;;AA9B6C","sourcesContent":["import { Component } from 'react'\n\n\nclass ChannelScreen extends Component {\n\trender() {\n\t\t/* pictures may incliude images and video */\n\t\tconst { pictures } = this.props\n\t\treturn (\n\t\t\t/* TODO: Support multiple pictures */\n\t\t\t<div className=\"channel-screen\">\n\t\t\t\t<img src={pictures[0]} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass ChannelHeader extends Component {\n\trender() {\n\t\tconst { artist } = this.props\n\t\treturn (\n\t\t\t<div className=\"channel-container\">\n\t\t\t\t<ChannelScreen pictures={[artist.pictureUrl]}/>\n\t\t\t\t<div className=\"channel-info\">\n\t\t\t\t\t<div className=\"channel-name\">\n\t\t\t\t\t\t{artist.name}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"channel-location\">\n\t\t\t\t\t\tNew York, NY\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"channel-current\">\n\t\t\t\t\t\tListening to {}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"channel-line\">\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default class Channel extends Component {\n\n\tComponentDidMount() {\n\n\t}\n\n\trender() {\n\t\tconst { stream, artist } = this.props\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ChannelHeader artist={artist} />\n\t\t\t\t{stream && stream.map((track) => (\n\t\t\t\t<Track \n\t\t\t\t\tsong={track} \n\t\t\t\t\tplayingId={playingId} \n\t\t\t\t\tisPlaying={isPlaying} \n\t\t\t\t\tplay={play} \n\t\t\t\t\tpause={pause} \n\t\t\t\t\tcurrentTime={currentTrackTime} \n\t\t\t\t\ttotalTime={totalTrackTime}\n\t\t\t\t\tskipTo={skipTo}\n\t\t\t\t\taccount={account}\n\t\t\t\t\tartist={track.artists[0]}\n\t\t\t\t\tid={track.id}\n\t\t\t\t\tstartTrackDragging={startTrackDragging}\n\t\t\t\t\tstopTrackDragging={stopTrackDragging} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}