{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/stereo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport Helipad from '../lib/helipad/helipad.js';\nimport { Route } from '../lib/atlas/atlas.js';\nimport Left from './left.js';\nimport Mural from './mural.js';\nimport Right from './right.js';\nimport Upload from './upload.js';\nimport { VerseMap } from '../state/lyrics.js';\n\nvar Stereo = /*#__PURE__*/function (_Component) {\n  _inherits(Stereo, _Component);\n\n  var _super = _createSuper(Stereo);\n\n  function Stereo() {\n    var _this;\n\n    _classCallCheck(this, Stereo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isPlaying: false,\n      song: null,\n      currentTrackTime: 0,\n      totalTrackTime: null,\n      scrubbingTrack: false,\n      scrubbingPlayer: false,\n      screenOn: false,\n      typing: false,\n      tracks: _this.props.stream,\n      tracksById: _this.props.tracksById // TODO: move to a global store.\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"timeAnimationInterval\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"play\", function (song) {\n      if (_this.state.song && song.id === _this.state.song.id) {\n        _this.setState({\n          isPlaying: true,\n          currentTrackTime: _this.audioRef.currentTime,\n          totalTrackTime: _this.audioRef.duration\n        }, function () {\n          _this.audioRef.play();\n\n          _this.animateTime();\n\n          setTimeout(function () {\n            return _this.turnScreenOn();\n          }, 70);\n        });\n      } else {\n        clearInterval(_this.timeAnimationInterval);\n\n        _this.setState({\n          isPlaying: true,\n          currentTrackTime: 0,\n          totalTrackTime: _this.audioRef.duration,\n          song: song\n        }, function () {\n          _this.audioRef.play();\n\n          _this.animateTime();\n\n          setTimeout(function () {\n            return _this.turnScreenOn();\n          }, 70);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animateTime\", function () {\n      _this.timeAnimationInterval = setInterval(function () {\n        _this.setState({\n          currentTrackTime: _this.audioRef.currentTime,\n          totalTrackTime: _this.audioRef.duration\n        });\n      }, 40);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopTimeAnimation\", function () {\n      clearInterval(_this.timeAnimationInterval);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pause\", function () {\n      _this.setState({\n        isPlaying: false\n      }, function () {\n        return _this.audioRef.pause();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.state.isPlaying ? _this.pause() : _this.play(_this.state.song);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"beginScrub\", function () {\n      _this.stopTimeAnimation();\n\n      _this.setState({\n        scrubbing: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"endScub\", function () {\n      _this.setState({\n        scrubbing: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"skipTo\", function (time) {\n      var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      _this.audioRef.currentTime = time;\n\n      _this.setState({\n        currentTrackTime: time\n      }, cb);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"turnScreenOn\", function () {\n      return _this.setState({\n        screenOn: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"turnScreenOff\", function () {\n      return _this.setState({\n        screenOn: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleScreen\", function () {\n      return _this.setState({\n        screenOn: !_this.state.screenOn\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSpacebar\", function (e) {\n      if (e.key === ' ' && !_this.state.typing) {\n        e.preventDefault();\n\n        _this.toggle();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addVerse\", function (verse, trackId) {\n      var nextTracksById = _objectSpread({}, _this.state.tracksById);\n\n      nextTracksById[trackid].verses.insert(verse);\n\n      _this.setState({\n        tracksById: nextTracksById\n      }, function () {\n        return _this.syncTracks();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"syncSteamState\", function () {\n      var nextStream = _this.state.tracks.map(function (x) {\n        return _this.state.tracksById[x.id];\n      });\n\n      _this.setState({\n        tracks: nextStream\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Stereo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.addEventListener('keydown', function (e) {\n        return _this2.handleSpacebar(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          song = _this$state.song,\n          isPlaying = _this$state.isPlaying,\n          currentTrackTime = _this$state.currentTrackTime,\n          totalTrackTime = _this$state.totalTrackTime,\n          screenOn = _this$state.screenOn,\n          tracks = _this$state.tracks;\n      var _this$props = this.props,\n          signedIn = _this$props.signedIn,\n          startSession = _this$props.startSession,\n          stream = _this$props.stream,\n          account = _this$props.account,\n          artist = _this$props.artist;\n      var realStream = tracks || stream;\n      return /*#__PURE__*/_jsxDEV(Helipad, {\n        className: \"page-outer-container\",\n        onKeyDown: this.handleSpacebar,\n        modal: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 85\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('page-content', {\n            center: !signedIn\n          }),\n          children: [screenOn && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left fake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Left, {\n            ref: \"left\",\n            toggle: this.toggle,\n            play: this.play,\n            pause: this.pause,\n            nowPlaying: song,\n            isPlaying: isPlaying,\n            signedIn: signedIn,\n            startSession: startSession,\n            currentTrackTime: currentTrackTime,\n            totalTrackTime: totalTrackTime,\n            skipTo: this.skipTo,\n            toggleScreen: this.toggleScreen,\n            screenOn: screenOn,\n            account: account,\n            artist: artist,\n            setTyping: function setTyping(value) {\n              return _this3.setState({\n                typing: value\n              });\n            },\n            addVerse: this.addVerse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this), signedIn && /*#__PURE__*/_jsxDEV(Right, {\n            toggle: this.toggle,\n            play: this.play,\n            pause: this.pause,\n            playingId: song && song.id,\n            isPlaying: isPlaying,\n            signedIn: signedIn,\n            currentTrackTime: currentTrackTime,\n            totalTrackTime: totalTrackTime,\n            skipTo: this.skipTo,\n            stream: realStream,\n            account: account,\n            artist: artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio\",\n            src: song && song.audioUrl,\n            ref: function ref(input) {\n              _this3.audioRef = input;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Stereo;\n}(Component);\n\nexport { Stereo as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/stereo.js"],"names":["Component","ReactDOM","classnames","Helipad","Route","Left","Mural","Right","Upload","VerseMap","Stereo","isPlaying","song","currentTrackTime","totalTrackTime","scrubbingTrack","scrubbingPlayer","screenOn","typing","tracks","props","stream","tracksById","state","id","setState","audioRef","currentTime","duration","play","animateTime","setTimeout","turnScreenOn","clearInterval","timeAnimationInterval","setInterval","pause","stopTimeAnimation","scrubbing","time","cb","e","key","preventDefault","toggle","verse","trackId","nextTracksById","trackid","verses","insert","syncTracks","nextStream","map","x","window","addEventListener","handleSpacebar","signedIn","startSession","account","artist","realStream","center","skipTo","toggleScreen","value","addVerse","audioUrl","input"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport classnames from 'classnames'\nimport Helipad from '../lib/helipad/helipad.js'\nimport { Route } from '../lib/atlas/atlas.js' \n\nimport Left from './left.js'\nimport Mural from './mural.js'\nimport Right from './right.js'\nimport Upload from './upload.js'\n\nimport { VerseMap } from '../state/lyrics.js'\n\n\n\nexport default class Stereo extends Component {\n\n\tstate = {\n\t\tisPlaying: false,\n\t\tsong: null,\n\t\tcurrentTrackTime: 0,\n\t\ttotalTrackTime: null,\n\t\tscrubbingTrack: false,\n\t\tscrubbingPlayer: false,\n\t\tscreenOn: false,\n\t\ttyping: false,\n\t\ttracks: this.props.stream,\n\t\ttracksById: this.props.tracksById\n\t\t// TODO: move to a global store.\n\t}\n\n\ttimeAnimationInterval = null\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', (e) => this.handleSpacebar(e));\n\t}\n\n\tplay = (song) => {\n\t\tif (this.state.song && song.id === this.state.song.id) {\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tcurrentTrackTime: this.audioRef.currentTime, \n\t\t\t\ttotalTrackTime: this.audioRef.duration \n\t\t\t}, () => {\n\t\t\t\tthis.audioRef.play()\n\t\t\t\tthis.animateTime()\n\t\t\t\tsetTimeout(() => this.turnScreenOn(), 70)\n\t\t\t})\n\t\t} else {\n\t\t\tclearInterval(this.timeAnimationInterval)\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tcurrentTrackTime: 0, \n\t\t\t\ttotalTrackTime: this.audioRef.duration,\n\t\t\t\tsong\n\t\t\t}, () => {\n\t\t\t\tthis.audioRef.play()\n\t\t\t\tthis.animateTime()\n\t\t\t\tsetTimeout(() => this.turnScreenOn(), 70)\n\t\t\t})\n\t\t}\n\n\t}\n\n\tanimateTime = () => {\n\t\tthis.timeAnimationInterval = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentTrackTime: this.audioRef.currentTime,\n\t\t\t\ttotalTrackTime: this.audioRef.duration\n\t\t\t})\n\t\t}, 40)\n\t}\n\n\tstopTimeAnimation = () => {\n\t\tclearInterval(this.timeAnimationInterval)\n\t}\n\n\tpause = () => {\n\t\tthis.setState({ isPlaying: false }, () => this.audioRef.pause())\n\t}\n\n\ttoggle = () => {\n\t\tthis.state.isPlaying ? this.pause() : this.play(this.state.song) \n\t}\n\n\tbeginScrub = () => {\n\t\tthis.stopTimeAnimation()\n\t\tthis.setState({ scrubbing: true })\n\t}\n\n\tendScub = () => {\n\t\tthis.setState({ scrubbing: false })\n\t}\n\n\tskipTo = (time, cb = () => {}) => {\n\t\tthis.audioRef.currentTime = time\n\t\tthis.setState({ currentTrackTime: time }, cb)\n\t}\n\n\tturnScreenOn = () => this.setState({ screenOn: true })\n\n\tturnScreenOff = () => this.setState({ screenOn: false })\n\n\ttoggleScreen = () => this.setState({ screenOn: !this.state.screenOn })\n\n\thandleSpacebar = (e) => {\n\t\tif (e.key === ' ' && ! this.state.typing) {\n\t\t\te.preventDefault()\n\t\t\tthis.toggle()\n\t\t}\n\t}\n\n\taddVerse = (verse, trackId) => {\n\t\tconst nextTracksById = {...this.state.tracksById}\n\t\tnextTracksById[trackid].verses.insert(verse)\n\t\tthis.setState({\n\t\t\ttracksById: nextTracksById\n\t\t}, () => this.syncTracks())\n\t}\n\n\tsyncSteamState = () => {\n\t\tconst nextStream = this.state.tracks.map(x => (\n\t\t\tthis.state.tracksById[x.id]\n\t\t))\n\t\tthis.setState({\n\t\t\ttracks: nextStream\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { song, isPlaying, currentTrackTime, totalTrackTime, screenOn, tracks } = this.state\n\t\tconst { signedIn, startSession, stream, account, artist } = this.props\n\n\t\tconst realStream = tracks || stream\n\n\t\treturn (\n\t\t\t<Helipad className=\"page-outer-container\" onKeyDown={this.handleSpacebar} modal={<Upload />}>\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<video autoPlay muted loop className=\"background-video\">\n\t\t\t\t\t\t<source type=\"video/mp4\" src=\"test_data/video/corn.mov\" />\n\t\t\t\t\t</video>\n\t\t\t\t*/}\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<div className=\"background-video-shade\" />\n\t\t\t\t*/}\n{/*\t\t\t\t<Route path=\"/[artist]\">\n\t\t\t\t\t<Mural src=\"test_data/artistsbigbirb.jpg\" />\n\t\t\t\t</Route>*/}\n\t\t\t\t{/*<div className=\"mural-container\">\n\t\t\t\t\t{ screenOn && <div className=\"mural-fake\" /> }\t\n\t\t\t\t\t<Mural />\n\t\t\t\t</div>*/}\n\t\t\t\t<div className={classnames('page-content', { center: !signedIn })}>\t\n\t\t\t\t\t{ screenOn && <div className=\"left fake\" /> }\t\t\n\t\t    \t\t<Left ref=\"left\" \n\t\t    \t\t\ttoggle={this.toggle} \n\t\t    \t\t\tplay={this.play} \n\t\t    \t\t\tpause={this.pause} \n\t\t    \t\t\tnowPlaying={song}\n\t\t    \t\t\tisPlaying={isPlaying}\n\t\t    \t\t\tsignedIn={signedIn}\n\t\t    \t\t\tstartSession={startSession}\n\t\t    \t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\t\ttotalTrackTime={totalTrackTime}\n\t\t    \t\t\tskipTo={this.skipTo}\n\t\t    \t\t\ttoggleScreen={this.toggleScreen}\n\t\t    \t\t\tscreenOn={screenOn}\n\t\t    \t\t\taccount={account} \n\t\t    \t\t\tartist={artist}\n\t\t    \t\t\tsetTyping={(value) => this.setState({ typing: value })}\n\t\t    \t\t\taddVerse={this.addVerse}\n\t\t    \t\t\t/>\n\t\t    \t\t{ \n\t\t    \t\t\tsignedIn && \n\t\t    \t\t\t<Right toggle={this.toggle} \n\t\t    \t\t\t\tplay={this.play} \n\t\t    \t\t\t\tpause={this.pause} \n\t\t    \t\t\t\tplayingId={song && song.id} \n\t\t    \t\t\t\tisPlaying={isPlaying}\n\t\t    \t\t\t\tsignedIn={signedIn}\n\t\t    \t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\t\t\ttotalTrackTime={totalTrackTime}\n\t\t    \t\t\t\tskipTo={this.skipTo}\n\t\t    \t\t\t\tstream={realStream}\n\t\t    \t\t\t\taccount={account}\n\t\t    \t\t\t\tartist={artist} />\n\t\t    \t\t}\n\t\t\t\t\t<audio id=\"audio\" src={song && song.audioUrl} ref={(input) => {this.audioRef = input}} />\n\t\t\t\t</div>\n\t\t\t</Helipad>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}