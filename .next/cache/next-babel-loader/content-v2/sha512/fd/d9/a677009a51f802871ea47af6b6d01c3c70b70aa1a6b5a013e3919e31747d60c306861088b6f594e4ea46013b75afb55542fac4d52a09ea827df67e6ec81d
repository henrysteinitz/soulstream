{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.VerseMap = exports.Verse = void 0;\n\nvar Verse =\n/** @class */\nfunction () {\n  function Verse(lines, timeInterval) {\n    this.lines = lines;\n    this.timeInterval = timeInterval;\n  }\n\n  Verse.prototype.start = function () {\n    return this.timeInterval[0];\n  };\n\n  Verse.prototype.end = function () {\n    return this.timeInterval[1];\n  };\n\n  Verse.prototype.contains = function (time) {\n    return this.start() <= time && this.end() >= time;\n  };\n\n  Verse.prototype.map = function (cb) {\n    return this.lines.map(cb);\n  };\n\n  return Verse;\n}();\n\nexports.Verse = Verse; // Get ready for linetime\n\nvar VerseMap =\n/** @class */\nfunction () {\n  function VerseMap(orderedVerses) {\n    this.verses = orderedVerses.map(function (x) {\n      return new Verse(x.body.split('\\n'), [x.startTime, x.endTime]);\n    });\n    console.log(this.verses);\n  }\n\n  VerseMap.prototype.insert = function (verse) {\n    var _this = this;\n\n    var lastVerse = true;\n    this.verses.forEach(function (v, i) {\n      if (verse.start() < v.start()) {\n        _this.verses.splice(i, 0, verse);\n\n        lastVerse = false;\n        return;\n      }\n    });\n\n    if (lastVerse) {\n      this.verses.push(verse);\n    }\n  };\n\n  VerseMap.prototype.get = function (time) {\n    //bs search not really nes.\n    this.verses.forEach(function (verse) {\n      if (verse.contains(time)) {\n        return verse.lines;\n      }\n    });\n  };\n\n  VerseMap.prototype.getIndex = function (time) {\n    //bs search not really nes.\n    this.verses.forEach(function (verse, i) {\n      if (verse.contains(time)) {\n        return i;\n      }\n    });\n  };\n\n  VerseMap.prototype.map = function (cb) {\n    return this.verses.map(cb);\n  };\n\n  return VerseMap;\n}();\n\nexports.VerseMap = VerseMap;","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/state/lyrics.js"],"names":["exports","__esModule","VerseMap","Verse","lines","timeInterval","prototype","start","end","contains","time","map","cb","orderedVerses","verses","x","body","split","startTime","endTime","console","log","insert","verse","_this","lastVerse","forEach","v","i","splice","push","get","getIndex"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.VerseMap = exports.Verse = void 0;\nvar Verse = /** @class */ (function () {\n    function Verse(lines, timeInterval) {\n        this.lines = lines;\n        this.timeInterval = timeInterval;\n    }\n    Verse.prototype.start = function () {\n        return this.timeInterval[0];\n    };\n    Verse.prototype.end = function () {\n        return this.timeInterval[1];\n    };\n    Verse.prototype.contains = function (time) {\n        return this.start() <= time && this.end() >= time;\n    };\n    Verse.prototype.map = function (cb) {\n        return this.lines.map(cb);\n    };\n    return Verse;\n}());\nexports.Verse = Verse;\n// Get ready for linetime\nvar VerseMap = /** @class */ (function () {\n    function VerseMap(orderedVerses) {\n        this.verses = orderedVerses.map(function (x) {\n            return new Verse(x.body.split('\\n'), [x.startTime, x.endTime]);\n        });\n        console.log(this.verses);\n    }\n    VerseMap.prototype.insert = function (verse) {\n        var _this = this;\n        var lastVerse = true;\n        this.verses.forEach(function (v, i) {\n            if (verse.start() < v.start()) {\n                _this.verses.splice(i, 0, verse);\n                lastVerse = false;\n                return;\n            }\n        });\n        if (lastVerse) {\n            this.verses.push(verse);\n        }\n    };\n    VerseMap.prototype.get = function (time) {\n        //bs search not really nes.\n        this.verses.forEach(function (verse) {\n            if (verse.contains(time)) {\n                return verse.lines;\n            }\n        });\n    };\n    VerseMap.prototype.getIndex = function (time) {\n        //bs search not really nes.\n        this.verses.forEach(function (verse, i) {\n            if (verse.contains(time)) {\n                return i;\n            }\n        });\n    };\n    VerseMap.prototype.map = function (cb) {\n        return this.verses.map(cb);\n    };\n    return VerseMap;\n}());\nexports.VerseMap = VerseMap;\n"]},"metadata":{},"sourceType":"script"}