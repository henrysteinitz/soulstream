{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/artistpage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AtlasConsumer } from '../lib/atlas/atlas.js';\nimport Track from './track';\n\nclass ArtistPageWithAtlas extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      artist: null,\n      newArtistName: \"\"\n    });\n\n    _defineProperty(this, \"handleName\", e => this.setState({\n      newArtistName: e.target.value\n    }));\n  }\n\n  componentDidMount() {\n    if (this.props.atlas.getLastUrlSegment() !== 'new') {\n      fetch('/api/artist/get_artist', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          artistUrl: this.props.atlas.getLastUrlSegment()\n        })\n      }).then(res => {\n        res.json().then(body => {\n          console.log(body);\n          this.setState({\n            artistUrl: body\n          });\n        });\n      }).catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    const {\n      playingId,\n      isPlaying,\n      play,\n      pause,\n      currentTrackTime,\n      totalTrackTime,\n      skipTo,\n      stream,\n      account,\n      atlas\n    } = this.props;\n    const {\n      newArtist,\n      newArtistName\n    } = this.state;\n    const artist = this.state.artist || this.props.artist;\n    const artistUrl = this.props.atlas.getLastUrlSegment();\n    const isNewArtist = artistUrl === 'new';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"big-artist-name right-title\",\n        children: [isNewArtist || artist && artist.name, isNewArtist && /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"artist-name-input right-title\",\n          value: newArtistName,\n          onChange: this.handleName,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-stream\",\n        children: artist && artist.tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          song: track.track,\n          playingId: playingId,\n          isPlaying: isPlaying,\n          play: play,\n          pause: pause,\n          currentTime: currentTrackTime,\n          totalTime: totalTrackTime,\n          skipTo: skipTo,\n          account: account,\n          artist: artist\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default class ArtistPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(AtlasConsumer, {\n      children: atlas => /*#__PURE__*/_jsxDEV(ArtistPageWithAtlas, _objectSpread({\n        atlas: atlas\n      }, this.props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/artistpage.js"],"names":["Component","Link","AtlasConsumer","Track","ArtistPageWithAtlas","artist","newArtistName","e","setState","target","value","componentDidMount","props","atlas","getLastUrlSegment","fetch","method","headers","body","JSON","stringify","artistUrl","then","res","json","console","log","catch","err","render","playingId","isPlaying","play","pause","currentTrackTime","totalTrackTime","skipTo","stream","account","newArtist","state","isNewArtist","name","handleName","tracks","map","track","id","ArtistPage"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AtlasConsumer } from '../lib/atlas/atlas.js'\nimport Track from './track'\n\n\nclass ArtistPageWithAtlas extends Component {\n\n\tstate = {\n\t\tartist: null,\n\t\tnewArtistName : \"\"\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.atlas.getLastUrlSegment() !== 'new') {\n\t\t\tfetch('/api/artist/get_artist', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ \n\t\t\t\t\tartistUrl: this.props.atlas.getLastUrlSegment()\n\t\t\t\t})\n\t\t\t}).then((res) => {\n\t\t\t\tres.json().then(body => {\n\t\t\t\t\tconsole.log(body)\n\t\t\t\t\tthis.setState({ artistUrl: body })\n\t\t\t\t})\n\t\t\t}).catch((err) => console.log(err))\n\t\t}\n\t}\n\n\thandleName = (e) => this.setState({ newArtistName: e.target.value })\n\n\trender() {\n\t\tconst { playingId, isPlaying, play, pause, currentTrackTime, totalTrackTime, skipTo, stream, account, atlas } = this.props\n\t\tconst { newArtist, newArtistName } = this.state\n\t\tconst artist = this.state.artist || this.props.artist\n\n\t\tconst artistUrl = this.props.atlas.getLastUrlSegment()\n\t\tconst isNewArtist = artistUrl === 'new'\n\t\treturn (\n\t\t\t<div className=\"artist-page\">\n\t\t\t\t<div className=\"big-artist-name right-title\">\n\t\t\t\t\t{isNewArtist || (artist && artist.name)}\n\t\t\t\t\t{isNewArtist && <input className=\"artist-name-input right-title\" value={newArtistName} onChange={this.handleName} autoFocus />}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"artist-stream\">\n\t\t\t\t\t{\n\t\t\t\t\t\tartist && artist.tracks.map(track => (\n\t\t\t\t\t\t\t<Track \n\t\t\t\t\t\t\t\tsong={track.track} \n\t\t\t\t\t\t\t\tplayingId={playingId} \n\t\t\t\t\t\t\t\tisPlaying={isPlaying} \t\n\t\t\t\t\t\t\t\tplay={play} \n\t\t\t\t\t\t\t\tpause={pause} \n\t\t\t\t\t\t\t\tcurrentTime={currentTrackTime} \n\t\t\t\t\t\t\t\ttotalTime={totalTrackTime}\n\t\t\t\t\t\t\t\tskipTo={skipTo}\n\t\t\t\t\t\t\t\taccount={account} \n\t\t\t\t\t\t\t\tartist={artist}\n\t\t\t\t\t\t\t\tkey={track.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default class ArtistPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<AtlasConsumer>\n\t\t\t\t{(atlas) => (\n\t\t\t\t\t<ArtistPageWithAtlas atlas={atlas} {...this.props} />\n\t\t\t\t)}\n\t\t\t</AtlasConsumer>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}