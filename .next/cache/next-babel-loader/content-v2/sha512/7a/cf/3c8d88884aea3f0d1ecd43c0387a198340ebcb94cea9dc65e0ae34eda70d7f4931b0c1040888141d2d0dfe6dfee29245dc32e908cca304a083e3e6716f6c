{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/time.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport Draggable from 'react-draggable';\nimport classnames from 'classnames';\n\nvar Time = /*#__PURE__*/function (_Component) {\n  _inherits(Time, _Component);\n\n  var _super = _createSuper(Time);\n\n  function Time() {\n    var _this;\n\n    _classCallCheck(this, Time);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrubbingWidth: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStart\", function (e) {\n      _this.setState({\n        scrubbingWidth: e.clientX - _this.timeRef.getBoundingClientRect().left\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEnd\", function () {\n      _this.setState({\n        scrubbingWidth: 0\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Time, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          screen = _this$props.screen,\n          currentTime = _this$props.currentTime,\n          totalTime = _this$props.totalTime;\n      var scrubbingWidth = this.state.scrubbingWidth;\n      var secretWidth = 10000;\n      var widthValue = scrubbingWidth || currentTime / totalTime * 100;\n      var width = \"calc(\".concat(secretWidth, \"px + \").concat(widthValue, \"%)\");\n      var style = widthValue ? {\n        width: width\n      } : {};\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: function ref(input) {\n            _this2.timeRef = input;\n          },\n          className: classnames(\"time\", {\n            'screen-time': screen\n          }),\n          children: /*#__PURE__*/_jsxDEV(Draggable, {\n            axis: \"x\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-scrubber\",\n              style: style\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Time;\n}(Component);\n\nexport { Time as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/time.js"],"names":["Component","Draggable","classnames","Time","scrubbingWidth","e","setState","clientX","timeRef","getBoundingClientRect","left","props","screen","currentTime","totalTime","state","secretWidth","widthValue","width","style","input"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IAEqBC,I;;;;;;;;;;;;;;;;4DACZ;AACPC,MAAAA,cAAc,EAAE;AADT,K;;kEAIM,UAACC,CAAD,EAAO;AACpB,YAAKC,QAAL,CAAc;AACbF,QAAAA,cAAc,EAAEC,CAAC,CAACE,OAAF,GAAY,MAAKC,OAAL,CAAaC,qBAAb,GAAqCC;AADpD,OAAd;AAGA,K;;gEAEW,YAAM;AACjB,YAAKJ,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACA,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACmC,KAAKO,KADxC;AAAA,UACAC,MADA,eACAA,MADA;AAAA,UACQC,WADR,eACQA,WADR;AAAA,UACqBC,SADrB,eACqBA,SADrB;AAAA,UAEAV,cAFA,GAEmB,KAAKW,KAFxB,CAEAX,cAFA;AAGR,UAAMY,WAAW,GAAG,KAApB;AACA,UAAMC,UAAU,GAAGb,cAAc,IAAMS,WAAW,GAAGC,SAAf,GAA6B,GAAnE;AACA,UAAMI,KAAK,kBAAWF,WAAX,kBAA+BC,UAA/B,OAAX;AACA,UAAME,KAAK,GAAGF,UAAU,GAAG;AAAEC,QAAAA,KAAK,EAALA;AAAF,OAAH,GAAe,EAAvC;AAEA,0BACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACC;AAAK,UAAA,GAAG,EAAE,aAACE,KAAD,EAAW;AAAC,YAAA,MAAI,CAACZ,OAAL,GAAeY,KAAf;AAAqB,WAA3C;AAA6C,UAAA,SAAS,EAAElB,UAAU,CAAC,MAAD,EAAS;AAAE,2BAAeU;AAAjB,WAAT,CAAlE;AAAA,iCACC,QAAC,SAAD;AACC,YAAA,IAAI,EAAC,GADN;AAAA,mCAGC;AAAK,cAAA,SAAS,EAAC,eAAf;AAA+B,cAAA,KAAK,EAAEO;AAAtC;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAWA;;;;EAlCgCnB,S;;SAAbG,I","sourcesContent":["import { Component } from 'react'\nimport Draggable from 'react-draggable'\nimport classnames from 'classnames'\n\nexport default class Time extends Component {\n\tstate = {\n\t\tscrubbingWidth: null\n\t}\n\n\thandleStart = (e) => {\n\t\tthis.setState({\n\t\t\tscrubbingWidth: e.clientX - this.timeRef.getBoundingClientRect().left\n\t\t})\n\t}\n\n\thandleEnd = () => {\n\t\tthis.setState({ scrubbingWidth: 0 })\n\t}\n\n\trender() {\n\t\tconst { screen, currentTime, totalTime } = this.props\n\t\tconst { scrubbingWidth } = this.state\n\t\tconst secretWidth = 10000\n\t\tconst widthValue = scrubbingWidth || ((currentTime / totalTime ) * 100)\n\t\tconst width = `calc(${secretWidth}px + ${(widthValue)}%)`\n\t\tconst style = widthValue ? { width } : {}\n\n\t\treturn (\n\t\t\t<div className=\"time-container\">\n\t\t\t\t<div ref={(input) => {this.timeRef = input}} className={classnames(\"time\", { 'screen-time': screen })}>\n\t\t\t\t\t<Draggable\n\t\t\t\t\t\taxis=\"x\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"time-scrubber\" style={style} />\n\t\t\t\t\t</Draggable>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}