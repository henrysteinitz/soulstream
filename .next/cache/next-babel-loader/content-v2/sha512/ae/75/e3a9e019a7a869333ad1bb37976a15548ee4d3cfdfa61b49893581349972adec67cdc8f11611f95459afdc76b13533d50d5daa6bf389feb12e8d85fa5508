{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/stereo.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport Helipad from '../lib/helipad/helipad.js';\nimport Left from './left.js';\nimport Right from './right.js';\nimport Upload from './upload.js';\nexport default class Stereo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isPlaying: false,\n      song: null,\n      currentTime: 0 // TODO: move to a global store.\n\n    });\n\n    _defineProperty(this, \"intervalId\", null);\n\n    _defineProperty(this, \"play\", song => {\n      if (song.id === this.state.playingId) {\n        this.setState({\n          isPlaying: true\n        }, () => {\n          this.intervalId;\n          this.audioRef.play();\n          this.setStat;\n        });\n      } else {\n        this.setState({\n          isPlaying: true,\n          song\n        }, () => {\n          this.audioRef.play();\n        });\n      }\n    });\n\n    _defineProperty(this, \"pause\", () => {\n      this.setState({\n        isPlaying: false\n      }, () => this.audioRef.pause());\n    });\n\n    _defineProperty(this, \"toggle\", () => {\n      this.state.playing ? this.pause() : this.play();\n    });\n  }\n\n  render() {\n    const {\n      song,\n      isPlaying\n    } = this.state;\n    const {\n      signedIn,\n      startSession\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-outer-container\",\n      children: /*#__PURE__*/_jsxDEV(Helipad, {\n        className: classnames('page-content', {\n          center: !signedIn\n        }),\n        modal: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 83\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left fake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Left, {\n          ref: \"left\",\n          toggle: this.toggle,\n          play: this.play,\n          pause: this.pause,\n          nowPlaying: song,\n          isPlaying: isPlaying,\n          signedIn: signedIn,\n          startSession: startSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), signedIn && /*#__PURE__*/_jsxDEV(Right, {\n          ref: \"right\",\n          toggle: this.toggle,\n          play: this.play,\n          pause: this.pause,\n          playingId: song && song.id,\n          isPlaying: isPlaying,\n          signedIn: signedIn,\n          currentTrackTime: this.audioRef && this.audioRef.currentTime,\n          totalTrackTime: this.audioRef && this.audioRef.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"audio\",\n          src: song && song.audioSrc,\n          ref: input => {\n            this.audioRef = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/stereo.js"],"names":["Component","ReactDOM","classnames","Helipad","Left","Right","Upload","Stereo","isPlaying","song","currentTime","id","state","playingId","setState","intervalId","audioRef","play","setStat","pause","playing","render","signedIn","startSession","props","center","toggle","duration","audioSrc","input"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport classnames from 'classnames'\nimport Helipad from '../lib/helipad/helipad.js'\n\nimport Left from './left.js'\nimport Right from './right.js'\nimport Upload from './upload.js'\n\nexport default class Stereo extends Component {\n\n\tstate = {\n\t\tisPlaying: false,\n\t\tsong: null,\n\t\tcurrentTime: 0\n\n\n\t\t// TODO: move to a global store.\n\t}\n\n\tintervalId = null\n\n\tplay = (song) => {\n\t\tif (song.id === this.state.playingId) {\n\t\t\tthis.setState({ isPlaying: true }, () => {\n\t\t\t\tthis.intervalId\n\t\t\t\tthis.audioRef.play()\n\t\t\t\tthis.setStat\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tsong }, () => {\n\t\t\t\t\tthis.audioRef.play()\n\t\t\t\t})\n\t\t}\n\n\t}\n\n\tpause = () => {\n\t\tthis.setState({ isPlaying: false }, () => this.audioRef.pause())\n\t}\n\n\ttoggle = () => {\n\t\tthis.state.playing ? this.pause() : this.play() \n\t}\n\n\trender() {\n\t\tconst { song, isPlaying } = this.state\n\t\tconst { signedIn, startSession} = this.props\n\n\t\treturn (\n\t\t\t<div className=\"page-outer-container\">\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<video autoPlay muted loop className=\"background-video\">\n\t\t\t\t\t\t<source type=\"video/mp4\" src=\"test_data/video/corn.mov\" />\n\t\t\t\t\t</video>\n\t\t\t\t*/}\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<div className=\"background-video-shade\" />\n\t\t\t\t*/}\n\t\t\t\t<Helipad className={classnames('page-content', { center: !signedIn })} modal={<Upload />}>\n\t\t\t\t\t<div className=\"left fake\" />\n\t\t    \t\t<Left ref=\"left\" \n\t\t    \t\t\ttoggle={this.toggle} \n\t\t    \t\t\tplay={this.play} \n\t\t    \t\t\tpause={this.pause} \n\t\t    \t\t\tnowPlaying={song}\n\t\t    \t\t\tisPlaying={isPlaying}\n\t\t    \t\t\tsignedIn={signedIn}\n\t\t    \t\t\tstartSession={startSession} />\n\t\t    \t\t{ \n\t\t    \t\t\tsignedIn && \n\t\t    \t\t\t<Right ref=\"right\" \n\t\t    \t\t\t\ttoggle={this.toggle} \n\t\t    \t\t\t\tplay={this.play} \n\t\t    \t\t\t\tpause={this.pause} \n\t\t    \t\t\t\tplayingId={song && song.id} \n\t\t    \t\t\t\tisPlaying={isPlaying}\n\t\t    \t\t\t\tsignedIn={signedIn}\n\t\t    \t\t\t\tcurrentTrackTime={this.audioRef && this.audioRef.currentTime}\n\t\t    \t\t\t\ttotalTrackTime={this.audioRef && this.audioRef.duration} />\n\t\t    \t\t}\n\t\t\t\t\t<audio id=\"audio\" src={song && song.audioSrc} ref={(input) => {this.audioRef = input}} />\n\t\t\t\t</Helipad>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}