{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/stereo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport Helipad from '../lib/helipad/helipad.js';\nimport { Route } from '../lib/atlas/atlas.js';\nimport Left from './left.js';\nimport Mural from './mural.js';\nimport Right from './right.js';\nimport Upload from './upload.js';\nimport { VerseMap } from '../state/lyrics.js';\n\nvar mapTracksById = function mapTracksById(tracks) {\n  console.log(tracks);\n  var result = {};\n  tracks.forEach(function (track) {\n    result[track.id] = _objectSpread({}, track);\n    console.log(\"Map tracks by id .verses\");\n    console.log(result[track.id].verses);\n    result[track.id].verses = result[track.id].verses ? new VerseMap(result[track.id].verses) : new VerseMap([]);\n  });\n  return result;\n};\n\nvar Stereo = /*#__PURE__*/function (_Component) {\n  _inherits(Stereo, _Component);\n\n  var _super = _createSuper(Stereo);\n\n  function Stereo() {\n    var _this;\n\n    _classCallCheck(this, Stereo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isPlaying: false,\n      song: null,\n      currentTrackTime: 0,\n      totalTrackTime: null,\n      scrubbingTrack: false,\n      scrubbingPlayer: false,\n      screenOn: false,\n      typing: false,\n      tracks: _this.props.stream,\n      following: new Set(_this.props.account.following ? _this.props.account.following.map(function (x) {\n        return x.artistId;\n      }) : []),\n      tracksById: mapTracksById(_this.props.stream.concat(_this.props.history.map(function (x) {\n        return x.track;\n      }))),\n      queue: [],\n      // list of track ids\\\n      defaultQueue: [],\n      dragTrackId: null,\n      nightMode: true // TODO: move to a global store.\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"timeAnimationInterval\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"play\", function (song) {\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"STREAM\";\n      var ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var trackRef = ref || _this.state.trackRef;\n      var screenRef = song.type === 'VIDEO' ? _this.left.screen.videoRef : _this.audioRef;\n\n      if (_this.state.song && song.id === _this.state.song.id) {\n        _this.setState({\n          isPlaying: true,\n          currentTrackTime: screenRef ? screenRef.currentTime : trackRef.currentTrackTime\n        }, function () {\n          screenRef = song.type === 'VIDEO' ? _this.left.screen.videoRef : _this.audioRef;\n          screenRef && screenRef.play();\n          trackRef && trackRef.play();\n\n          _this.animateTime();\n        });\n      } else {\n        _this.savePlayForHistory(song);\n\n        clearInterval(_this.timeAnimationInterval);\n\n        if (trackRef) {\n          trackRef.pause();\n          trackRef.currentTime = 0;\n        }\n\n        if (source === 'STREAM') {// set default queue.\n        }\n\n        _this.setState({\n          isPlaying: true,\n          currentTrackTime: 0,\n          song: song,\n          trackRef: ref\n        }, function () {\n          screenRef = song.type === 'VIDEO' ? _this.left.screen.videoRef : _this.audioRef;\n\n          if (screenRef) {\n            screenRef.play();\n            screenRef.onended = _this.playNextInQueue;\n          }\n\n          ref && ref.play();\n\n          _this.animateTime();\n\n          _this.setState({\n            totalTrackTime: screenRef ? screenRef.duration : trackRef.duration\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"savePlayForHistory\", function (song) {\n      fetch(\"/api/history/record_play\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          trackId: song.id,\n          accountId: _this.props.account.accountId\n        })\n      }).then(function (res) {\n        res.json().then(function (body) {\n          return;\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"playNextInQueue\", function () {\n      var _this$state = _this.state,\n          queue = _this$state.queue,\n          tracksById = _this$state.tracksById;\n\n      if (queue.length > 0) {\n        _this.play(tracksById[queue.shift()], 'QUEUE');\n\n        _this.setState({\n          queue: queue\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"playQueueTrackByIndex\", function (i) {\n      return function () {\n        var _this$state2 = _this.state,\n            queue = _this$state2.queue,\n            tracksById = _this$state2.tracksById;\n\n        _this.play(tracksById[queue[i]], 'QUEUE');\n\n        _this.setState({\n          queue: queue.slice(i + 1)\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animateTime\", function () {\n      var song = _this.state.song;\n      var ref = song.type === 'VIDEO' ? _this.left.screen.videoRef : _this.audioRef;\n      _this.timeAnimationInterval = setInterval(function () {\n        _this.setState({\n          currentTrackTime: ref.currentTime,\n          totalTrackTime: ref.duration\n        });\n      }, 40);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopTimeAnimation\", function () {\n      clearInterval(_this.timeAnimationInterval);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pause\", function () {\n      var mediaRef = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var _this$state3 = _this.state,\n          song = _this$state3.song,\n          trackRef = _this$state3.trackRef;\n      var screenRef = song.type === 'VIDEO' ? _this.left.screen.videoRef : _this.audioRef;\n\n      _this.setState({\n        isPlaying: false\n      }, function () {\n        screenRef.pause();\n        trackRef && trackRef.pause();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.state.isPlaying ? _this.pause() : _this.play(_this.state.song);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"beginScrub\", function () {\n      _this.stopTimeAnimation();\n\n      _this.setState({\n        scrubbing: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"endScub\", function () {\n      _this.setState({\n        scrubbing: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"skipTo\", function (time) {\n      var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      var _this$state4 = _this.state,\n          song = _this$state4.song,\n          trackRef = _this$state4.trackRef;\n      var screenRef = song.type === 'VIDEO' ? _this.left.screen.videoRef : _this.audioRef;\n\n      if (trackRef) {\n        trackRef.currentTime = time;\n      }\n\n      screenRef.currentTime = time;\n\n      _this.setState({\n        currentTrackTime: time\n      }, cb);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"turnScreenOn\", function () {\n      return _this.setState({\n        screenOn: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"turnScreenOff\", function () {\n      return _this.setState({\n        screenOn: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleScreen\", function () {\n      return _this.setState({\n        screenOn: !_this.state.screenOn\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSpacebar\", function (e) {\n      if (e.key === ' ' && !_this.state.typing) {\n        e.preventDefault();\n\n        _this.toggle();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addVerse\", function (verse, trackId) {\n      var nextTracksById = _objectSpread({}, _this.state.tracksById);\n\n      nextTracksById[trackid].verses.insert(verse);\n\n      _this.setState({\n        tracksById: nextTracksById\n      }, function () {\n        return _this.syncTracks();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"syncSteamState\", function () {\n      var nextStream = _this.state.tracks.map(function (x) {\n        return _this.state.tracksById[x.id];\n      });\n\n      _this.setState({\n        tracks: nextStream\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addToQueue\", function (id) {\n      _this.setState({\n        queue: [].concat(_toConsumableArray(_this.state.queue), [id])\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startTrackDragging\", function (id) {\n      _this.setState({\n        dragTrackId: id\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopTrackDragging\", function (id, e) {\n      _this.setState({\n        dragTrackId: null\n      });\n\n      var queueRect = _this.left.queue.queueDropzone.getBoundingClientRect();\n\n      if (queueRect.left <= e.clientX && e.clientX <= queueRect.right && queueRect.top <= e.clientY && e.clientY <= queueRect.bottom) {\n        _this.addToQueue(id);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"follow\", function (follow) {\n      var nextFollowing = _objectSpread({}, _this.state.following);\n\n      nextFollowing.add(follow.artistId);\n\n      _this.setState({\n        following: nextFollowing\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unfollow\", function (unfollow) {\n      var nextFollowing = _objectSpread({}, _this.state.following);\n\n      nextFollowing.remove(unfollow.artistId);\n\n      _this.setState({\n        following: nextFollowing\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Stereo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.addEventListener('keydown', function (e) {\n        return _this2.handleSpacebar(e);\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        following: new Set(nextProps.account.following ? nextProps.account.following.map(function (x) {\n          return x.artistId;\n        }) : [])\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state5 = this.state,\n          song = _this$state5.song,\n          isPlaying = _this$state5.isPlaying,\n          currentTrackTime = _this$state5.currentTrackTime,\n          totalTrackTime = _this$state5.totalTrackTime,\n          screenOn = _this$state5.screenOn,\n          tracks = _this$state5.tracks,\n          dragTrackId = _this$state5.dragTrackId,\n          nightMode = _this$state5.nightMode,\n          following = _this$state5.following;\n      var _this$props = this.props,\n          signedIn = _this$props.signedIn,\n          startSession = _this$props.startSession,\n          stream = _this$props.stream,\n          account = _this$props.account,\n          artist = _this$props.artist,\n          history = _this$props.history,\n          acc = _this$props.acc;\n      var realStream = tracks || stream;\n      var playingVideo = song && song.type === 'VIDEO';\n      console.log(history);\n      return /*#__PURE__*/_jsxDEV(Helipad, {\n        className: \"page-outer-container\",\n        onKeyDown: this.handleSpacebar,\n        modal: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 85\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('page-content', {\n            center: !signedIn\n          }),\n          children: [screenOn && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames('left', 'fake', {\n              wide: playingVideo\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Left, _defineProperty({\n            ref: \"left\",\n            toggle: this.toggle,\n            play: this.play,\n            pause: this.pause,\n            nowPlaying: song && this.state.tracksById[song.id],\n            isPlaying: isPlaying,\n            signedIn: signedIn,\n            startSession: startSession,\n            currentTrackTime: currentTrackTime,\n            totalTrackTime: totalTrackTime,\n            skipTo: this.skipTo,\n            toggleScreen: this.toggleScreen,\n            screenOn: screenOn,\n            account: account,\n            artist: artist,\n            setTyping: function setTyping(value) {\n              return _this3.setState({\n                typing: value\n              });\n            },\n            addVerse: this.addVerse,\n            dragTrackId: dragTrackId,\n            addToQueue: this.addToQueue,\n            queueTracks: this.state.queue.map(function (id) {\n              return _this3.state.tracksById[id];\n            }),\n            stopTrackDragging: this.stopTrackDragging,\n            playQueueTrackByIndex: this.playQueueTrackByIndex,\n            nightMode: nightMode,\n            playingVideo: playingVideo\n          }, \"ref\", function ref(input) {\n            _this3.left = input;\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 9\n          }, this), signedIn && /*#__PURE__*/_jsxDEV(Right, {\n            toggle: this.toggle,\n            play: this.play,\n            pause: this.pause,\n            playingId: song && song.id,\n            isPlaying: isPlaying,\n            signedIn: signedIn,\n            currentTrackTime: currentTrackTime,\n            totalTrackTime: totalTrackTime,\n            skipTo: this.skipTo,\n            stream: realStream,\n            account: account,\n            artist: artist,\n            startTrackDragging: this.startTrackDragging,\n            stopTrackDragging: this.stopTrackDragging,\n            history: history,\n            following: following\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio\",\n            src: song && song.audioUrl,\n            ref: function ref(input) {\n              _this3.audioRef = input;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Stereo;\n}(Component);\n\nexport { Stereo as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/stereo.js"],"names":["Component","ReactDOM","classnames","Helipad","Route","Left","Mural","Right","Upload","VerseMap","mapTracksById","tracks","console","log","result","forEach","track","id","verses","Stereo","isPlaying","song","currentTrackTime","totalTrackTime","scrubbingTrack","scrubbingPlayer","screenOn","typing","props","stream","following","Set","account","map","x","artistId","tracksById","concat","history","queue","defaultQueue","dragTrackId","nightMode","source","ref","trackRef","state","screenRef","type","left","screen","videoRef","audioRef","setState","currentTime","play","animateTime","savePlayForHistory","clearInterval","timeAnimationInterval","pause","onended","playNextInQueue","duration","fetch","method","headers","body","JSON","stringify","trackId","accountId","then","res","json","length","shift","i","slice","setInterval","mediaRef","stopTimeAnimation","scrubbing","time","cb","e","key","preventDefault","toggle","verse","nextTracksById","trackid","insert","syncTracks","nextStream","queueRect","queueDropzone","getBoundingClientRect","clientX","right","top","clientY","bottom","addToQueue","follow","nextFollowing","add","unfollow","remove","window","addEventListener","handleSpacebar","nextProps","signedIn","startSession","artist","acc","realStream","playingVideo","center","wide","skipTo","toggleScreen","value","addVerse","stopTrackDragging","playQueueTrackByIndex","input","startTrackDragging","audioUrl"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport classnames from 'classnames'\nimport Helipad from '../lib/helipad/helipad.js'\nimport { Route } from '../lib/atlas/atlas.js' \n\nimport Left from './left.js'\nimport Mural from './mural.js'\nimport Right from './right.js'\nimport Upload from './upload.js'\n\nimport { VerseMap } from '../state/lyrics.js'\n\n\nconst mapTracksById = (tracks) => {\n\tconsole.log(tracks)\n\tlet result = {}\n\ttracks.forEach((track) => {\n\t\tresult[track.id] = {...track}\n\t\tconsole.log(\"Map tracks by id .verses\")\n\t\tconsole.log(result[track.id].verses)\n\t\tresult[track.id].verses = result[track.id].verses ? new VerseMap(result[track.id].verses) : new VerseMap([]) \n\t})\n\treturn result\n}\n\nexport default class Stereo extends Component {\n\n\tstate = {\n\t\tisPlaying: false,\n\t\tsong: null,\n\t\tcurrentTrackTime: 0,\n\t\ttotalTrackTime: null,\n\t\tscrubbingTrack: false,\n\t\tscrubbingPlayer: false,\n\t\tscreenOn: false,\n\t\ttyping: false,\n\t\ttracks: this.props.stream,\n\t\tfollowing: new Set(this.props.account.following ? this.props.account.following.map(x => x.artistId) : []),\n\t\ttracksById: mapTracksById(this.props.stream.concat(this.props.history.map(x => x.track))),\n\t\tqueue: [], // list of track ids\\\n\t\tdefaultQueue: [],\n\t\tdragTrackId: null,\n\t\tnightMode: true\n\t\t// TODO: move to a global store.\n\t}\n\n\ttimeAnimationInterval = null\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', (e) => this.handleSpacebar(e));\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.setState({ \n\t\t\tfollowing: new Set(nextProps.account.following ? nextProps.account.following.map(x => x.artistId) : [])\n\t\t})\n\t}\n\n\tplay = (song, source=\"STREAM\", ref=null) => {\n\t\tconst trackRef = ref || this.state.trackRef\n\t\tlet screenRef = song.type === 'VIDEO' ? this.left.screen.videoRef : this.audioRef\n\t\tif (this.state.song && song.id === this.state.song.id) {\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tcurrentTrackTime: screenRef ? screenRef.currentTime : trackRef.currentTrackTime, \n\t\t\t}, () => {\n\t\t\t\tscreenRef = song.type === 'VIDEO' ? this.left.screen.videoRef : this.audioRef\n\t\t\t\tscreenRef && screenRef.play()\n\t\t\t\ttrackRef && trackRef.play()\n\t\t\t\tthis.animateTime()\n\t\t\t})\n\t\t} else {\n\t\t\tthis.savePlayForHistory(song)\n\t\t\tclearInterval(this.timeAnimationInterval)\n\t\t\tif (trackRef) {\n\t\t\t\ttrackRef.pause()\n\t\t\t\ttrackRef.currentTime = 0\n\t\t\t}\n\t\t\tif (source === 'STREAM') {\n\t\t\t\t// set default queue.\n\t\t\t}\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tcurrentTrackTime: 0, \n\t\t\t\tsong,\n\t\t\t\ttrackRef: ref\n\t\t\t}, () => {\n\t\t\t\tscreenRef = song.type === 'VIDEO' ? this.left.screen.videoRef : this.audioRef\n\t\t\t\tif (screenRef) {\n\t\t\t\t\tscreenRef.play()\n\t\t\t\t\tscreenRef.onended = this.playNextInQueue\n\t\t\t\t}\n\t\t\t\tref && ref.play()\n\t\t\t\tthis.animateTime()\n\t\t\t\tthis.setState({totalTrackTime: screenRef ? screenRef.duration : trackRef.duration})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tsavePlayForHistory = (song) => {\n\t\tfetch(`/api/history/record_play`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({ \n\t\t\t\ttrackId: song.id,\n\t\t\t\taccountId: this.props.account.accountId\n\t\t\t})\n\t\t}).then((res) => {\n\t\t\tres.json().then(body => {\n\t\t\t\treturn\n\t\t\t})\n\t\t})\n\t}\n\n\tplayNextInQueue = () => {\n\t\tconst { queue, tracksById } = this.state\n\t\tif (queue.length > 0) {\n\t\t\tthis.play(tracksById[queue.shift()], 'QUEUE')\n\t\t\tthis.setState({ queue })\n\t\t}\n\t}\n\n\tplayQueueTrackByIndex = (i) => () => {\n\t\tlet { queue, tracksById } = this.state\n\t\tthis.play(tracksById[queue[i]], 'QUEUE')\n\t\tthis.setState({ queue: queue.slice(i + 1) })\n\t}\n\n\tanimateTime = () => {\n\t\tconst { song } = this.state\n\t\tconst ref = song.type === 'VIDEO' ? this.left.screen.videoRef : this.audioRef\n\t\tthis.timeAnimationInterval = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentTrackTime: ref.currentTime,\n\t\t\t\ttotalTrackTime: ref.duration\n\t\t\t})\n\t\t}, 40)\n\t}\n\n\tstopTimeAnimation = () => {\n\t\tclearInterval(this.timeAnimationInterval)\n\t}\n\n\tpause = (mediaRef=null) => {\n\t\tconst { song, trackRef } = this.state\n\t\tlet screenRef = song.type === 'VIDEO' ? this.left.screen.videoRef : this.audioRef\n\t\tthis.setState({ isPlaying: false }, () => {\n\t\t\tscreenRef.pause()\n\t\t\ttrackRef && trackRef.pause()\n\t\t})\n\t}\n\n\ttoggle = () => {\n\t\tthis.state.isPlaying ? this.pause() : this.play(this.state.song) \n\t}\n\n\tbeginScrub = () => {\n\t\tthis.stopTimeAnimation()\n\t\tthis.setState({ scrubbing: true })\n\t}\n\n\tendScub = () => {\n\t\tthis.setState({ scrubbing: false })\n\t}\n\n\tskipTo = (time, cb = () => {}) => {\n\t\tconst { song, trackRef } = this.state\n\t\tlet screenRef = song.type === 'VIDEO' ? this.left.screen.videoRef : this.audioRef\n\t\tif (trackRef) { \n\t\t\ttrackRef.currentTime = time\n\t\t}\n\t\tscreenRef.currentTime = time\n\t\tthis.setState({ currentTrackTime: time }, cb)\n\t}\n\n\tturnScreenOn = () => this.setState({ screenOn: true })\n\n\tturnScreenOff = () => this.setState({ screenOn: false })\n\n\ttoggleScreen = () => this.setState({ screenOn: !this.state.screenOn })\n\n\thandleSpacebar = (e) => {\n\t\tif (e.key === ' ' && ! this.state.typing) {\n\t\t\te.preventDefault()\n\t\t\tthis.toggle()\n\t\t}\n\t}\n\n\taddVerse = (verse, trackId) => {\n\t\tconst nextTracksById = {...this.state.tracksById}\n\t\tnextTracksById[trackid].verses.insert(verse)\n\t\tthis.setState({\n\t\t\ttracksById: nextTracksById\n\t\t}, () => this.syncTracks())\n\t}\n\n\tsyncSteamState = () => {\n\t\tconst nextStream = this.state.tracks.map(x => (\n\t\t\tthis.state.tracksById[x.id]\n\t\t))\n\t\tthis.setState({\n\t\t\ttracks: nextStream\n\t\t})\n\t}\n\n\taddToQueue = (id) => {\n\t\tthis.setState({queue: [...this.state.queue, id]})\n\t}\n\n\tstartTrackDragging = (id) => {\n\t\tthis.setState({ dragTrackId: id })\n\t}\n\n\tstopTrackDragging = (id, e) => {\n\t\tthis.setState({ dragTrackId: null })\n\t\tconst queueRect = this.left.queue.queueDropzone.getBoundingClientRect()\n\t\tif (queueRect.left <= e.clientX && \n\t\t\te.clientX<= queueRect.right && \n\t\t\tqueueRect.top <= e.clientY && \n\t\t\te.clientY <= queueRect.bottom) {\n\t\t\t\tthis.addToQueue(id)\t\n\t\t}\n\t}\n\n\tfollow = (follow) => {\n\t\tconst nextFollowing = {...this.state.following}\n\t\tnextFollowing.add(follow.artistId)\n\t\tthis.setState({ following: nextFollowing })\n\t}\n\n\tunfollow = (unfollow) => {\n\t\tconst nextFollowing = {...this.state.following}\n\t\tnextFollowing.remove(unfollow.artistId)\n\t\tthis.setState({ following: nextFollowing })\n\t}\n\n\trender() {\n\t\tconst { song, isPlaying, currentTrackTime, totalTrackTime, screenOn, tracks, dragTrackId, nightMode, following } = this.state\n\t\tconst { signedIn, startSession, stream, account, artist, history, acc } = this.props\n\n\t\tconst realStream = tracks || stream\n\t\tconst playingVideo = song && song.type === 'VIDEO'\n\t\tconsole.log(history)\n\n\t\treturn (\n\t\t\t<Helipad className=\"page-outer-container\" onKeyDown={this.handleSpacebar} modal={<Upload />}>\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<video autoPlay muted loop className=\"background-video\">\n\t\t\t\t\t\t<source type=\"video/mp4\" src=\"test_data/video/corn.mov\" />\n\t\t\t\t\t</video>\n\t\t\t\t*/}\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<div className=\"background-video-shade\" />\n\t\t\t\t*/}\n{/*\t\t\t\t<Route path=\"/[artist]\">\n\t\t\t\t\t<Mural src=\"test_data/artistsbigbirb.jpg\" />\n\t\t\t\t</Route>*/}\n\t\t\t\t{/*<div className=\"mural-container\">\n\t\t\t\t\t{ screenOn && <div className=\"mural-fake\" /> }\t\n\t\t\t\t\t<Mural />\n\t\t\t\t</div>*/}\n\t\t\t\t<div className={classnames('page-content', { center: !signedIn })}>\t\n\t\t\t\t\t{ screenOn && <div className={classnames('left', 'fake', { wide: playingVideo })} /> }\t\t\n\t\t    \t\t<Left ref=\"left\" \n\t\t    \t\t\ttoggle={this.toggle} \n\t\t    \t\t\tplay={this.play} \n\t\t    \t\t\tpause={this.pause} \n\t\t    \t\t\tnowPlaying={song && this.state.tracksById[song.id]}\n\t\t    \t\t\tisPlaying={isPlaying}\n\t\t    \t\t\tsignedIn={signedIn}\n\t\t    \t\t\tstartSession={startSession}\n\t\t    \t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\t\ttotalTrackTime={totalTrackTime}\n\t\t    \t\t\tskipTo={this.skipTo}\n\t\t    \t\t\ttoggleScreen={this.toggleScreen}\n\t\t    \t\t\tscreenOn={screenOn}\n\t\t    \t\t\taccount={account} \n\t\t    \t\t\tartist={artist}\n\t\t    \t\t\tsetTyping={(value) => this.setState({ typing: value })}\n\t\t    \t\t\taddVerse={this.addVerse}\n\t\t    \t\t\tdragTrackId={dragTrackId}\n\t\t    \t\t\taddToQueue={this.addToQueue}\n\t\t    \t\t\tqueueTracks={this.state.queue.map((id) => this.state.tracksById[id])}\n\t\t    \t\t\tstopTrackDragging={this.stopTrackDragging}\n\t\t    \t\t\tplayQueueTrackByIndex={this.playQueueTrackByIndex}\n\t\t    \t\t\tnightMode={nightMode}\n\t\t    \t\t\tplayingVideo={playingVideo}\n\t\t    \t\t\tref={(input) => {this.left = input}}\n\n\t\t    \t\t/>\n\t\t    \t\t{ \n\t\t    \t\t\tsignedIn && \n\t\t    \t\t\t<Right toggle={this.toggle} \n\t\t    \t\t\t\tplay={this.play} \n\t\t    \t\t\t\tpause={this.pause} \n\t\t    \t\t\t\tplayingId={song && song.id} \n\t\t    \t\t\t\tisPlaying={isPlaying}\n\t\t    \t\t\t\tsignedIn={signedIn}\n\t\t    \t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\t\t\ttotalTrackTime={totalTrackTime}\n\t\t    \t\t\t\tskipTo={this.skipTo}\n\t\t    \t\t\t\tstream={realStream}\n\t\t    \t\t\t\taccount={account}\n\t\t    \t\t\t\tartist={artist}\n\t\t    \t\t\t\tstartTrackDragging={this.startTrackDragging}\n\t\t    \t\t\t\tstopTrackDragging={this.stopTrackDragging}\n\t\t    \t\t\t\thistory={history}\n\t\t    \t\t\t\tfollowing={following} />\n\t\t    \t\t}\n\t\t\t\t\t<audio id=\"audio\" src={song && song.audioUrl} ref={(input) => {this.audioRef = input}} />\n\t\t\t\t</div>\n\t\t\t</Helipad>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}