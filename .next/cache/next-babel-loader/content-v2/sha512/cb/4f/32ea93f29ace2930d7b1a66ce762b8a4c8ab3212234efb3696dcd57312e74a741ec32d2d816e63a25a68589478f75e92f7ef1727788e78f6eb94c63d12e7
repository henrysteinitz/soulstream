{"ast":null,"code":"import _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Voice = /*#__PURE__*/function () {\n  function Voice() {\n    _classCallCheck(this, Voice);\n\n    this.synth = window.speechSynthesis;\n    this.context = new (window.AudioContext || window.webkitAudioContext)();\n    this.streamDestination = this.context.createMediaStreamDestination();\n    this.source1 = this.context.createBufferSource();\n    this.source2 = this.context.createBufferSource();\n    this.source3 = this.context.createBufferSource();\n    this.source4 = this.context.createBufferSource();\n    this.bufferSource = this.context.createBufferSource();\n  }\n\n  _createClass(Voice, [{\n    key: \"say\",\n    value: function say(script) {\n      var _this = this;\n\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        console.log('getUserMedia supported.');\n        navigator.mediaDevices.getUserMedia({\n          audio: true\n        }).then(function (stream) {\n          var mediaRecorder = new MediaRecorder(stream);\n          var utterance = new SpeechSynthesisUtterance(script);\n\n          utterance.onend = function () {\n            mediaRecorder.stop();\n\n            mediaRecorder.ondataavailable = function (e) {\n              e.data.arrayBuffer().then(function (buffer) {\n                console.log(buffer);\n\n                _this.context.decodeAudioData(buffer, function (audioBuffer) {\n                  var channelMerger = _this.context.createChannelMerger(4);\n\n                  _this.source1.buffer = audioBuffer;\n                  _this.source2.buffer = copy(audioBuffer);\n                  _this.source3.buffer = copy(audioBuffer);\n                  _this.source4.buffer = copY(audioBuffer);\n\n                  var delay1 = _this.context.createDelay(1.0);\n\n                  var delay2 = _this.context.createDelay(2.0);\n\n                  var delay3 = _this.context.createDelay(3.0);\n\n                  var delay4 = _this.context.createDelay(4.0);\n\n                  _this.source1.connect(delay1);\n\n                  _this.source2.connect(delay2);\n\n                  _this.source3.connect(delay3);\n\n                  _this.source4.connect(delay4);\n\n                  delay1.connect(channelMerger, 0, 0);\n                  delay2.connect(channelMerger, 0, 1);\n                  delay3.connect(channelMerger, 0, 2);\n                  delay4.connect(channelMerger, 0, 3);\n                  channelMerger.connect(_this.context.destination);\n\n                  _this.source1.start();\n\n                  _this.source2.start(); // this.source3.start()\n                  // this.source4.start()\n\n                });\n              });\n            };\n          };\n\n          mediaRecorder.start();\n\n          _this.synth.speak(utterance);\n        });\n      }\n    }\n  }, {\n    key: \"loop\",\n    value: function loop() {\n      if (!window) {\n        return;\n      }\n\n      return;\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      if (!window) {\n        return;\n      }\n\n      return;\n    }\n  }]);\n\n  return Voice;\n}();\n\nexport { Voice as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/lib/voice/voice.js"],"names":["Voice","synth","window","speechSynthesis","context","AudioContext","webkitAudioContext","streamDestination","createMediaStreamDestination","source1","createBufferSource","source2","source3","source4","bufferSource","script","navigator","mediaDevices","getUserMedia","console","log","audio","then","stream","mediaRecorder","MediaRecorder","utterance","SpeechSynthesisUtterance","onend","stop","ondataavailable","e","data","arrayBuffer","buffer","decodeAudioData","audioBuffer","channelMerger","createChannelMerger","copy","copY","delay1","createDelay","delay2","delay3","delay4","connect","destination","start","speak"],"mappings":"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","sourcesContent":["export default class Voice {\n\n\tconstructor() {\n\t\tthis.synth = window.speechSynthesis\n\t\tthis.context = new (window.AudioContext || window.webkitAudioContext)()\n\t\tthis.streamDestination = this.context.createMediaStreamDestination()\n\t\tthis.source1 = this.context.createBufferSource()\n\t\tthis.source2 = this.context.createBufferSource()\n\t\tthis.source3 = this.context.createBufferSource()\n\t\tthis.source4 = this.context.createBufferSource()\n\t\tthis.bufferSource = this.context.createBufferSource()\n\t}\n\n\tsay(script) {\n\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n   \t\t\tconsole.log('getUserMedia supported.');\n   \t\t\tnavigator.mediaDevices.getUserMedia ({ audio: true })\n      \t\t.then((stream) => {\n      \t\t\tconst mediaRecorder = new MediaRecorder(stream);\n      \t\t\tconst utterance = new SpeechSynthesisUtterance(script);\n      \t\t\tutterance.onend = () => {\n      \t\t\t\tmediaRecorder.stop()\n      \t\t\t\tmediaRecorder.ondataavailable = (e) => {\n\t      \t\t\t\te.data.arrayBuffer().then((buffer) => {\n\t      \t\t\t\t\tconsole.log(buffer)\n\t      \t\t\t\t\tthis.context.decodeAudioData(buffer, (audioBuffer) => {\n\t      \t\t\t\t\t\tconst channelMerger = this.context.createChannelMerger(4)\n\n\t\t  \t\t\t\t\t\tthis.source1.buffer = audioBuffer\n\t\t      \t\t\t\t\tthis.source2.buffer = copy(audioBuffer)\n\t\t      \t\t\t\t\tthis.source3.buffer = copy(audioBuffer)\n\t\t      \t\t\t\t\tthis.source4.buffer = copY(audioBuffer)\n\t\t      \t\t\t\t\tconst delay1 = this.context.createDelay(1.0)\n\t\t      \t\t\t\t\tconst delay2 = this.context.createDelay(2.0)\n\t\t      \t\t\t\t\tconst delay3 = this.context.createDelay(3.0)\n\t\t      \t\t\t\t\tconst delay4 = this.context.createDelay(4.0)\n\t\t      \t\t\t\t\tthis.source1.connect(delay1)\n\t\t      \t\t\t\t\tthis.source2.connect(delay2)\n\t\t      \t\t\t\t\tthis.source3.connect(delay3)\n\t\t      \t\t\t\t\tthis.source4.connect(delay4)\n\n\t\t      \t\t\t\t\tdelay1.connect(channelMerger, 0, 0)\n\t\t      \t\t\t\t\tdelay2.connect(channelMerger, 0, 1)\n\t\t      \t\t\t\t\tdelay3.connect(channelMerger, 0, 2)\n\t\t      \t\t\t\t\tdelay4.connect(channelMerger, 0, 3)\n\t\t      \t\t\t\t\tchannelMerger.connect(this.context.destination)\n\t\t      \t\t\t\t\tthis.source1.start()\n\t\t      \t\t\t\t\tthis.source2.start()\n\t\t      \t\t\t\t\t// this.source3.start()\n\t\t      \t\t\t\t\t// this.source4.start()\n\t      \t\t\t\t\t})\n\t      \t\t\t\t})\n      \t\t\t\t}\n      \t\t\t}\n\n      \t\t\tmediaRecorder.start()\n      \t\t\tthis.synth.speak(utterance)\n      \t\t})\n\n      \t}\n\t}\n\n\tloop() {\n\t\tif (!window) {\n\t\t\treturn\n\t\t}\n\t\treturn\n\t}\n\n\tsave() {\n\t\tif (!window) {\n\t\t\treturn\n\t\t}\n\t\treturn\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}