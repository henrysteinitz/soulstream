{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/crowd.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nexport var testComments = [{\n  message: 'Yoooooooo',\n  author: 'Ab',\n  id: 1,\n  remainingTime: 3\n}, {\n  message: 'yeah ab I want to fuck you good. Abadelic style.',\n  author: 'Henry',\n  id: 2,\n  remainingTime: 4\n}];\n\nvar Crowd = /*#__PURE__*/function (_Component) {\n  _inherits(Crowd, _Component);\n\n  var _super = _createSuper(Crowd);\n\n  function Crowd() {\n    var _this;\n\n    _classCallCheck(this, Crowd);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      // map comments ids to hidden = {true, false}\n      // TODO: nest...?\n      comment: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeRemainingTime\", function (comment) {\n      // TODO: figure it out, kiiid\n      return comment.remainingTime;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleComment\", function (e) {\n      _this.setState({\n        comment: e.target.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Crowd, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(_ref) {\n      var _this2 = this;\n\n      var props = _ref.props;\n      props.comments.forEach(function (comment) {\n        setTimeout(function () {\n          return _this2.setState(_defineProperty({}, comment.id, true));\n        }, _this2.computeRemainingTime(comment));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var comments = this.props.comments;\n      var _this$state = this.state,\n          hiddenById = _this$state.hiddenById,\n          comment = _this$state.comment;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crowd\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crowd-speak\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\",\n            value: comment,\n            onChange: this.handleComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crowd-chat\",\n          children: comments.filter(function (x) {\n            return !hiddenById[x.id];\n          }).map(function (comment) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: comment.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 8\n              }, _this3), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: comment.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 8\n              }, _this3)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 7\n            }, _this3);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Crowd;\n}(Component);\n\nexport { Crowd as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/crowd.js"],"names":["Component","testComments","message","author","id","remainingTime","Crowd","comment","e","setState","target","value","props","comments","forEach","setTimeout","computeRemainingTime","state","hiddenById","handleComment","filter","x","map"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAGA,OAAO,IAAMC,YAAY,GAAG,CAC3B;AACCC,EAAAA,OAAO,EAAE,WADV;AAECC,EAAAA,MAAM,EAAE,IAFT;AAGCC,EAAAA,EAAE,EAAE,CAHL;AAICC,EAAAA,aAAa,EAAE;AAJhB,CAD2B,EAO3B;AACCH,EAAAA,OAAO,EAAE,kDADV;AAECC,EAAAA,MAAM,EAAE,OAFT;AAGCC,EAAAA,EAAE,EAAE,CAHL;AAICC,EAAAA,aAAa,EAAE;AAJhB,CAP2B,CAArB;;IAecC,K;;;;;;;;;;;;;;;;4DAEZ;AACP;AACA;AACAC,MAAAA,OAAO,EAAE;AAHF,K;;2EAYe,UAACA,OAAD,EAAa;AACnC;AACA,aAAOA,OAAO,CAACF,aAAf;AACA,K;;oEAEe,UAACG,CAAD,EAAO;AACtB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAEC,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd;AACA,K;;;;;;;4CAb4B;AAAA;;AAAA,UAATC,KAAS,QAATA,KAAS;AAC5BA,MAAAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuB,UAAAP,OAAO,EAAI;AACjCQ,QAAAA,UAAU,CAAC;AAAA,iBAAM,MAAI,CAACN,QAAL,qBAAgBF,OAAO,CAACH,EAAxB,EAA6B,IAA7B,EAAN;AAAA,SAAD,EAA4C,MAAI,CAACY,oBAAL,CAA0BT,OAA1B,CAA5C,CAAV;AACA,OAFD;AAGA;;;6BAWQ;AAAA;;AAAA,UACAM,QADA,GACa,KAAKD,KADlB,CACAC,QADA;AAAA,wBAEwB,KAAKI,KAF7B;AAAA,UAEAC,UAFA,eAEAA,UAFA;AAAA,UAEYX,OAFZ,eAEYA,OAFZ;AAGR,0BACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACC;AAAO,YAAA,WAAW,EAAC,EAAnB;AAAsB,YAAA,KAAK,EAAEA,OAA7B;AAAsC,YAAA,QAAQ,EAAE,KAAKY;AAArD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACEN,QAAQ,CAACO,MAAT,CAAgB,UAAAC,CAAC;AAAA,mBAAI,CAACH,UAAU,CAACG,CAAC,CAACjB,EAAH,CAAf;AAAA,WAAjB,EAAwCkB,GAAxC,CAA4C,UAAAf,OAAO;AAAA,gCACnD;AAAA,sCACC;AAAA,0BACEA,OAAO,CAACL;AADV;AAAA;AAAA;AAAA;AAAA,wBADD,eAIC;AAAA,0BACEK,OAAO,CAACJ;AADV;AAAA;AAAA;AAAA;AAAA,wBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,sBADmD;AAAA,WAAnD;AADF;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAmBA;;;;EA7CiCH,S;;SAAdM,K","sourcesContent":["import { Component } from 'react'\n\n\nexport const testComments = [\n\t{\n\t\tmessage: 'Yoooooooo',\n\t\tauthor: 'Ab',\n\t\tid: 1,\n\t\tremainingTime: 3\n\t},\n\t{\n\t\tmessage: 'yeah ab I want to fuck you good. Abadelic style.',\n\t\tauthor: 'Henry',\n\t\tid: 2,\n\t\tremainingTime: 4 \n\t}\n]\n\nexport default class Crowd extends Component {\n\t\n\tstate = {\n\t\t// map comments ids to hidden = {true, false}\n\t\t// TODO: nest...?\n\t\tcomment: ''\n\t}\n\n\tcomponentDidMount({ props }) {\n\t\tprops.comments.forEach(comment => {\n\t\t\tsetTimeout(() => this.setState({[comment.id]: true}), this.computeRemainingTime(comment))\n\t\t})\n\t}\n\n\tcomputeRemainingTime = (comment) => {\n\t\t// TODO: figure it out, kiiid\n\t\treturn comment.remainingTime\n\t}\n\n\thandleComment = (e) => {\n\t\tthis.setState({ comment: e.target.value })\n\t}\n\n\trender() {\n\t\tconst { comments } = this.props\n\t\tconst { hiddenById, comment } = this.state\n\t\treturn (\n\t\t\t<div className=\"crowd\">\n\t\t\t\t<div className=\"crowd-speak\">\n\t\t\t\t\t<input placeholder=\"\" value={comment} onChange={this.handleComment} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"crowd-chat\">\n\t\t\t\t\t{comments.filter(x => !hiddenById[x.id]).map(comment => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{comment.message}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{comment.author}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}