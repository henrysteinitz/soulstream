{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/henrysteinitz/Desktop/soulstream/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrysteinitz/Desktop/soulstream/components/stereo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport Helipad from '../lib/helipad/helipad.js';\nimport Left from './left.js';\nimport Right from './right.js';\nimport Upload from './upload.js';\n\nvar Stereo = /*#__PURE__*/function (_Component) {\n  _inherits(Stereo, _Component);\n\n  var _super = _createSuper(Stereo);\n\n  function Stereo() {\n    var _this;\n\n    _classCallCheck(this, Stereo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isPlaying: false,\n      song: null,\n      currentTrackTime: 0,\n      totalTrackTime: null,\n      scrubbingTrack: false,\n      scrubbingPlayer: false // TODO: move to a global store.\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"timeAnimationInterval\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"play\", function (song) {\n      if (_this.state.song && song.id === _this.state.song.id) {\n        _this.setState({\n          isPlaying: true,\n          currentTrackTime: _this.audioRef.currentTime,\n          totalTrackTime: _this.audioRef.duration\n        }, function () {\n          _this.audioRef.play();\n\n          _this.animateTime();\n        });\n      } else {\n        clearInterval(_this.timeAnimationInterval);\n\n        _this.setState({\n          isPlaying: true,\n          currentTrackTime: 0,\n          totalTrackTime: _this.audioRef.duration,\n          song: song\n        }, function () {\n          _this.audioRef.play();\n\n          _this.animateTime();\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animateTime\", function () {\n      _this.timeAnimationInterval = setInterval(function () {\n        _this.setState({\n          currentTrackTime: _this.audioRef.currentTime,\n          totalTrackTime: _this.audioRef.duration\n        });\n      }, 20);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopTimeAnimation\", function () {\n      clearInterval(_this.timeAnimationInterval);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pause\", function () {\n      _this.setState({\n        isPlaying: false\n      }, function () {\n        return _this.audioRef.pause();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.state.playing ? _this.pause() : _this.play();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"beginScrub\", function () {\n      _this.stopTimeAnimation();\n\n      _this.setState({\n        scrubbing: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"endScub\", function () {\n      _this.setState({\n        scrubbing: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"skipTo\", function (time, cb) {\n      console.log(time);\n      _this.audioRef.currentTime = time;\n      cb();\n    });\n\n    return _this;\n  }\n\n  _createClass(Stereo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          song = _this$state.song,\n          isPlaying = _this$state.isPlaying,\n          currentTrackTime = _this$state.currentTrackTime,\n          totalTrackTime = _this$state.totalTrackTime;\n      var _this$props = this.props,\n          signedIn = _this$props.signedIn,\n          startSession = _this$props.startSession;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-outer-container\",\n        children: /*#__PURE__*/_jsxDEV(Helipad, {\n          className: classnames('page-content', {\n            center: !signedIn\n          }),\n          modal: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 83\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left fake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Left, {\n            ref: \"left\",\n            toggle: this.toggle,\n            play: this.play,\n            pause: this.pause,\n            nowPlaying: song,\n            isPlaying: isPlaying,\n            signedIn: signedIn,\n            startSession: startSession,\n            currentTrackTime: currentTrackTime,\n            totalTrackTime: totalTrackTime,\n            skipTo: this.skipTo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this), signedIn && /*#__PURE__*/_jsxDEV(Right, {\n            ref: \"right\",\n            toggle: this.toggle,\n            play: this.play,\n            pause: this.pause,\n            playingId: song && song.id,\n            isPlaying: isPlaying,\n            signedIn: signedIn,\n            currentTrackTime: currentTrackTime,\n            totalTrackTime: totalTrackTime,\n            skipTo: this.skipTo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio\",\n            src: song && song.audioSrc,\n            ref: function ref(input) {\n              _this2.audioRef = input;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Stereo;\n}(Component);\n\nexport { Stereo as default };","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/soulstream/components/stereo.js"],"names":["Component","ReactDOM","classnames","Helipad","Left","Right","Upload","Stereo","isPlaying","song","currentTrackTime","totalTrackTime","scrubbingTrack","scrubbingPlayer","state","id","setState","audioRef","currentTime","duration","play","animateTime","clearInterval","timeAnimationInterval","setInterval","pause","playing","stopTimeAnimation","scrubbing","time","cb","console","log","props","signedIn","startSession","center","toggle","skipTo","audioSrc","input"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport classnames from 'classnames'\nimport Helipad from '../lib/helipad/helipad.js'\n\nimport Left from './left.js'\nimport Right from './right.js'\nimport Upload from './upload.js'\n\nexport default class Stereo extends Component {\n\n\tstate = {\n\t\tisPlaying: false,\n\t\tsong: null,\n\t\tcurrentTrackTime: 0,\n\t\ttotalTrackTime: null,\n\t\tscrubbingTrack: false,\n\t\tscrubbingPlayer: false,\n\t\t// TODO: move to a global store.\n\t}\n\n\ttimeAnimationInterval = null\n\n\tplay = (song) => {\n\t\tif (this.state.song && song.id === this.state.song.id) {\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tcurrentTrackTime: this.audioRef.currentTime, \n\t\t\t\ttotalTrackTime: this.audioRef.duration \n\t\t\t}, () => {\n\t\t\t\tthis.audioRef.play()\n\t\t\t\tthis.animateTime()\n\t\t\t})\n\t\t} else {\n\t\t\tclearInterval(this.timeAnimationInterval)\n\t\t\tthis.setState({ \n\t\t\t\tisPlaying: true, \n\t\t\t\tcurrentTrackTime: 0, \n\t\t\t\ttotalTrackTime: this.audioRef.duration,\n\t\t\t\tsong\n\t\t\t}, () => {\n\t\t\t\tthis.audioRef.play()\n\t\t\t\tthis.animateTime()\n\t\t\t})\n\t\t}\n\n\t}\n\n\tanimateTime = () => {\n\t\tthis.timeAnimationInterval = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentTrackTime: this.audioRef.currentTime,\n\t\t\t\ttotalTrackTime: this.audioRef.duration\n\t\t\t})\n\t\t}, 20)\n\t}\n\n\tstopTimeAnimation = () => {\n\t\tclearInterval(this.timeAnimationInterval)\n\t}\n\n\tpause = () => {\n\t\tthis.setState({ isPlaying: false }, () => this.audioRef.pause())\n\t}\n\n\ttoggle = () => {\n\t\tthis.state.playing ? this.pause() : this.play() \n\t}\n\n\tbeginScrub = () => {\n\t\tthis.stopTimeAnimation()\n\t\tthis.setState({ scrubbing: true })\n\t}\n\n\tendScub = () => {\n\t\tthis.setState({ scrubbing: false })\n\t}\n\n\tskipTo = (time, cb) => {\n\t\tconsole.log(time)\n\t\tthis.audioRef.currentTime = time\n\t\tcb()\n\t}\n\n\trender() {\n\t\tconst { song, isPlaying, currentTrackTime, totalTrackTime } = this.state\n\t\tconst { signedIn, startSession} = this.props\n\n\t\treturn (\n\t\t\t<div className=\"page-outer-container\">\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<video autoPlay muted loop className=\"background-video\">\n\t\t\t\t\t\t<source type=\"video/mp4\" src=\"test_data/video/corn.mov\" />\n\t\t\t\t\t</video>\n\t\t\t\t*/}\n\t\t\t\t{/*\n\t\t\t\t\tsignedIn ||\n\t\t\t\t\t<div className=\"background-video-shade\" />\n\t\t\t\t*/}\n\t\t\t\t<Helipad className={classnames('page-content', { center: !signedIn })} modal={<Upload />}>\n\t\t\t\t\t<div className=\"left fake\" />\n\t\t    \t\t<Left ref=\"left\" \n\t\t    \t\t\ttoggle={this.toggle} \n\t\t    \t\t\tplay={this.play} \n\t\t    \t\t\tpause={this.pause} \n\t\t    \t\t\tnowPlaying={song}\n\t\t    \t\t\tisPlaying={isPlaying}\n\t\t    \t\t\tsignedIn={signedIn}\n\t\t    \t\t\tstartSession={startSession}\n\t\t    \t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\t\ttotalTrackTime={totalTrackTime}\n\t\t    \t\t\tskipTo={this.skipTo} />\n\t\t    \t\t{ \n\t\t    \t\t\tsignedIn && \n\t\t    \t\t\t<Right ref=\"right\" \n\t\t    \t\t\t\ttoggle={this.toggle} \n\t\t    \t\t\t\tplay={this.play} \n\t\t    \t\t\t\tpause={this.pause} \n\t\t    \t\t\t\tplayingId={song && song.id} \n\t\t    \t\t\t\tisPlaying={isPlaying}\n\t\t    \t\t\t\tsignedIn={signedIn}\n\t\t    \t\t\t\tcurrentTrackTime={currentTrackTime}\n\t\t    \t\t\t\ttotalTrackTime={totalTrackTime}\n\t\t    \t\t\t\tskipTo={this.skipTo} />\n\t\t    \t\t}\n\t\t\t\t\t<audio id=\"audio\" src={song && song.audioSrc} ref={(input) => {this.audioRef = input}} />\n\t\t\t\t</Helipad>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}